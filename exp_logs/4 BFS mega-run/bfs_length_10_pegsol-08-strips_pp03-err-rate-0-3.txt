> Solving the next problem at: 2024-09-26 12:18:24 UTC
> Search algorithm: astar
> Instance ID=pegsol-08-strips/pp03-err-rate-0-3
> Plan length=10
> Domain class: pegsol-08-strips
> Instance name: pp03-err-rate-0-3
> Ground plan:
['(jump-new-move pos-2-4 pos-3-4 pos-4-4)', '(end-move pos-4-4)', '(jump-new-move pos-3-3 pos-2-3 pos-1-3)', '(end-move pos-1-3)', '(jump-new-move pos-4-4 pos-4-3 pos-4-2)', '(jump-continue-move pos-4-2 pos-3-2 pos-2-2)', '(end-move pos-2-2)', '(jump-new-move pos-2-1 pos-2-2 pos-2-3)', '(end-move pos-2-3)', '(jump-new-move pos-1-3 pos-2-3 pos-3-3)']
> Lifted plan:
['jump-new-move', 'end-move', 'jump-new-move', 'end-move', 'jump-new-move', 'jump-continue-move', 'end-move', 'jump-new-move', 'end-move', 'jump-new-move']
>>>  Vanilla ground repair:
jump-continue-move,(free ?over),precPos,-1


>>>>  A* iteration 200  <<<<

> Fringe size: 6425
> First 20 nodes: (D:7,C:1), (D:6,C:1), (D:6,C:1), (D:6,C:1), (D:6,C:1), (D:6,C:1), (D:6,C:1), (D:6,C:1), (D:6,C:1), (D:6,C:1), (D:6,C:1), (D:6,C:1), (D:6,C:1), (D:6,C:1), (D:6,C:1), (D:6,C:1), (D:6,C:1), (D:6,C:1), (D:6,C:1), (D:6,C:1)

> Node instance:
> Depth=6
> Ground actions: ['(jump-new-move pos-2-4 pos-2-3 pos-2-2)', '(end-move pos-2-2)', '(jump-new-move pos-4-3 pos-3-3 pos-2-3)', '(end-move pos-2-3)', '(jump-new-move pos-3-2 pos-2-2 pos-1-2)', '(jump-continue-move pos-1-2 pos-2-2 pos-3-2)']
> Next lifted action: end-move
> Repair set:
jump-new-move,(occupied ?over),effPos,1
> g_cost=1
> h_cost=0
> f_cost=1
> #neighbours=33

>>>>  A* iteration 400  <<<<

> Fringe size: 11207
> First 20 nodes: (D:9,C:1), (D:8,C:1), (D:6,C:1), (D:6,C:1), (D:6,C:1), (D:6,C:1), (D:6,C:1), (D:6,C:1), (D:6,C:1), (D:6,C:1), (D:6,C:1), (D:6,C:1), (D:6,C:1), (D:6,C:1), (D:6,C:1), (D:6,C:1), (D:6,C:1), (D:6,C:1), (D:6,C:1), (D:6,C:1)

> Node instance:
> Depth=8
> Ground actions: ['(jump-new-move pos-2-4 pos-3-4 pos-4-4)', '(end-move pos-4-4)', '(jump-new-move pos-4-3 pos-4-4 pos-4-5)', '(end-move pos-4-5)', '(jump-new-move pos-3-3 pos-2-3 pos-1-3)', '(jump-continue-move pos-1-3 pos-2-3 pos-3-3)', '(end-move pos-3-3)', '(jump-new-move pos-4-4 pos-4-5 pos-4-6)']
> Next lifted action: end-move
> Repair set:
jump-new-move,(occupied ?over),effPos,1
> g_cost=1
> h_cost=0
> f_cost=1
> #neighbours=33

>>>>  A* iteration 600  <<<<

> Fringe size: 16339
> First 20 nodes: (D:9,C:1), (D:8,C:1), (D:8,C:1), (D:6,C:1), (D:6,C:1), (D:6,C:1), (D:6,C:1), (D:6,C:1), (D:6,C:1), (D:6,C:1), (D:6,C:1), (D:6,C:1), (D:6,C:1), (D:6,C:1), (D:6,C:1), (D:6,C:1), (D:6,C:1), (D:6,C:1), (D:6,C:1), (D:6,C:1)

> Node instance:
> Depth=8
> Ground actions: ['(jump-new-move pos-2-4 pos-3-4 pos-4-4)', '(end-move pos-4-4)', '(jump-new-move pos-4-3 pos-4-4 pos-4-5)', '(end-move pos-4-5)', '(jump-new-move pos-2-3 pos-3-3 pos-4-3)', '(jump-continue-move pos-4-3 pos-3-3 pos-2-3)', '(end-move pos-2-3)', '(jump-new-move pos-4-4 pos-3-4 pos-2-4)']
> Next lifted action: end-move
> Repair set:
jump-new-move,(occupied ?over),effPos,1
> g_cost=1
> h_cost=0
> f_cost=1
> #neighbours=33

>>>>  A* iteration 800  <<<<

> Fringe size: 21059
> First 20 nodes: (D:9,C:1), (D:8,C:1), (D:8,C:1), (D:6,C:1), (D:6,C:1), (D:6,C:1), (D:6,C:1), (D:6,C:1), (D:6,C:1), (D:6,C:1), (D:6,C:1), (D:6,C:1), (D:6,C:1), (D:6,C:1), (D:6,C:1), (D:6,C:1), (D:6,C:1), (D:6,C:1), (D:6,C:1), (D:6,C:1)

> Node instance:
> Depth=8
> Ground actions: ['(jump-new-move pos-2-4 pos-2-3 pos-2-2)', '(end-move pos-2-2)', '(jump-new-move pos-4-3 pos-3-3 pos-2-3)', '(end-move pos-2-3)', '(jump-new-move pos-2-2 pos-2-3 pos-2-4)', '(jump-continue-move pos-2-4 pos-2-3 pos-2-2)', '(end-move pos-2-2)', '(jump-new-move pos-3-2 pos-2-2 pos-1-2)']
> Next lifted action: end-move
> Repair set:
jump-new-move,(occupied ?over),effPos,1
> g_cost=1
> h_cost=0
> f_cost=1
> #neighbours=33

>>>>  A* iteration 1000  <<<<

> Fringe size: 25709
> First 20 nodes: (D:7,C:1), (D:6,C:1), (D:6,C:1), (D:6,C:1), (D:6,C:1), (D:6,C:1), (D:6,C:1), (D:6,C:1), (D:6,C:1), (D:6,C:1), (D:6,C:1), (D:6,C:1), (D:6,C:1), (D:6,C:1), (D:6,C:1), (D:6,C:1), (D:6,C:1), (D:6,C:1), (D:6,C:1), (D:6,C:1)

> Node instance:
> Depth=6
> Ground actions: ['(jump-new-move pos-3-3 pos-3-2 pos-3-1)', '(end-move pos-3-1)', '(jump-new-move pos-2-4 pos-2-3 pos-2-2)', '(end-move pos-2-2)', '(jump-new-move pos-2-1 pos-2-2 pos-2-3)', '(jump-continue-move pos-2-3 pos-2-2 pos-2-1)']
> Next lifted action: end-move
> Repair set:
jump-new-move,(occupied ?over),effPos,1
> g_cost=1
> h_cost=0
> f_cost=1
> #neighbours=33

>>>>  A* iteration 1200  <<<<

> Fringe size: 30561
> First 20 nodes: (D:7,C:1), (D:6,C:1), (D:6,C:1), (D:6,C:1), (D:6,C:1), (D:6,C:1), (D:6,C:1), (D:6,C:1), (D:6,C:1), (D:6,C:1), (D:6,C:1), (D:6,C:1), (D:6,C:1), (D:5,C:1), (D:5,C:1), (D:5,C:1), (D:5,C:1), (D:5,C:1), (D:5,C:1), (D:5,C:1)

> Node instance:
> Depth=6
> Ground actions: ['(jump-new-move pos-2-4 pos-2-3 pos-2-2)', '(end-move pos-2-2)', '(jump-new-move pos-2-2 pos-2-1 pos-2-0)', '(end-move pos-2-0)', '(jump-new-move pos-3-3 pos-4-3 pos-5-3)', '(jump-continue-move pos-5-3 pos-4-3 pos-3-3)']
> Next lifted action: end-move
> Repair set:
jump-new-move,(occupied ?over),effPos,1
> g_cost=1
> h_cost=0
> f_cost=1
> #neighbours=33

>>>>  A* iteration 1400  <<<<

> Fringe size: 35124
> First 20 nodes: (D:5,C:1), (D:5,C:1), (D:5,C:1), (D:5,C:1), (D:5,C:1), (D:5,C:1), (D:5,C:1), (D:5,C:1), (D:5,C:1), (D:5,C:1), (D:5,C:1), (D:5,C:1), (D:5,C:1), (D:5,C:1), (D:5,C:1), (D:5,C:1), (D:5,C:1), (D:5,C:1), (D:5,C:1), (D:5,C:1)

> Node instance:
> Depth=5
> Ground actions: ['(jump-new-move pos-2-4 pos-2-3 pos-2-2)', '(end-move pos-2-2)', '(jump-new-move pos-2-2 pos-3-2 pos-4-2)', '(end-move pos-4-2)', '(jump-new-move pos-5-2 pos-4-2 pos-3-2)']
> Next lifted action: jump-continue-move
> Repair set:
jump-new-move,(occupied ?from),precPos,-1
> g_cost=1
> h_cost=0
> f_cost=1
> #neighbours=8

>>>>  A* iteration 1600  <<<<

> Fringe size: 38819
> First 20 nodes: (D:8,C:1), (D:8,C:1), (D:8,C:1), (D:8,C:1), (D:5,C:1), (D:5,C:1), (D:5,C:1), (D:5,C:1), (D:5,C:1), (D:5,C:1), (D:5,C:1), (D:5,C:1), (D:5,C:1), (D:5,C:1), (D:5,C:1), (D:5,C:1), (D:5,C:1), (D:5,C:1), (D:5,C:1), (D:5,C:1)

> Node instance:
> Depth=9
> Ground actions: ['(jump-new-move pos-2-3 pos-2-4 pos-2-5)', '(end-move pos-2-5)', '(jump-new-move pos-4-3 pos-3-3 pos-2-3)', '(end-move pos-2-3)', '(jump-new-move pos-2-4 pos-3-4 pos-4-4)', '(jump-continue-move pos-4-4 pos-3-4 pos-2-4)', '(end-move pos-2-4)', '(jump-new-move pos-2-4 pos-2-3 pos-2-2)', '(end-move pos-2-2)']
> Next lifted action: jump-new-move
> Repair set:
jump-new-move,(occupied ?over),effPos,1
> g_cost=1
> h_cost=0
> f_cost=1
> #neighbours=0
> Command timed out after 30 minutes
