Domain class: blocks
Instance name: pprobBLOCKS-5-0-err-rate-0-5
Lifted plan: ['unstack', 'put-down', 'pick-up', 'stack', 'unstack', 'put-down', 'unstack', 'stack', 'pick-up', 'stack', 'pick-up', 'stack']
$$$$  Vanilla ground repair:  $$$$
unstack,(clear ?y),effPos,1
pick-up,(holding ?x),effPos,1



>>>>  A* iteration 1  <<<<

> Fringe size: 1
> First 20 nodes: (D:1,C:0)

> Node instance:
> Depth=0
> Ground actions: []
> Next lifted action: unstack
> Repair set:
None
> g_cost=0
> h_cost=0
> f_cost=0
> #neighbours=1

>>>>  A* iteration 2  <<<<

> Fringe size: 5
> First 20 nodes: (D:2,C:0), (D:2,C:1), (D:2,C:1), (D:2,C:1), (D:2,C:1)

> Node instance:
> Depth=1
> Ground actions: ['(unstack c e)']
> Next lifted action: put-down
> Repair set:

> g_cost=0
> h_cost=0
> f_cost=0
> #neighbours=5

>>>>  A* iteration 3  <<<<

> Fringe size: 6
> First 20 nodes: (D:3,C:0), (D:3,C:0), (D:2,C:1), (D:2,C:1), (D:2,C:1), (D:2,C:1)

> Node instance:
> Depth=2
> Ground actions: ['(unstack c e)', '(put-down c)']
> Next lifted action: pick-up
> Repair set:

> g_cost=0
> h_cost=0
> f_cost=0
> #neighbours=2

>>>>  A* iteration 4  <<<<

> Fringe size: 7
> First 20 nodes: (D:3,C:0), (D:4,C:1), (D:2,C:1), (D:2,C:1), (D:2,C:1), (D:2,C:1), (D:4,C:2)

> Node instance:
> Depth=3
> Ground actions: ['(unstack c e)', '(put-down c)', '(pick-up c)']
> Next lifted action: stack
> Repair set:

> g_cost=0
> h_cost=0
> f_cost=0
> #neighbours=2

>>>>  A* iteration 5  <<<<

> Fringe size: 8
> First 20 nodes: (D:4,C:1), (D:4,C:1), (D:2,C:1), (D:2,C:1), (D:2,C:1), (D:2,C:1), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=3
> Ground actions: ['(unstack c e)', '(put-down c)', '(pick-up d)']
> Next lifted action: stack
> Repair set:

> g_cost=0
> h_cost=0
> f_cost=0
> #neighbours=2

>>>>  A* iteration 6  <<<<

> Fringe size: 9
> First 20 nodes: (D:5,C:1), (D:4,C:1), (D:2,C:1), (D:2,C:1), (D:2,C:1), (D:2,C:1), (D:5,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=4
> Ground actions: ['(unstack c e)', '(put-down c)', '(pick-up c)', '(stack c d)']
> Next lifted action: unstack
> Repair set:
put-down,(holding ?x),effPos,1
> g_cost=1
> h_cost=0
> f_cost=1
> #neighbours=2

>>>>  A* iteration 7  <<<<

> Fringe size: 9
> First 20 nodes: (D:6,C:1), (D:4,C:1), (D:2,C:1), (D:2,C:1), (D:2,C:1), (D:2,C:1), (D:5,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=5
> Ground actions: ['(unstack c e)', '(put-down c)', '(pick-up c)', '(stack c d)', '(unstack c d)']
> Next lifted action: put-down
> Repair set:
put-down,(holding ?x),effPos,1
> g_cost=1
> h_cost=0
> f_cost=1
> #neighbours=1

>>>>  A* iteration 8  <<<<

> Fringe size: 10
> First 20 nodes: (D:4,C:1), (D:2,C:1), (D:2,C:1), (D:2,C:1), (D:2,C:1), (D:7,C:2), (D:7,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=6
> Ground actions: ['(unstack c e)', '(put-down c)', '(pick-up c)', '(stack c d)', '(unstack c d)', '(put-down c)']
> Next lifted action: unstack
> Repair set:
put-down,(holding ?x),effPos,1
> g_cost=1
> h_cost=0
> f_cost=1
> #neighbours=2

>>>>  A* iteration 9  <<<<

> Fringe size: 11
> First 20 nodes: (D:5,C:1), (D:2,C:1), (D:2,C:1), (D:2,C:1), (D:2,C:1), (D:7,C:2), (D:7,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=4
> Ground actions: ['(unstack c e)', '(put-down c)', '(pick-up d)', '(stack c c)']
> Next lifted action: unstack
> Repair set:
put-down,(holding ?x),effPos,1
> g_cost=1
> h_cost=0
> f_cost=1
> #neighbours=2

>>>>  A* iteration 10  <<<<

> Fringe size: 11
> First 20 nodes: (D:6,C:1), (D:2,C:1), (D:2,C:1), (D:2,C:1), (D:2,C:1), (D:7,C:2), (D:7,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=5
> Ground actions: ['(unstack c e)', '(put-down c)', '(pick-up d)', '(stack c c)', '(unstack c c)']
> Next lifted action: put-down
> Repair set:
put-down,(holding ?x),effPos,1
> g_cost=1
> h_cost=0
> f_cost=1
> #neighbours=1

>>>>  A* iteration 11  <<<<

> Fringe size: 12
> First 20 nodes: (D:2,C:1), (D:2,C:1), (D:2,C:1), (D:2,C:1), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=6
> Ground actions: ['(unstack c e)', '(put-down c)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down c)']
> Next lifted action: unstack
> Repair set:
put-down,(holding ?x),effPos,1
> g_cost=1
> h_cost=0
> f_cost=1
> #neighbours=2

>>>>  A* iteration 12  <<<<

> Fringe size: 13
> First 20 nodes: (D:3,C:1), (D:3,C:1), (D:2,C:1), (D:2,C:1), (D:2,C:1), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=2
> Ground actions: ['(unstack c e)', '(put-down e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
> g_cost=1
> h_cost=0
> f_cost=1
> #neighbours=2

>>>>  A* iteration 13  <<<<

> Fringe size: 18
> First 20 nodes: (D:4,C:1), (D:3,C:1), (D:2,C:1), (D:2,C:1), (D:2,C:1), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:3), (D:4,C:3)

> Node instance:
> Depth=3
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
> g_cost=1
> h_cost=0
> f_cost=1
> #neighbours=6

>>>>  A* iteration 14  <<<<

> Fringe size: 19
> First 20 nodes: (D:5,C:1), (D:3,C:1), (D:2,C:1), (D:2,C:1), (D:2,C:1), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:3), (D:4,C:3)

> Node instance:
> Depth=4
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)']
> Next lifted action: unstack
> Repair set:
unstack,(holding ?y),effPos,1
> g_cost=1
> h_cost=0
> f_cost=1
> #neighbours=2

>>>>  A* iteration 15  <<<<

> Fringe size: 23
> First 20 nodes: (D:6,C:1), (D:6,C:1), (D:6,C:1), (D:6,C:1), (D:6,C:1), (D:3,C:1), (D:2,C:1), (D:2,C:1), (D:2,C:1), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=5
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack c e)']
> Next lifted action: put-down
> Repair set:
unstack,(holding ?y),effPos,1
> g_cost=1
> h_cost=0
> f_cost=1
> #neighbours=5

>>>>  A* iteration 16  <<<<

> Fringe size: 24
> First 20 nodes: (D:6,C:1), (D:6,C:1), (D:6,C:1), (D:6,C:1), (D:3,C:1), (D:2,C:1), (D:2,C:1), (D:2,C:1), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=6
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack c e)', '(put-down a)']
> Next lifted action: unstack
> Repair set:
put-down,(holding ?x),precPos,-1
> g_cost=1
> h_cost=0
> f_cost=1
> #neighbours=2

>>>>  A* iteration 17  <<<<

> Fringe size: 26
> First 20 nodes: (D:7,C:1), (D:6,C:1), (D:6,C:1), (D:6,C:1), (D:3,C:1), (D:2,C:1), (D:2,C:1), (D:2,C:1), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=6
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack c e)', '(put-down b)']
> Next lifted action: unstack
> Repair set:
put-down,(holding ?x),precPos,-1
> g_cost=1
> h_cost=0
> f_cost=1
> #neighbours=3

>>>>  A* iteration 18  <<<<

> Fringe size: 33
> First 20 nodes: (D:6,C:1), (D:6,C:1), (D:6,C:1), (D:3,C:1), (D:2,C:1), (D:2,C:1), (D:2,C:1), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2)

> Node instance:
> Depth=7
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack c e)', '(put-down b)', '(unstack b a)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
> g_cost=1
> h_cost=0
> f_cost=1
> #neighbours=8

>>>>  A* iteration 19  <<<<

> Fringe size: 34
> First 20 nodes: (D:6,C:1), (D:6,C:1), (D:3,C:1), (D:2,C:1), (D:2,C:1), (D:2,C:1), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2)

> Node instance:
> Depth=6
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack c e)', '(put-down c)']
> Next lifted action: unstack
> Repair set:
unstack,(holding ?y),effPos,1
> g_cost=1
> h_cost=0
> f_cost=1
> #neighbours=2

>>>>  A* iteration 20  <<<<

> Fringe size: 35
> First 20 nodes: (D:6,C:1), (D:3,C:1), (D:2,C:1), (D:2,C:1), (D:2,C:1), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2)

> Node instance:
> Depth=6
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack c e)', '(put-down d)']
> Next lifted action: unstack
> Repair set:
put-down,(holding ?x),precPos,-1
> g_cost=1
> h_cost=0
> f_cost=1
> #neighbours=2

>>>>  A* iteration 21  <<<<

> Fringe size: 36
> First 20 nodes: (D:7,C:1), (D:3,C:1), (D:2,C:1), (D:2,C:1), (D:2,C:1), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2)

> Node instance:
> Depth=6
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack c e)', '(put-down e)']
> Next lifted action: unstack
> Repair set:
unstack,(holding ?y),effPos,1
> g_cost=1
> h_cost=0
> f_cost=1
> #neighbours=2

>>>>  A* iteration 22  <<<<

> Fringe size: 46
> First 20 nodes: (D:3,C:1), (D:2,C:1), (D:2,C:1), (D:2,C:1), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2)

> Node instance:
> Depth=7
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
> g_cost=1
> h_cost=0
> f_cost=1
> #neighbours=11

>>>>  A* iteration 23  <<<<

> Fringe size: 51
> First 20 nodes: (D:4,C:1), (D:2,C:1), (D:2,C:1), (D:2,C:1), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2)

> Node instance:
> Depth=3
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
> g_cost=1
> h_cost=0
> f_cost=1
> #neighbours=6

>>>>  A* iteration 24  <<<<

> Fringe size: 53
> First 20 nodes: (D:5,C:1), (D:2,C:1), (D:2,C:1), (D:2,C:1), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2)

> Node instance:
> Depth=4
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c d)']
> Next lifted action: unstack
> Repair set:
unstack,(holding ?y),effPos,1
> g_cost=1
> h_cost=0
> f_cost=1
> #neighbours=3

>>>>  A* iteration 25  <<<<

> Fringe size: 57
> First 20 nodes: (D:6,C:1), (D:6,C:1), (D:6,C:1), (D:6,C:1), (D:6,C:1), (D:2,C:1), (D:2,C:1), (D:2,C:1), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2)

> Node instance:
> Depth=5
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c d)', '(unstack c d)']
> Next lifted action: put-down
> Repair set:
unstack,(holding ?y),effPos,1
> g_cost=1
> h_cost=0
> f_cost=1
> #neighbours=5

>>>>  A* iteration 26  <<<<

> Fringe size: 59
> First 20 nodes: (D:6,C:1), (D:6,C:1), (D:6,C:1), (D:6,C:1), (D:2,C:1), (D:2,C:1), (D:2,C:1), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2)

> Node instance:
> Depth=6
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c d)', '(unstack c d)', '(put-down a)']
> Next lifted action: unstack
> Repair set:
put-down,(holding ?x),precPos,-1
> g_cost=1
> h_cost=0
> f_cost=1
> #neighbours=3
Domain class: blocks
Instance name: pprobBLOCKS-5-0-err-rate-0-5
Lifted plan: ['unstack', 'put-down', 'pick-up', 'stack', 'unstack', 'put-down', 'unstack', 'stack', 'pick-up', 'stack', 'pick-up', 'stack']
$$$$  Vanilla ground repair:  $$$$
pick-up,(holding ?x),effPos,1
unstack,(clear ?y),effPos,1
> Current state:
[<Atom on(e, b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>]
> Possible groundings:
['(unstack c e)']
> Current state:
[<Atom on(e, b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(put-down a)', '(put-down b)', '(put-down c)', '(put-down d)', '(put-down e)']
> Current state:
[<Atom on(e, b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)']
> Current state:
[<Atom on(e, b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom ontable(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)']
> Current state:
[<Atom on(e, b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom ontable(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)']
> Current state:
[<Atom on(e, b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom ontable(c)>]
> Possible groundings:
['(unstack c d)', '(unstack c e)']
> Current state:
[<Atom on(e, b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom ontable(c)>]
> Possible groundings:
['(put-down c)']
> Current state:
[<Atom on(e, b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom ontable(c)>]
> Possible groundings:
['(unstack c d)', '(unstack c e)']
> Current state:
[<Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom ontable(c)>]
> Possible groundings:
['(unstack c c)', '(unstack c e)']
> Current state:
[<Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom ontable(c)>]
> Possible groundings:
['(put-down c)']
> Current state:
[<Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom ontable(c)>]
> Possible groundings:
['(unstack c c)', '(unstack c e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(unstack c e)', '(unstack e b)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(put-down a)', '(put-down b)', '(put-down c)', '(put-down d)', '(put-down e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(unstack c e)', '(unstack e b)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(unstack b a)', '(unstack c e)', '(unstack e b)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom ontable(c)>]
> Possible groundings:
['(unstack c e)', '(unstack e b)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(unstack c e)', '(unstack e b)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(unstack c e)', '(unstack e b)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(unstack c d)', '(unstack c e)', '(unstack e b)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(put-down a)', '(put-down b)', '(put-down c)', '(put-down d)', '(put-down e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(unstack c d)', '(unstack c e)', '(unstack e b)']

>>>>  A* iteration 27  <<<<

> Fringe size: 62
> First 20 nodes: (D:7,C:1), (D:6,C:1), (D:6,C:1), (D:6,C:1), (D:2,C:1), (D:2,C:1), (D:2,C:1), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2)

> Node instance:
> Depth=6
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c d)', '(unstack c d)', '(put-down b)']
> Next lifted action: unstack
> Repair set:
put-down,(holding ?x),precPos,-1
> g_cost=1
> h_cost=0
> f_cost=1
> #neighbours=4

>>>>  A* iteration 28  <<<<

> Fringe size: 69
> First 20 nodes: (D:6,C:1), (D:6,C:1), (D:6,C:1), (D:2,C:1), (D:2,C:1), (D:2,C:1), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2)

> Node instance:
> Depth=7
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack b a)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
> g_cost=1
> h_cost=0
> f_cost=1
> #neighbours=8

>>>>  A* iteration 29  <<<<

> Fringe size: 71
> First 20 nodes: (D:6,C:1), (D:6,C:1), (D:2,C:1), (D:2,C:1), (D:2,C:1), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2)

> Node instance:
> Depth=6
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c d)', '(unstack c d)', '(put-down d)']
> Next lifted action: unstack
> Repair set:
unstack,(holding ?y),effPos,1
> g_cost=1
> h_cost=0
> f_cost=1
> #neighbours=3

>>>>  A* iteration 30  <<<<

> Fringe size: 73
> First 20 nodes: (D:7,C:1), (D:6,C:1), (D:2,C:1), (D:2,C:1), (D:2,C:1), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2)

> Node instance:
> Depth=6
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c d)', '(unstack c d)', '(put-down e)']
> Next lifted action: unstack
> Repair set:
put-down,(holding ?x),precPos,-1
> g_cost=1
> h_cost=0
> f_cost=1
> #neighbours=3

>>>>  A* iteration 31  <<<<

> Fringe size: 78
> First 20 nodes: (D:6,C:1), (D:2,C:1), (D:2,C:1), (D:2,C:1), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2)

> Node instance:
> Depth=7
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c d)', '(unstack c d)', '(put-down e)', '(unstack e b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
> g_cost=1
> h_cost=0
> f_cost=1
> #neighbours=6

>>>>  A* iteration 32  <<<<

> Fringe size: 80
> First 20 nodes: (D:2,C:1), (D:2,C:1), (D:2,C:1), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2)

> Node instance:
> Depth=6
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c d)', '(unstack c d)', '(put-down c)']
> Next lifted action: unstack
> Repair set:
unstack,(holding ?y),effPos,1
> g_cost=1
> h_cost=0
> f_cost=1
> #neighbours=3

>>>>  A* iteration 33  <<<<

> Fringe size: 81
> First 20 nodes: (D:3,C:1), (D:3,C:1), (D:2,C:1), (D:2,C:1), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2)

> Node instance:
> Depth=2
> Ground actions: ['(unstack c e)', '(put-down b)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
> g_cost=1
> h_cost=0
> f_cost=1
> #neighbours=2

>>>>  A* iteration 34  <<<<

> Fringe size: 83
> First 20 nodes: (D:4,C:1), (D:3,C:1), (D:2,C:1), (D:2,C:1), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2)

> Node instance:
> Depth=3
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
> g_cost=1
> h_cost=0
> f_cost=1
> #neighbours=3

>>>>  A* iteration 35  <<<<

> Fringe size: 85
> First 20 nodes: (D:5,C:1), (D:3,C:1), (D:2,C:1), (D:2,C:1), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2)

> Node instance:
> Depth=4
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up b)', '(stack c d)']
> Next lifted action: unstack
> Repair set:
put-down,(holding ?x),precPos,-1
> g_cost=1
> h_cost=0
> f_cost=1
> #neighbours=3

>>>>  A* iteration 36  <<<<

> Fringe size: 85
> First 20 nodes: (D:6,C:1), (D:3,C:1), (D:2,C:1), (D:2,C:1), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2)

> Node instance:
> Depth=5
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up b)', '(stack c d)', '(unstack c d)']
> Next lifted action: put-down
> Repair set:
put-down,(holding ?x),precPos,-1
> g_cost=1
> h_cost=0
> f_cost=1
> #neighbours=1

>>>>  A* iteration 37  <<<<

> Fringe size: 87
> First 20 nodes: (D:3,C:1), (D:2,C:1), (D:2,C:1), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2)

> Node instance:
> Depth=6
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up b)', '(stack c d)', '(unstack c d)', '(put-down c)']
> Next lifted action: unstack
> Repair set:
put-down,(holding ?x),precPos,-1
> g_cost=1
> h_cost=0
> f_cost=1
> #neighbours=3

>>>>  A* iteration 38  <<<<

> Fringe size: 89
> First 20 nodes: (D:4,C:1), (D:2,C:1), (D:2,C:1), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2)

> Node instance:
> Depth=3
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up d)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
> g_cost=1
> h_cost=0
> f_cost=1
> #neighbours=3

>>>>  A* iteration 39  <<<<

> Fringe size: 91
> First 20 nodes: (D:5,C:1), (D:2,C:1), (D:2,C:1), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2)

> Node instance:
> Depth=4
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up d)', '(stack c b)']
> Next lifted action: unstack
> Repair set:
put-down,(holding ?x),precPos,-1
> g_cost=1
> h_cost=0
> f_cost=1
> #neighbours=3

>>>>  A* iteration 40  <<<<

> Fringe size: 91
> First 20 nodes: (D:6,C:1), (D:2,C:1), (D:2,C:1), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2)

> Node instance:
> Depth=5
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up d)', '(stack c b)', '(unstack c b)']
> Next lifted action: put-down
> Repair set:
put-down,(holding ?x),precPos,-1
> g_cost=1
> h_cost=0
> f_cost=1
> #neighbours=1

>>>>  A* iteration 41  <<<<

> Fringe size: 93
> First 20 nodes: (D:2,C:1), (D:2,C:1), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2)

> Node instance:
> Depth=6
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up d)', '(stack c b)', '(unstack c b)', '(put-down c)']
> Next lifted action: unstack
> Repair set:
put-down,(holding ?x),precPos,-1
> g_cost=1
> h_cost=0
> f_cost=1
> #neighbours=3

>>>>  A* iteration 42  <<<<

> Fringe size: 93
> First 20 nodes: (D:3,C:1), (D:2,C:1), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2)

> Node instance:
> Depth=2
> Ground actions: ['(unstack c e)', '(put-down d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
> g_cost=1
> h_cost=0
> f_cost=1
> #neighbours=1

>>>>  A* iteration 43  <<<<

> Fringe size: 94
> First 20 nodes: (D:2,C:1), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2)

> Node instance:
> Depth=3
> Ground actions: ['(unstack c e)', '(put-down d)', '(pick-up d)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
> g_cost=1
> h_cost=0
> f_cost=1
> #neighbours=2

>>>>  A* iteration 44  <<<<

> Fringe size: 95
> First 20 nodes: (D:3,C:1), (D:3,C:1), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2)

> Node instance:
> Depth=2
> Ground actions: ['(unstack c e)', '(put-down a)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
> g_cost=1
> h_cost=0
> f_cost=1
> #neighbours=2

>>>>  A* iteration 45  <<<<

> Fringe size: 97
> First 20 nodes: (D:4,C:1), (D:3,C:1), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2)

> Node instance:
> Depth=3
> Ground actions: ['(unstack c e)', '(put-down a)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
> g_cost=1
> h_cost=0
> f_cost=1
> #neighbours=3

>>>>  A* iteration 46  <<<<

> Fringe size: 98
> First 20 nodes: (D:5,C:1), (D:3,C:1), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2)

> Node instance:
> Depth=4
> Ground actions: ['(unstack c e)', '(put-down a)', '(pick-up a)', '(stack c d)']
> Next lifted action: unstack
> Repair set:
put-down,(holding ?x),precPos,-1
> g_cost=1
> h_cost=0
> f_cost=1
> #neighbours=2

>>>>  A* iteration 47  <<<<

> Fringe size: 98
> First 20 nodes: (D:6,C:1), (D:3,C:1), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2)

> Node instance:
> Depth=5
> Ground actions: ['(unstack c e)', '(put-down a)', '(pick-up a)', '(stack c d)', '(unstack c d)']
> Next lifted action: put-down
> Repair set:
put-down,(holding ?x),precPos,-1
> g_cost=1
> h_cost=0
> f_cost=1
> #neighbours=1

>>>>  A* iteration 48  <<<<

> Fringe size: 99
> First 20 nodes: (D:3,C:1), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2)

> Node instance:
> Depth=6
> Ground actions: ['(unstack c e)', '(put-down a)', '(pick-up a)', '(stack c d)', '(unstack c d)', '(put-down c)']
> Next lifted action: unstack
> Repair set:
put-down,(holding ?x),precPos,-1
> g_cost=1
> h_cost=0
> f_cost=1
> #neighbours=2

>>>>  A* iteration 49  <<<<

> Fringe size: 101
> First 20 nodes: (D:4,C:1), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2)

> Node instance:
> Depth=3
> Ground actions: ['(unstack c e)', '(put-down a)', '(pick-up d)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
> g_cost=1
> h_cost=0
> f_cost=1
> #neighbours=3

>>>>  A* iteration 50  <<<<

> Fringe size: 102
> First 20 nodes: (D:5,C:1), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2)

> Node instance:
> Depth=4
> Ground actions: ['(unstack c e)', '(put-down a)', '(pick-up d)', '(stack c a)']
> Next lifted action: unstack
> Repair set:
put-down,(holding ?x),precPos,-1
> g_cost=1
> h_cost=0
> f_cost=1
> #neighbours=2

>>>>  A* iteration 51  <<<<

> Fringe size: 102
> First 20 nodes: (D:6,C:1), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2)

> Node instance:
> Depth=5
> Ground actions: ['(unstack c e)', '(put-down a)', '(pick-up d)', '(stack c a)', '(unstack c a)']
> Next lifted action: put-down
> Repair set:
put-down,(holding ?x),precPos,-1
> g_cost=1
> h_cost=0
> f_cost=1
> #neighbours=1

>>>>  A* iteration 52  <<<<

> Fringe size: 103
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2)

> Node instance:
> Depth=6
> Ground actions: ['(unstack c e)', '(put-down a)', '(pick-up d)', '(stack c a)', '(unstack c a)', '(put-down c)']
> Next lifted action: unstack
> Repair set:
put-down,(holding ?x),precPos,-1
> g_cost=1
> h_cost=0
> f_cost=1
> #neighbours=2

>>>>  A* iteration 53  <<<<

> Fringe size: 105
> First 20 nodes: (D:9,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack c e)', '(put-down b)', '(unstack b a)', '(stack b e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(unstack b a)', '(unstack c d)', '(unstack c e)', '(unstack e b)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(unstack c d)', '(unstack c e)', '(unstack e b)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(unstack c d)', '(unstack c e)', '(unstack e b)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom ontable(c)>]
> Possible groundings:
['(unstack c d)', '(unstack c e)', '(unstack e b)']
> Current state:
[<Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)']
> Current state:
[<Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(stack c b)', '(stack c c)', '(stack c d)']
> Current state:
[<Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(unstack b a)', '(unstack c d)', '(unstack c e)']
> Current state:
[<Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(put-down c)']
> Current state:
[<Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom ontable(c)>]
> Possible groundings:
['(unstack b a)', '(unstack c d)', '(unstack c e)']
> Current state:
[<Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(stack c b)', '(stack c c)', '(stack c d)']
> Current state:
[<Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, b)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(unstack b a)', '(unstack c b)', '(unstack c e)']
> Current state:
[<Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, b)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(put-down c)']
> Current state:
[<Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, b)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom ontable(c)>]
> Possible groundings:
['(unstack b a)', '(unstack c b)', '(unstack c e)']
> Current state:
[<Atom on(e, b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)']
> Current state:
[<Atom on(e, b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)']
> Current state:
[<Atom on(e, b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)']
> Current state:
[<Atom on(e, b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)']
> Current state:
[<Atom on(e, b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(unstack c d)', '(unstack c e)']
> Current state:
[<Atom on(e, b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(put-down c)']
> Current state:
[<Atom on(e, b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>, <Atom ontable(c)>]
> Possible groundings:
['(unstack c d)', '(unstack c e)']
> Current state:
[<Atom on(e, b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)']
> Current state:
[<Atom on(e, b)>, <Atom on(c, a)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(unstack c a)', '(unstack c e)']
> Current state:
[<Atom on(e, b)>, <Atom on(c, a)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(put-down c)']
> Current state:
[<Atom on(e, b)>, <Atom on(c, a)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>, <Atom ontable(c)>]
> Possible groundings:
['(unstack c a)', '(unstack c e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']

>>>>  A* iteration 54  <<<<

> Fringe size: 112
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack c e)', '(put-down b)', '(unstack b a)', '(stack b e)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 55  <<<<

> Fringe size: 114
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack c e)', '(put-down b)', '(unstack b a)', '(stack b e)', '(pick-up b)', '(stack c b)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 56  <<<<

> Fringe size: 116
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack c e)', '(put-down b)', '(unstack b a)', '(stack b e)', '(pick-up b)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 57  <<<<

> Fringe size: 118
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack c e)', '(put-down b)', '(unstack b a)', '(stack b e)', '(pick-up b)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 58  <<<<

> Fringe size: 125
> First 20 nodes: (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack c e)', '(put-down b)', '(unstack b a)', '(stack b e)', '(pick-up b)', '(stack c e)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 59  <<<<

> Fringe size: 127
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack c e)', '(put-down b)', '(unstack b a)', '(stack b e)', '(pick-up b)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 60  <<<<

> Fringe size: 134
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack c e)', '(put-down b)', '(unstack b a)', '(stack b e)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 61  <<<<

> Fringe size: 136
> First 20 nodes: (D:11,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack c e)', '(put-down b)', '(unstack b a)', '(stack b e)', '(pick-up e)', '(stack c b)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 62  <<<<

> Fringe size: 143
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack c e)', '(put-down b)', '(unstack b a)', '(stack b e)', '(pick-up e)', '(stack c b)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 63  <<<<

> Fringe size: 145
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack b a)', '(stack b c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 64  <<<<

> Fringe size: 152
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack b a)', '(stack b c)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 65  <<<<

> Fringe size: 154
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack b a)', '(stack b c)', '(pick-up b)', '(stack c b)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 66  <<<<

> Fringe size: 156
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack b a)', '(stack b c)', '(pick-up b)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 67  <<<<

> Fringe size: 158
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack b a)', '(stack b c)', '(pick-up b)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 68  <<<<

> Fringe size: 160
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack b a)', '(stack b c)', '(pick-up b)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 69  <<<<

> Fringe size: 162
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack c e)', '(put-down b)', '(unstack b a)', '(stack b b)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 70  <<<<

> Fringe size: 169
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack c e)', '(put-down b)', '(unstack b a)', '(stack b b)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 71  <<<<

> Fringe size: 171
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack c e)', '(put-down b)', '(unstack b a)', '(stack b b)', '(pick-up b)', '(stack c b)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 72  <<<<

> Fringe size: 173
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack c e)', '(put-down b)', '(unstack b a)', '(stack b b)', '(pick-up b)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 73  <<<<

> Fringe size: 175
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack c e)', '(put-down b)', '(unstack b a)', '(stack b b)', '(pick-up b)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, b)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom on(c, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(c, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom on(c, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, b)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]

>>>>  A* iteration 74  <<<<

> Fringe size: 177
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack c e)', '(put-down b)', '(unstack b a)', '(stack b b)', '(pick-up b)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 75  <<<<

> Fringe size: 178
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack e e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 76  <<<<

> Fringe size: 188
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack e e)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=11

>>>>  A* iteration 77  <<<<

> Fringe size: 189
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack e e)', '(pick-up e)', '(stack b c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 78  <<<<

> Fringe size: 190
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack e e)', '(pick-up e)', '(stack b d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 79  <<<<

> Fringe size: 191
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack e e)', '(pick-up e)', '(stack b e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 80  <<<<

> Fringe size: 192
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack e e)', '(pick-up e)', '(stack c b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 81  <<<<

> Fringe size: 193
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack e e)', '(pick-up e)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 82  <<<<

> Fringe size: 194
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack e e)', '(pick-up e)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 83  <<<<

> Fringe size: 195
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack e e)', '(pick-up e)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 84  <<<<

> Fringe size: 196
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack e d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 85  <<<<

> Fringe size: 206
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack e d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=11

>>>>  A* iteration 86  <<<<

> Fringe size: 207
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack e d)', '(pick-up e)', '(stack b c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 87  <<<<

> Fringe size: 208
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack e d)', '(pick-up e)', '(stack b d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 88  <<<<

> Fringe size: 209
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack e d)', '(pick-up e)', '(stack b e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 89  <<<<

> Fringe size: 210
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack e d)', '(pick-up e)', '(stack c b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 90  <<<<

> Fringe size: 211
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack e d)', '(pick-up e)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 91  <<<<

> Fringe size: 212
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack e d)', '(pick-up e)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 92  <<<<

> Fringe size: 213
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack e d)', '(pick-up e)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 93  <<<<

> Fringe size: 214
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack e c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 94  <<<<

> Fringe size: 224
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack e c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=11

>>>>  A* iteration 95  <<<<

> Fringe size: 225
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack e c)', '(pick-up e)', '(stack b c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 96  <<<<

> Fringe size: 226
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack e c)', '(pick-up e)', '(stack b d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, b)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom handempty()>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(c, b)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']

>>>>  A* iteration 97  <<<<

> Fringe size: 227
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack e c)', '(pick-up e)', '(stack b e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 98  <<<<

> Fringe size: 228
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack e c)', '(pick-up e)', '(stack c b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 99  <<<<

> Fringe size: 229
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack e c)', '(pick-up e)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 100  <<<<

> Fringe size: 230
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack e c)', '(pick-up e)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 101  <<<<

> Fringe size: 231
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack e c)', '(pick-up e)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 102  <<<<

> Fringe size: 232
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack e b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 103  <<<<

> Fringe size: 242
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack e b)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=11

>>>>  A* iteration 104  <<<<

> Fringe size: 243
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack e b)', '(pick-up e)', '(stack b c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 105  <<<<

> Fringe size: 244
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack e b)', '(pick-up e)', '(stack b d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 106  <<<<

> Fringe size: 245
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack e b)', '(pick-up e)', '(stack b e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 107  <<<<

> Fringe size: 246
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack e b)', '(pick-up e)', '(stack c b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 108  <<<<

> Fringe size: 247
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack e b)', '(pick-up e)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 109  <<<<

> Fringe size: 248
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack e b)', '(pick-up e)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 110  <<<<

> Fringe size: 249
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack e b)', '(pick-up e)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 111  <<<<

> Fringe size: 250
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 112  <<<<

> Fringe size: 260
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack c c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
unstack,(clear ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=11

>>>>  A* iteration 113  <<<<

> Fringe size: 261
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack c c)', '(pick-up e)', '(stack b c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
unstack,(clear ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 114  <<<<

> Fringe size: 262
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack c c)', '(pick-up e)', '(stack e c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
unstack,(clear ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 115  <<<<

> Fringe size: 263
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 116  <<<<

> Fringe size: 264
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 117  <<<<

> Fringe size: 265
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c d)', '(unstack c d)', '(put-down e)', '(unstack e b)', '(stack e e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 118  <<<<

> Fringe size: 270
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c d)', '(unstack c d)', '(put-down e)', '(unstack e b)', '(stack e e)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 119  <<<<

> Fringe size: 271
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c d)', '(unstack c d)', '(put-down e)', '(unstack e b)', '(stack e e)', '(pick-up e)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, b)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(c, b)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']

>>>>  A* iteration 120  <<<<

> Fringe size: 272
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c d)', '(unstack c d)', '(put-down e)', '(unstack e b)', '(stack e e)', '(pick-up e)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 121  <<<<

> Fringe size: 273
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c d)', '(unstack c d)', '(put-down e)', '(unstack e b)', '(stack e e)', '(pick-up e)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 122  <<<<

> Fringe size: 274
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack c b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 123  <<<<

> Fringe size: 275
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack b c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 124  <<<<

> Fringe size: 286
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack b c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
unstack,(clear ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=12

>>>>  A* iteration 125  <<<<

> Fringe size: 287
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack b c)', '(pick-up e)', '(stack c b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
unstack,(clear ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 126  <<<<

> Fringe size: 288
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack b c)', '(pick-up e)', '(stack e b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
unstack,(clear ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 127  <<<<

> Fringe size: 289
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c d)', '(unstack c d)', '(put-down e)', '(unstack e b)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 128  <<<<

> Fringe size: 290
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c d)', '(unstack c d)', '(put-down e)', '(unstack e b)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 129  <<<<

> Fringe size: 295
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c d)', '(unstack c d)', '(put-down e)', '(unstack e b)', '(stack c d)', '(pick-up d)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 130  <<<<

> Fringe size: 296
> First 20 nodes: (D:11,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c d)', '(unstack c d)', '(put-down e)', '(unstack e b)', '(stack c d)', '(pick-up d)', '(stack e c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 131  <<<<

> Fringe size: 301
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:7,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c d)', '(unstack c d)', '(put-down e)', '(unstack e b)', '(stack c d)', '(pick-up d)', '(stack e c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 132  <<<<

> Fringe size: 302
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:7,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c d)', '(unstack c d)', '(put-down e)', '(unstack e b)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 133  <<<<

> Fringe size: 307
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:7,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c d)', '(unstack c d)', '(put-down e)', '(unstack e b)', '(stack c c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
unstack,(clear ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 134  <<<<

> Fringe size: 308
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c d)', '(unstack c d)', '(put-down e)', '(unstack e b)', '(stack c c)', '(pick-up e)', '(stack e c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
unstack,(clear ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 135  <<<<

> Fringe size: 309
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack b d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 136  <<<<

> Fringe size: 311
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack b a)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 137  <<<<

> Fringe size: 318
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack b a)', '(stack c d)', '(pick-up d)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 138  <<<<

> Fringe size: 320
> First 20 nodes: (D:11,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack b a)', '(stack c d)', '(pick-up d)', '(stack b c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 139  <<<<

> Fringe size: 327
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack b a)', '(stack c d)', '(pick-up d)', '(stack b c)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 140  <<<<

> Fringe size: 328
> First 20 nodes: (D:9,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c d)', '(unstack c d)', '(put-down e)', '(unstack e b)', '(stack e d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 141  <<<<

> Fringe size: 333
> First 20 nodes: (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c d)', '(unstack c d)', '(put-down e)', '(unstack e b)', '(stack e d)', '(pick-up d)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(c, b)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(c, b)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]

>>>>  A* iteration 142  <<<<

> Fringe size: 334
> First 20 nodes: (D:11,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c d)', '(unstack c d)', '(put-down e)', '(unstack e b)', '(stack e d)', '(pick-up d)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 143  <<<<

> Fringe size: 339
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c d)', '(unstack c d)', '(put-down e)', '(unstack e b)', '(stack e d)', '(pick-up d)', '(stack c e)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 144  <<<<

> Fringe size: 344
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c d)', '(unstack c d)', '(put-down e)', '(unstack e b)', '(stack e d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 145  <<<<

> Fringe size: 345
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c d)', '(unstack c d)', '(put-down e)', '(unstack e b)', '(stack e d)', '(pick-up e)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 146  <<<<

> Fringe size: 346
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c d)', '(unstack c d)', '(put-down e)', '(unstack e b)', '(stack e d)', '(pick-up e)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 147  <<<<

> Fringe size: 351
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c d)', '(unstack c d)', '(put-down e)', '(unstack e b)', '(stack e d)', '(pick-up e)', '(stack c d)', '(pick-up d)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 148  <<<<

> Fringe size: 352
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c d)', '(unstack c d)', '(put-down e)', '(unstack e b)', '(stack e d)', '(pick-up e)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 149  <<<<

> Fringe size: 354
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack c e)', '(put-down b)', '(unstack b a)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 150  <<<<

> Fringe size: 361
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack c e)', '(put-down b)', '(unstack b a)', '(stack c c)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
unstack,(clear ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 151  <<<<

> Fringe size: 363
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack c e)', '(put-down b)', '(unstack b a)', '(stack c c)', '(pick-up b)', '(stack b c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
unstack,(clear ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 152  <<<<

> Fringe size: 365
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack b a)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 153  <<<<

> Fringe size: 366
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c d)', '(unstack c d)', '(put-down e)', '(unstack e b)', '(stack e c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 154  <<<<

> Fringe size: 371
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c d)', '(unstack c d)', '(put-down e)', '(unstack e b)', '(stack e c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 155  <<<<

> Fringe size: 372
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c d)', '(unstack c d)', '(put-down e)', '(unstack e b)', '(stack e c)', '(pick-up e)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 156  <<<<

> Fringe size: 373
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c d)', '(unstack c d)', '(put-down e)', '(unstack e b)', '(stack e c)', '(pick-up e)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 157  <<<<

> Fringe size: 374
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c d)', '(unstack c d)', '(put-down e)', '(unstack e b)', '(stack e c)', '(pick-up e)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 158  <<<<

> Fringe size: 376
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack c e)', '(put-down b)', '(unstack b a)', '(stack b c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 159  <<<<

> Fringe size: 383
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack c e)', '(put-down b)', '(unstack b a)', '(stack b c)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 160  <<<<

> Fringe size: 385
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack c e)', '(put-down b)', '(unstack b a)', '(stack b c)', '(pick-up b)', '(stack c b)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 161  <<<<

> Fringe size: 387
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack c e)', '(put-down b)', '(unstack b a)', '(stack b c)', '(pick-up b)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 162  <<<<

> Fringe size: 389
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack c e)', '(put-down b)', '(unstack b a)', '(stack b c)', '(pick-up b)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 163  <<<<

> Fringe size: 391
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack c e)', '(put-down b)', '(unstack b a)', '(stack b c)', '(pick-up b)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 164  <<<<

> Fringe size: 393
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack b a)', '(stack c b)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, b)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, b)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']

>>>>  A* iteration 165  <<<<

> Fringe size: 395
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack b a)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 166  <<<<

> Fringe size: 402
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack b a)', '(stack c c)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
unstack,(clear ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 167  <<<<

> Fringe size: 404
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack b a)', '(stack c c)', '(pick-up b)', '(stack b c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
unstack,(clear ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 168  <<<<

> Fringe size: 406
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack b a)', '(stack b b)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 169  <<<<

> Fringe size: 413
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack b a)', '(stack b b)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 170  <<<<

> Fringe size: 415
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack b a)', '(stack b b)', '(pick-up b)', '(stack c b)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 171  <<<<

> Fringe size: 417
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack b a)', '(stack b b)', '(pick-up b)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 172  <<<<

> Fringe size: 419
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack b a)', '(stack b b)', '(pick-up b)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 173  <<<<

> Fringe size: 421
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack b a)', '(stack b b)', '(pick-up b)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 174  <<<<

> Fringe size: 423
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack c e)', '(put-down b)', '(unstack b a)', '(stack c b)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 175  <<<<

> Fringe size: 425
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack c e)', '(put-down b)', '(unstack b a)', '(stack b d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 176  <<<<

> Fringe size: 432
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack c e)', '(put-down b)', '(unstack b a)', '(stack b d)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 177  <<<<

> Fringe size: 434
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack c e)', '(put-down b)', '(unstack b a)', '(stack b d)', '(pick-up b)', '(stack c b)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 178  <<<<

> Fringe size: 436
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack c e)', '(put-down b)', '(unstack b a)', '(stack b d)', '(pick-up b)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 179  <<<<

> Fringe size: 438
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack c e)', '(put-down b)', '(unstack b a)', '(stack b d)', '(pick-up b)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 180  <<<<

> Fringe size: 440
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack c e)', '(put-down b)', '(unstack b a)', '(stack b d)', '(pick-up b)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 181  <<<<

> Fringe size: 442
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack c e)', '(put-down b)', '(unstack b a)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 182  <<<<

> Fringe size: 443
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack b e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 183  <<<<

> Fringe size: 445
> First 20 nodes: (D:9,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack b a)', '(stack b d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 184  <<<<

> Fringe size: 452
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack b a)', '(stack b d)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 185  <<<<

> Fringe size: 454
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack b a)', '(stack b d)', '(pick-up b)', '(stack c b)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom on(c, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, b)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, b)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom on(c, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']

>>>>  A* iteration 186  <<<<

> Fringe size: 456
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack b a)', '(stack b d)', '(pick-up b)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 187  <<<<

> Fringe size: 458
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack b a)', '(stack b d)', '(pick-up b)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 188  <<<<

> Fringe size: 465
> First 20 nodes: (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack b a)', '(stack b d)', '(pick-up b)', '(stack c d)', '(pick-up d)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 189  <<<<

> Fringe size: 467
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack b a)', '(stack b d)', '(pick-up b)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 190  <<<<

> Fringe size: 474
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack b a)', '(stack b d)', '(pick-up d)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 191  <<<<

> Fringe size: 476
> First 20 nodes: (D:11,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack b a)', '(stack b d)', '(pick-up d)', '(stack c b)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 192  <<<<

> Fringe size: 483
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack b a)', '(stack b d)', '(pick-up d)', '(stack c b)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 193  <<<<

> Fringe size: 485
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack b a)', '(stack b e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 194  <<<<

> Fringe size: 492
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack b a)', '(stack b e)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 195  <<<<

> Fringe size: 494
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack b a)', '(stack b e)', '(pick-up b)', '(stack c b)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 196  <<<<

> Fringe size: 496
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack b a)', '(stack b e)', '(pick-up b)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 197  <<<<

> Fringe size: 498
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack b a)', '(stack b e)', '(pick-up b)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 198  <<<<

> Fringe size: 500
> First 20 nodes: (D:8,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack b a)', '(stack b e)', '(pick-up b)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 199  <<<<

> Fringe size: 502
> First 20 nodes: (D:9,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack c e)', '(put-down b)', '(unstack b a)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 200  <<<<

> Fringe size: 509
> First 20 nodes: (D:10,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack c e)', '(put-down b)', '(unstack b a)', '(stack c e)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 201  <<<<

> Fringe size: 511
> First 20 nodes: (D:11,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack c e)', '(put-down b)', '(unstack b a)', '(stack c e)', '(pick-up e)', '(stack b c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 202  <<<<

> Fringe size: 518
> First 20 nodes: (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack c e)', '(put-down b)', '(unstack b a)', '(stack c e)', '(pick-up e)', '(stack b c)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 203  <<<<

> Fringe size: 525
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2)

> Node instance:
> Depth=7
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c d)', '(unstack c d)', '(put-down a)', '(unstack e b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
pick-up,(not (clear ?x)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 204  <<<<

> Fringe size: 527
> First 20 nodes: (D:8,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c d)', '(unstack c d)', '(put-down a)', '(unstack e b)', '(stack c a)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
pick-up,(not (clear ?x)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 205  <<<<

> Fringe size: 529
> First 20 nodes: (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c d)', '(unstack c d)', '(put-down a)', '(unstack e b)', '(stack e a)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
pick-up,(not (clear ?x)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom on(c, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(c, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom on(c, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(c, a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom on(e, b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>, <Atom ontable(c)>]

>>>>  A* iteration 206  <<<<

> Fringe size: 531
> First 20 nodes: (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2)

> Node instance:
> Depth=7
> Ground actions: ['(unstack c e)', '(put-down a)', '(pick-up a)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack c e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
unstack,(on ?x ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 207  <<<<

> Fringe size: 533
> First 20 nodes: (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2)

> Node instance:
> Depth=7
> Ground actions: ['(unstack c e)', '(put-down a)', '(pick-up d)', '(stack c a)', '(unstack c a)', '(put-down c)', '(unstack c a)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
unstack,(on ?x ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 208  <<<<

> Fringe size: 540
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2)

> Node instance:
> Depth=7
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack e b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
pick-up,(not (clear ?x)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 209  <<<<

> Fringe size: 542
> First 20 nodes: (D:8,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack e b)', '(stack c b)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
pick-up,(not (clear ?x)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 210  <<<<

> Fringe size: 544
> First 20 nodes: (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack e b)', '(stack e b)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
pick-up,(not (clear ?x)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 211  <<<<

> Fringe size: 545
> First 20 nodes: (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2)

> Node instance:
> Depth=7
> Ground actions: ['(unstack c e)', '(put-down c)', '(pick-up c)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack c d)']
> Next lifted action: stack
> Repair set:
unstack,(on ?x ?y),precPos,-1
put-down,(holding ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 212  <<<<

> Fringe size: 547
> First 20 nodes: (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:5,C:2)

> Node instance:
> Depth=7
> Ground actions: ['(unstack c e)', '(put-down a)', '(pick-up a)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack c d)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
unstack,(on ?x ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 213  <<<<

> Fringe size: 548
> First 20 nodes: (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:5,C:2), (D:5,C:2)

> Node instance:
> Depth=7
> Ground actions: ['(unstack c e)', '(put-down c)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down c)', '(unstack c e)']
> Next lifted action: stack
> Repair set:
unstack,(on ?x ?y),precPos,-1
put-down,(holding ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 214  <<<<

> Fringe size: 550
> First 20 nodes: (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2)

> Node instance:
> Depth=7
> Ground actions: ['(unstack c e)', '(put-down a)', '(pick-up d)', '(stack c a)', '(unstack c a)', '(put-down c)', '(unstack c e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
unstack,(on ?x ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 215  <<<<

> Fringe size: 557
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:5,C:2), (D:5,C:2)

> Node instance:
> Depth=7
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack c e)', '(put-down a)', '(unstack e b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(not (clear ?y)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 216  <<<<

> Fringe size: 559
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:5,C:2), (D:5,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack c e)', '(put-down a)', '(unstack e b)', '(stack c a)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(not (clear ?y)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 217  <<<<

> Fringe size: 566
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:5,C:2), (D:5,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack c e)', '(put-down a)', '(unstack e b)', '(stack c a)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(not (clear ?y)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 218  <<<<

> Fringe size: 568
> First 20 nodes: (D:11,C:2), (D:8,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:5,C:2), (D:5,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack c e)', '(put-down a)', '(unstack e b)', '(stack c a)', '(pick-up a)', '(stack e c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(not (clear ?y)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 219  <<<<

> Fringe size: 575
> First 20 nodes: (D:8,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack c e)', '(put-down a)', '(unstack e b)', '(stack c a)', '(pick-up a)', '(stack e c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(not (clear ?y)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 220  <<<<

> Fringe size: 577
> First 20 nodes: (D:9,C:2), (D:9,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:5,C:2), (D:5,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack c e)', '(put-down a)', '(unstack e b)', '(stack e a)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(not (clear ?y)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 221  <<<<

> Fringe size: 584
> First 20 nodes: (D:10,C:2), (D:9,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:5,C:2), (D:5,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack c e)', '(put-down a)', '(unstack e b)', '(stack e a)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(not (clear ?y)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 222  <<<<

> Fringe size: 586
> First 20 nodes: (D:11,C:2), (D:9,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:5,C:2), (D:5,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack c e)', '(put-down a)', '(unstack e b)', '(stack e a)', '(pick-up a)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(not (clear ?y)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 223  <<<<

> Fringe size: 593
> First 20 nodes: (D:9,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack c e)', '(put-down a)', '(unstack e b)', '(stack e a)', '(pick-up a)', '(stack c e)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(not (clear ?y)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 224  <<<<

> Fringe size: 600
> First 20 nodes: (D:10,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack c e)', '(put-down a)', '(unstack e b)', '(stack e a)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(not (clear ?y)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 225  <<<<

> Fringe size: 602
> First 20 nodes: (D:11,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack c e)', '(put-down a)', '(unstack e b)', '(stack e a)', '(pick-up e)', '(stack c a)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(not (clear ?y)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 226  <<<<

> Fringe size: 609
> First 20 nodes: (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack c e)', '(put-down a)', '(unstack e b)', '(stack e a)', '(pick-up e)', '(stack c a)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(not (clear ?y)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 227  <<<<

> Fringe size: 611
> First 20 nodes: (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2)

> Node instance:
> Depth=7
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up b)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack c d)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
unstack,(on ?x ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 228  <<<<

> Fringe size: 625
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2)

> Node instance:
> Depth=7
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack e b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
pick-up,(not (clear ?x)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=15
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)']
> Current state:
[<Atom on(e, b)>, <Atom on(c, a)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>, <Atom ontable(c)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, b)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom on(e, b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom ontable(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)']
> Current state:
[<Atom on(e, b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>, <Atom ontable(c)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)']
> Current state:
[<Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom ontable(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)']
> Current state:
[<Atom on(e, b)>, <Atom on(c, a)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>, <Atom ontable(c)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(c, a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(c, a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(c, a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(c, a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom ontable(c)>]
> Possible groundings:
['(stack c b)', '(stack c c)', '(stack c d)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom ontable(c)>]
> Possible groundings:
['(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']

>>>>  A* iteration 229  <<<<

> Fringe size: 627
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack e b)', '(stack b c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
pick-up,(not (clear ?x)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 230  <<<<

> Fringe size: 629
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack e b)', '(stack d c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
pick-up,(not (clear ?x)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 231  <<<<

> Fringe size: 643
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack e b)', '(stack d c)', '(pick-up d)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
pick-up,(not (clear ?x)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=15

>>>>  A* iteration 232  <<<<

> Fringe size: 645
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack e b)', '(stack d c)', '(pick-up d)', '(stack b d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
pick-up,(not (clear ?x)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 233  <<<<

> Fringe size: 647
> First 20 nodes: (D:8,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack e b)', '(stack d c)', '(pick-up d)', '(stack e d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
pick-up,(not (clear ?x)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 234  <<<<

> Fringe size: 649
> First 20 nodes: (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack e b)', '(stack e c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
pick-up,(not (clear ?x)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 235  <<<<

> Fringe size: 657
> First 20 nodes: (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2)

> Node instance:
> Depth=7
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack c e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
unstack,(on ?x ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=9

>>>>  A* iteration 236  <<<<

> Fringe size: 662
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2)

> Node instance:
> Depth=7
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack c e)', '(put-down d)', '(unstack e b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(not (clear ?y)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 237  <<<<

> Fringe size: 663
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack c e)', '(put-down d)', '(unstack e b)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(not (clear ?y)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 238  <<<<

> Fringe size: 668
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack c e)', '(put-down d)', '(unstack e b)', '(stack c d)', '(pick-up d)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(not (clear ?y)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 239  <<<<

> Fringe size: 669
> First 20 nodes: (D:11,C:2), (D:8,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack c e)', '(put-down d)', '(unstack e b)', '(stack c d)', '(pick-up d)', '(stack e c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(not (clear ?y)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 240  <<<<

> Fringe size: 674
> First 20 nodes: (D:8,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack c e)', '(put-down d)', '(unstack e b)', '(stack c d)', '(pick-up d)', '(stack e c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(not (clear ?y)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 241  <<<<

> Fringe size: 675
> First 20 nodes: (D:9,C:2), (D:9,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack c e)', '(put-down d)', '(unstack e b)', '(stack e d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(not (clear ?y)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 242  <<<<

> Fringe size: 680
> First 20 nodes: (D:10,C:2), (D:9,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack c e)', '(put-down d)', '(unstack e b)', '(stack e d)', '(pick-up d)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(not (clear ?y)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 243  <<<<

> Fringe size: 681
> First 20 nodes: (D:11,C:2), (D:9,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack c e)', '(put-down d)', '(unstack e b)', '(stack e d)', '(pick-up d)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(not (clear ?y)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 244  <<<<

> Fringe size: 686
> First 20 nodes: (D:9,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack c e)', '(put-down d)', '(unstack e b)', '(stack e d)', '(pick-up d)', '(stack c e)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(not (clear ?y)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 245  <<<<

> Fringe size: 691
> First 20 nodes: (D:10,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack c e)', '(put-down d)', '(unstack e b)', '(stack e d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(not (clear ?y)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 246  <<<<

> Fringe size: 692
> First 20 nodes: (D:11,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack c e)', '(put-down d)', '(unstack e b)', '(stack e d)', '(pick-up e)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(not (clear ?y)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 247  <<<<

> Fringe size: 697
> First 20 nodes: (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack c e)', '(put-down d)', '(unstack e b)', '(stack e d)', '(pick-up e)', '(stack c d)', '(pick-up d)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(not (clear ?y)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 248  <<<<

> Fringe size: 699
> First 20 nodes: (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2)

> Node instance:
> Depth=7
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up d)', '(stack c b)', '(unstack c b)', '(put-down c)', '(unstack c e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
unstack,(on ?x ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 249  <<<<

> Fringe size: 704
> First 20 nodes: (D:8,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2)

> Node instance:
> Depth=7
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up b)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack b a)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
pick-up,(not (clear ?x)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(d, c)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(d, c)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(c)>]
> Possible groundings:
['(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(d, c)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(d, c)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom on(e, d)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom on(e, c)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom ontable(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, b)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom ontable(c)>]
> Possible groundings:
['(stack c b)', '(stack c c)', '(stack c d)']
> Current state:
[<Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom ontable(c)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack c b)', '(stack c c)', '(stack c d)']

>>>>  A* iteration 250  <<<<

> Fringe size: 706
> First 20 nodes: (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up b)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack b a)', '(stack b c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
pick-up,(not (clear ?x)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 251  <<<<

> Fringe size: 707
> First 20 nodes: (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2)

> Node instance:
> Depth=7
> Ground actions: ['(unstack c e)', '(put-down c)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down c)', '(unstack c c)']
> Next lifted action: stack
> Repair set:
unstack,(on ?y ?y),effPos,1
put-down,(holding ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 252  <<<<

> Fringe size: 709
> First 20 nodes: (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2)

> Node instance:
> Depth=7
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up d)', '(stack c b)', '(unstack c b)', '(put-down c)', '(unstack c b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
unstack,(on ?x ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 253  <<<<

> Fringe size: 710
> First 20 nodes: (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=7
> Ground actions: ['(unstack c e)', '(put-down c)', '(pick-up c)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack c e)']
> Next lifted action: stack
> Repair set:
unstack,(on ?x ?y),precPos,-1
put-down,(holding ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 254  <<<<

> Fringe size: 717
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2)

> Node instance:
> Depth=7
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack c e)', '(put-down b)', '(unstack e b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(not (clear ?y)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 255  <<<<

> Fringe size: 719
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack c e)', '(put-down b)', '(unstack e b)', '(stack c b)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(not (clear ?y)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 256  <<<<

> Fringe size: 726
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack c e)', '(put-down b)', '(unstack e b)', '(stack c b)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(not (clear ?y)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 257  <<<<

> Fringe size: 728
> First 20 nodes: (D:11,C:2), (D:8,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack c e)', '(put-down b)', '(unstack e b)', '(stack c b)', '(pick-up b)', '(stack e c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(not (clear ?y)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 258  <<<<

> Fringe size: 735
> First 20 nodes: (D:8,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack c e)', '(put-down b)', '(unstack e b)', '(stack c b)', '(pick-up b)', '(stack e c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(not (clear ?y)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 259  <<<<

> Fringe size: 737
> First 20 nodes: (D:9,C:2), (D:9,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack c e)', '(put-down b)', '(unstack e b)', '(stack e b)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(not (clear ?y)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 260  <<<<

> Fringe size: 744
> First 20 nodes: (D:10,C:2), (D:9,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack c e)', '(put-down b)', '(unstack e b)', '(stack e b)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(not (clear ?y)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 261  <<<<

> Fringe size: 746
> First 20 nodes: (D:11,C:2), (D:9,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack c e)', '(put-down b)', '(unstack e b)', '(stack e b)', '(pick-up b)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(not (clear ?y)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 262  <<<<

> Fringe size: 753
> First 20 nodes: (D:9,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack c e)', '(put-down b)', '(unstack e b)', '(stack e b)', '(pick-up b)', '(stack c e)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(not (clear ?y)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 263  <<<<

> Fringe size: 760
> First 20 nodes: (D:10,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack c e)', '(put-down b)', '(unstack e b)', '(stack e b)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(not (clear ?y)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 264  <<<<

> Fringe size: 762
> First 20 nodes: (D:11,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack c e)', '(put-down b)', '(unstack e b)', '(stack e b)', '(pick-up e)', '(stack c b)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(not (clear ?y)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 265  <<<<

> Fringe size: 769
> First 20 nodes: (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack c e)', '(put-down b)', '(unstack e b)', '(stack e b)', '(pick-up e)', '(stack c b)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(not (clear ?y)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 266  <<<<

> Fringe size: 774
> First 20 nodes: (D:8,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=7
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up d)', '(stack c b)', '(unstack c b)', '(put-down c)', '(unstack b a)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(not (clear ?y)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 267  <<<<

> Fringe size: 776
> First 20 nodes: (D:9,C:2), (D:9,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up d)', '(stack c b)', '(unstack c b)', '(put-down c)', '(unstack b a)', '(stack b c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(not (clear ?y)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 268  <<<<

> Fringe size: 781
> First 20 nodes: (D:9,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up d)', '(stack c b)', '(unstack c b)', '(put-down c)', '(unstack b a)', '(stack b c)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(not (clear ?y)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 269  <<<<

> Fringe size: 786
> First 20 nodes: (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up d)', '(stack c b)', '(unstack c b)', '(put-down c)', '(unstack b a)', '(stack b c)', '(pick-up c)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(not (clear ?y)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 270  <<<<

> Fringe size: 796
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=7
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack c e)', '(put-down c)', '(unstack e b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(not (clear ?y)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=11
> Current state:
[<Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up b)', '(pick-up c)', '(pick-up d)']
> Current state:
[<Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom ontable(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)']
> Current state:
[<Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, b)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom ontable(c)>]
> Possible groundings:
['(stack c b)', '(stack c c)', '(stack c d)']
> Current state:
[<Atom on(e, b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom ontable(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, b)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, b)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, b)>, <Atom on(e, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, b)>, <Atom on(b, a)>, <Atom on(e, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, b)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, b)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, b)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom ontable(c)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack c b)', '(stack c c)', '(stack c d)']
> Current state:
[<Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, b)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up b)', '(pick-up c)', '(pick-up d)']
> Current state:
[<Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, b)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom ontable(c)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack c b)', '(stack c c)', '(stack c d)']
> Current state:
[<Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, b)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom ontable(c)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack c b)', '(stack c c)', '(stack c d)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom ontable(c)>]
> Possible groundings:
['(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']

>>>>  A* iteration 271  <<<<

> Fringe size: 798
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack c e)', '(put-down c)', '(unstack e b)', '(stack b c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(not (clear ?y)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 272  <<<<

> Fringe size: 809
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack c e)', '(put-down c)', '(unstack e b)', '(stack b c)', '(pick-up c)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(not (clear ?y)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=12

>>>>  A* iteration 273  <<<<

> Fringe size: 811
> First 20 nodes: (D:11,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack c e)', '(put-down c)', '(unstack e b)', '(stack b c)', '(pick-up c)', '(stack e b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(not (clear ?y)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 274  <<<<

> Fringe size: 822
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack c e)', '(put-down c)', '(unstack e b)', '(stack b c)', '(pick-up c)', '(stack e b)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(not (clear ?y)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=12

>>>>  A* iteration 275  <<<<

> Fringe size: 824
> First 20 nodes: (D:9,C:2), (D:9,C:2), (D:8,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack c e)', '(put-down c)', '(unstack e b)', '(stack e b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
unstack,(clear ?y),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 276  <<<<

> Fringe size: 835
> First 20 nodes: (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack c e)', '(put-down c)', '(unstack e b)', '(stack e b)', '(pick-up c)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
unstack,(clear ?y),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=12

>>>>  A* iteration 277  <<<<

> Fringe size: 837
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack c e)', '(put-down c)', '(unstack e b)', '(stack e b)', '(pick-up c)', '(stack b e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
unstack,(clear ?y),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 278  <<<<

> Fringe size: 848
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack c e)', '(put-down c)', '(unstack e b)', '(stack e b)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
unstack,(clear ?y),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=12

>>>>  A* iteration 279  <<<<

> Fringe size: 850
> First 20 nodes: (D:8,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack c e)', '(put-down c)', '(unstack e b)', '(stack e b)', '(pick-up e)', '(stack b c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
unstack,(clear ?y),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 280  <<<<

> Fringe size: 852
> First 20 nodes: (D:9,C:2), (D:9,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack c e)', '(put-down c)', '(unstack e b)', '(stack e c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(not (clear ?y)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 281  <<<<

> Fringe size: 862
> First 20 nodes: (D:10,C:2), (D:9,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack c e)', '(put-down c)', '(unstack e b)', '(stack e c)', '(pick-up c)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(not (clear ?y)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=11

>>>>  A* iteration 282  <<<<

> Fringe size: 864
> First 20 nodes: (D:11,C:2), (D:9,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack c e)', '(put-down c)', '(unstack e b)', '(stack e c)', '(pick-up c)', '(stack b e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(not (clear ?y)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 283  <<<<

> Fringe size: 875
> First 20 nodes: (D:9,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack c e)', '(put-down c)', '(unstack e b)', '(stack e c)', '(pick-up c)', '(stack b e)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(not (clear ?y)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=12

>>>>  A* iteration 284  <<<<

> Fringe size: 885
> First 20 nodes: (D:10,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack c e)', '(put-down c)', '(unstack e b)', '(stack e c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(not (clear ?y)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=11

>>>>  A* iteration 285  <<<<

> Fringe size: 887
> First 20 nodes: (D:11,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack c e)', '(put-down c)', '(unstack e b)', '(stack e c)', '(pick-up e)', '(stack b c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(not (clear ?y)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 286  <<<<

> Fringe size: 898
> First 20 nodes: (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack c e)', '(put-down c)', '(unstack e b)', '(stack e c)', '(pick-up e)', '(stack b c)', '(pick-up c)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(not (clear ?y)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=12

>>>>  A* iteration 287  <<<<

> Fringe size: 900
> First 20 nodes: (D:7,C:2), (D:7,C:2), (D:7,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=7
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up b)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack c e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
unstack,(on ?x ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 288  <<<<

> Fringe size: 908
> First 20 nodes: (D:7,C:2), (D:7,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=7
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack c d)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
unstack,(on ?x ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=9
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom ontable(c)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom ontable(c)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom ontable(c)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom ontable(c)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom ontable(c)>]
> Possible groundings:
['(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom on(e, c)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom ontable(c)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom ontable(c)>]
> Possible groundings:
['(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom on(e, c)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom ontable(c)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom ontable(c)>]
> Possible groundings:
['(stack c b)', '(stack c c)', '(stack c d)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom ontable(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]

>>>>  A* iteration 289  <<<<

> Fringe size: 922
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=7
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c d)', '(unstack c d)', '(put-down d)', '(unstack e b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
pick-up,(not (clear ?x)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=15

>>>>  A* iteration 290  <<<<

> Fringe size: 923
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c d)', '(unstack c d)', '(put-down d)', '(unstack e b)', '(stack b d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
pick-up,(not (clear ?x)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 291  <<<<

> Fringe size: 924
> First 20 nodes: (D:8,C:2), (D:7,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c d)', '(unstack c d)', '(put-down d)', '(unstack e b)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
pick-up,(not (clear ?x)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 292  <<<<

> Fringe size: 925
> First 20 nodes: (D:7,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c d)', '(unstack c d)', '(put-down d)', '(unstack e b)', '(stack e d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
pick-up,(not (clear ?x)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 293  <<<<

> Fringe size: 930
> First 20 nodes: (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=7
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack c e)', '(put-down c)', '(unstack c e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
unstack,(on ?x ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 294  <<<<

> Fringe size: 934
> First 20 nodes: (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=5
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c d)', '(unstack e b)']
> Next lifted action: put-down
> Repair set:
unstack,(holding ?y),effPos,1
pick-up,(not (clear ?x)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=5

>>>>  A* iteration 295  <<<<

> Fringe size: 936
> First 20 nodes: (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=6
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c d)', '(unstack e b)', '(put-down a)']
> Next lifted action: unstack
> Repair set:
put-down,(holding ?x),precPos,-1
pick-up,(not (clear ?x)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 296  <<<<

> Fringe size: 943
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=7
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c d)', '(unstack e b)', '(put-down a)', '(unstack c d)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
pick-up,(not (clear ?x)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 297  <<<<

> Fringe size: 945
> First 20 nodes: (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c d)', '(unstack e b)', '(put-down a)', '(unstack c d)', '(stack c a)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
pick-up,(not (clear ?x)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 298  <<<<

> Fringe size: 947
> First 20 nodes: (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c d)', '(unstack e b)', '(put-down a)', '(unstack c d)', '(stack e a)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
pick-up,(not (clear ?x)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 299  <<<<

> Fringe size: 950
> First 20 nodes: (D:7,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=6
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c d)', '(unstack e b)', '(put-down b)']
> Next lifted action: unstack
> Repair set:
unstack,(holding ?y),effPos,1
pick-up,(not (clear ?x)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 300  <<<<

> Fringe size: 968
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=7
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
pick-up,(not (clear ?x)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=19

>>>>  A* iteration 301  <<<<

> Fringe size: 971
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
pick-up,(not (clear ?x)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 302  <<<<

> Fringe size: 990
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a c)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
pick-up,(not (clear ?x)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 303  <<<<

> Fringe size: 993
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a c)', '(pick-up a)', '(stack b a)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
pick-up,(not (clear ?x)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 304  <<<<

> Fringe size: 1012
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a c)', '(pick-up a)', '(stack b a)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
pick-up,(not (clear ?x)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 305  <<<<

> Fringe size: 1015
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a c)', '(pick-up a)', '(stack e a)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
pick-up,(not (clear ?x)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 306  <<<<

> Fringe size: 1017
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
pick-up,(not (clear ?x)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3
> Possible groundings:
['(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom holding(d)>, <Atom on(c, d)>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom ontable(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(put-down a)', '(put-down b)', '(put-down c)', '(put-down d)', '(put-down e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(unstack c d)', '(unstack c e)', '(unstack e b)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(c, a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom ontable(b)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(unstack b a)', '(unstack c d)', '(unstack c e)', '(unstack e b)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom on(a, c)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom on(a, c)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom on(a, c)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom on(a, c)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom on(a, c)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(e, a)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]

>>>>  A* iteration 307  <<<<

> Fringe size: 1035
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b c)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
pick-up,(not (clear ?x)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=19

>>>>  A* iteration 308  <<<<

> Fringe size: 1038
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b c)', '(pick-up b)', '(stack a b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
pick-up,(not (clear ?x)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 309  <<<<

> Fringe size: 1057
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b c)', '(pick-up b)', '(stack a b)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
pick-up,(not (clear ?x)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 310  <<<<

> Fringe size: 1059
> First 20 nodes: (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b c)', '(pick-up b)', '(stack e b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
pick-up,(not (clear ?x)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 311  <<<<

> Fringe size: 1061
> First 20 nodes: (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
pick-up,(not (clear ?x)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 312  <<<<

> Fringe size: 1076
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=7
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
pick-up,(not (clear ?x)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=16

>>>>  A* iteration 313  <<<<

> Fringe size: 1078
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack c b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
pick-up,(not (clear ?x)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 314  <<<<

> Fringe size: 1080
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack d b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
pick-up,(not (clear ?x)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 315  <<<<

> Fringe size: 1095
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack d b)', '(pick-up d)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
pick-up,(not (clear ?x)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=16

>>>>  A* iteration 316  <<<<

> Fringe size: 1097
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack d b)', '(pick-up d)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
pick-up,(not (clear ?x)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 317  <<<<

> Fringe size: 1099
> First 20 nodes: (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack d b)', '(pick-up d)', '(stack e d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
pick-up,(not (clear ?x)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 318  <<<<

> Fringe size: 1101
> First 20 nodes: (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack e b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
pick-up,(not (clear ?x)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 319  <<<<

> Fringe size: 1103
> First 20 nodes: (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=6
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c d)', '(unstack e b)', '(put-down d)']
> Next lifted action: unstack
> Repair set:
put-down,(holding ?x),precPos,-1
pick-up,(not (clear ?x)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 320  <<<<

> Fringe size: 1108
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=7
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c d)', '(unstack e b)', '(put-down d)', '(unstack c d)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
pick-up,(not (clear ?x)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 321  <<<<

> Fringe size: 1109
> First 20 nodes: (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c d)', '(unstack e b)', '(put-down d)', '(unstack c d)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
pick-up,(not (clear ?x)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 322  <<<<

> Fringe size: 1110
> First 20 nodes: (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c d)', '(unstack e b)', '(put-down d)', '(unstack c d)', '(stack e d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
pick-up,(not (clear ?x)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 323  <<<<

> Fringe size: 1112
> First 20 nodes: (D:7,C:2), (D:6,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=6
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c d)', '(unstack e b)', '(put-down e)']
> Next lifted action: unstack
> Repair set:
unstack,(holding ?y),effPos,1
pick-up,(not (clear ?x)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 324  <<<<

> Fringe size: 1126
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=7
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c d)', '(unstack e b)', '(put-down e)', '(unstack c d)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
pick-up,(not (clear ?x)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=15

>>>>  A* iteration 325  <<<<

> Fringe size: 1127
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c d)', '(unstack e b)', '(put-down e)', '(unstack c d)', '(stack b e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
pick-up,(not (clear ?x)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2
> Possible groundings:
['(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(a, b)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(a, b)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, b)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom on(d, b)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom on(d, b)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom on(d, b)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom on(d, b)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom on(e, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(unstack c d)', '(unstack c e)', '(unstack e b)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(unstack c d)', '(unstack c e)', '(unstack e b)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom handempty()>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']

>>>>  A* iteration 326  <<<<

> Fringe size: 1128
> First 20 nodes: (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c d)', '(unstack e b)', '(put-down e)', '(unstack c d)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
pick-up,(not (clear ?x)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 327  <<<<

> Fringe size: 1129
> First 20 nodes: (D:9,C:2), (D:6,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c d)', '(unstack e b)', '(put-down e)', '(unstack c d)', '(stack d e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
pick-up,(not (clear ?x)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 328  <<<<

> Fringe size: 1143
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:6,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c d)', '(unstack e b)', '(put-down e)', '(unstack c d)', '(stack d e)', '(pick-up d)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
pick-up,(not (clear ?x)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=15

>>>>  A* iteration 329  <<<<

> Fringe size: 1144
> First 20 nodes: (D:10,C:2), (D:6,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c d)', '(unstack e b)', '(put-down e)', '(unstack c d)', '(stack d e)', '(pick-up d)', '(stack b d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
pick-up,(not (clear ?x)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 330  <<<<

> Fringe size: 1145
> First 20 nodes: (D:6,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c d)', '(unstack e b)', '(put-down e)', '(unstack c d)', '(stack d e)', '(pick-up d)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
pick-up,(not (clear ?x)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 331  <<<<

> Fringe size: 1147
> First 20 nodes: (D:7,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=6
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c d)', '(unstack e b)', '(put-down c)']
> Next lifted action: unstack
> Repair set:
put-down,(holding ?x),precPos,-1
pick-up,(not (clear ?x)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 332  <<<<

> Fringe size: 1152
> First 20 nodes: (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=7
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c d)', '(unstack e b)', '(put-down c)', '(unstack c d)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
pick-up,(not (clear ?x)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 333  <<<<

> Fringe size: 1152
> First 20 nodes: (D:6,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=5
> Ground actions: ['(unstack c e)', '(put-down a)', '(pick-up a)', '(stack c d)', '(unstack c e)']
> Next lifted action: put-down
> Repair set:
put-down,(holding ?x),precPos,-1
unstack,(on ?x ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=1

>>>>  A* iteration 334  <<<<

> Fringe size: 1153
> First 20 nodes: (D:7,C:2), (D:7,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=6
> Ground actions: ['(unstack c e)', '(put-down a)', '(pick-up a)', '(stack c d)', '(unstack c e)', '(put-down c)']
> Next lifted action: unstack
> Repair set:
put-down,(holding ?x),precPos,-1
unstack,(on ?x ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 335  <<<<

> Fringe size: 1155
> First 20 nodes: (D:7,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=7
> Ground actions: ['(unstack c e)', '(put-down a)', '(pick-up a)', '(stack c d)', '(unstack c e)', '(put-down c)', '(unstack c d)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
unstack,(on ?x ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 336  <<<<

> Fringe size: 1157
> First 20 nodes: (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=7
> Ground actions: ['(unstack c e)', '(put-down a)', '(pick-up a)', '(stack c d)', '(unstack c e)', '(put-down c)', '(unstack c e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
unstack,(on ?x ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 337  <<<<

> Fringe size: 1157
> First 20 nodes: (D:6,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=5
> Ground actions: ['(unstack c e)', '(put-down a)', '(pick-up d)', '(stack c a)', '(unstack c e)']
> Next lifted action: put-down
> Repair set:
put-down,(holding ?x),precPos,-1
unstack,(on ?x ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=1

>>>>  A* iteration 338  <<<<

> Fringe size: 1158
> First 20 nodes: (D:7,C:2), (D:7,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=6
> Ground actions: ['(unstack c e)', '(put-down a)', '(pick-up d)', '(stack c a)', '(unstack c e)', '(put-down c)']
> Next lifted action: unstack
> Repair set:
put-down,(holding ?x),precPos,-1
unstack,(on ?x ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 339  <<<<

> Fringe size: 1160
> First 20 nodes: (D:7,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=7
> Ground actions: ['(unstack c e)', '(put-down a)', '(pick-up d)', '(stack c a)', '(unstack c e)', '(put-down c)', '(unstack c a)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
unstack,(on ?x ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 340  <<<<

> Fringe size: 1162
> First 20 nodes: (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=7
> Ground actions: ['(unstack c e)', '(put-down a)', '(pick-up d)', '(stack c a)', '(unstack c e)', '(put-down c)', '(unstack c e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
unstack,(on ?x ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 341  <<<<

> Fringe size: 1166
> First 20 nodes: (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=5
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c d)', '(unstack c e)']
> Next lifted action: put-down
> Repair set:
unstack,(holding ?y),effPos,1
unstack,(on ?x ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=5

>>>>  A* iteration 342  <<<<

> Fringe size: 1168
> First 20 nodes: (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=6
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c d)', '(unstack c e)', '(put-down a)']
> Next lifted action: unstack
> Repair set:
put-down,(holding ?x),precPos,-1
unstack,(on ?x ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 343  <<<<

> Fringe size: 1171
> First 20 nodes: (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=6
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c d)', '(unstack c e)', '(put-down b)']
> Next lifted action: unstack
> Repair set:
put-down,(holding ?x),precPos,-1
unstack,(on ?x ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 344  <<<<

> Fringe size: 1178
> First 20 nodes: (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=7
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c d)', '(unstack c e)', '(put-down b)', '(unstack b a)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
unstack,(on ?x ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 345  <<<<

> Fringe size: 1180
> First 20 nodes: (D:7,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=6
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c d)', '(unstack c e)', '(put-down c)']
> Next lifted action: unstack
> Repair set:
unstack,(holding ?y),effPos,1
unstack,(on ?x ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 346  <<<<

> Fringe size: 1188
> First 20 nodes: (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=7
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c d)', '(unstack c e)', '(put-down c)', '(unstack c d)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
unstack,(on ?x ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=9

>>>>  A* iteration 347  <<<<

> Fringe size: 1193
> First 20 nodes: (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=7
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c d)', '(unstack c e)', '(put-down c)', '(unstack c e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
unstack,(on ?x ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 348  <<<<

> Fringe size: 1195
> First 20 nodes: (D:6,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=6
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c d)', '(unstack c e)', '(put-down d)']
> Next lifted action: unstack
> Repair set:
put-down,(holding ?x),precPos,-1
unstack,(on ?x ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom holding(d)>, <Atom on(c, d)>, <Atom on(d, e)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom on(d, e)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom on(d, e)>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom on(d, e)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom ontable(c)>]
> Possible groundings:
['(unstack c d)', '(unstack c e)', '(unstack e b)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom ontable(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom on(e, b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(put-down c)']
> Current state:
[<Atom on(e, b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>, <Atom ontable(c)>]
> Possible groundings:
['(unstack c d)', '(unstack c e)']
> Current state:
[<Atom on(e, b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>, <Atom ontable(c)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)']
> Current state:
[<Atom on(e, b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>, <Atom ontable(c)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)']
> Current state:
[<Atom on(e, b)>, <Atom on(c, a)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(put-down c)']
> Current state:
[<Atom on(e, b)>, <Atom on(c, a)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>, <Atom ontable(c)>]
> Possible groundings:
['(unstack c a)', '(unstack c e)']
> Current state:
[<Atom on(e, b)>, <Atom on(c, a)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>, <Atom ontable(c)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)']
> Current state:
[<Atom on(e, b)>, <Atom on(c, a)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>, <Atom ontable(c)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(put-down a)', '(put-down b)', '(put-down c)', '(put-down d)', '(put-down e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(unstack c d)', '(unstack c e)', '(unstack e b)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(unstack b a)', '(unstack c d)', '(unstack c e)', '(unstack e b)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom ontable(c)>]
> Possible groundings:
['(unstack c d)', '(unstack c e)', '(unstack e b)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom ontable(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom ontable(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(unstack c d)', '(unstack c e)', '(unstack e b)']

>>>>  A* iteration 349  <<<<

> Fringe size: 1197
> First 20 nodes: (D:7,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=6
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c d)', '(unstack c e)', '(put-down e)']
> Next lifted action: unstack
> Repair set:
unstack,(holding ?y),effPos,1
unstack,(on ?x ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 350  <<<<

> Fringe size: 1207
> First 20 nodes: (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=7
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c d)', '(unstack c e)', '(put-down e)', '(unstack e b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
unstack,(on ?x ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=11

>>>>  A* iteration 351  <<<<

> Fringe size: 1208
> First 20 nodes: (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=5
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up b)', '(stack c d)', '(unstack b a)']
> Next lifted action: put-down
> Repair set:
put-down,(holding ?x),precPos,-1
pick-up,(not (clear ?x)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 352  <<<<

> Fringe size: 1210
> First 20 nodes: (D:7,C:2), (D:6,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=6
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up b)', '(stack c d)', '(unstack b a)', '(put-down b)']
> Next lifted action: unstack
> Repair set:
put-down,(holding ?x),precPos,-1
pick-up,(not (clear ?x)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 353  <<<<

> Fringe size: 1215
> First 20 nodes: (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=7
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up b)', '(stack c d)', '(unstack b a)', '(put-down b)', '(unstack c d)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
pick-up,(not (clear ?x)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 354  <<<<

> Fringe size: 1216
> First 20 nodes: (D:6,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up b)', '(stack c d)', '(unstack b a)', '(put-down b)', '(unstack c d)', '(stack c b)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
pick-up,(not (clear ?x)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 355  <<<<

> Fringe size: 1218
> First 20 nodes: (D:7,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=6
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up b)', '(stack c d)', '(unstack b a)', '(put-down c)']
> Next lifted action: unstack
> Repair set:
put-down,(holding ?x),precPos,-1
pick-up,(not (clear ?x)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 356  <<<<

> Fringe size: 1223
> First 20 nodes: (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=7
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up b)', '(stack c d)', '(unstack b a)', '(put-down c)', '(unstack c d)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
pick-up,(not (clear ?x)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 357  <<<<

> Fringe size: 1223
> First 20 nodes: (D:6,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=5
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up b)', '(stack c d)', '(unstack c e)']
> Next lifted action: put-down
> Repair set:
put-down,(holding ?x),precPos,-1
unstack,(on ?x ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=1

>>>>  A* iteration 358  <<<<

> Fringe size: 1225
> First 20 nodes: (D:7,C:2), (D:7,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=6
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up b)', '(stack c d)', '(unstack c e)', '(put-down c)']
> Next lifted action: unstack
> Repair set:
put-down,(holding ?x),precPos,-1
unstack,(on ?x ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 359  <<<<

> Fringe size: 1227
> First 20 nodes: (D:7,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=7
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up b)', '(stack c d)', '(unstack c e)', '(put-down c)', '(unstack c d)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
unstack,(on ?x ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 360  <<<<

> Fringe size: 1229
> First 20 nodes: (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=7
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up b)', '(stack c d)', '(unstack c e)', '(put-down c)', '(unstack c e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
unstack,(on ?x ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 361  <<<<

> Fringe size: 1233
> First 20 nodes: (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=5
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack e b)']
> Next lifted action: put-down
> Repair set:
unstack,(holding ?y),effPos,1
stack,(not (clear ?y)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=5

>>>>  A* iteration 362  <<<<

> Fringe size: 1234
> First 20 nodes: (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=6
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack e b)', '(put-down a)']
> Next lifted action: unstack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(not (clear ?y)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 363  <<<<

> Fringe size: 1241
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=7
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack e b)', '(put-down a)', '(unstack c e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(not (clear ?y)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 364  <<<<

> Fringe size: 1243
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack e b)', '(put-down a)', '(unstack c e)', '(stack c a)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(not (clear ?y)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 365  <<<<

> Fringe size: 1250
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack e b)', '(put-down a)', '(unstack c e)', '(stack c a)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(not (clear ?y)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 366  <<<<

> Fringe size: 1252
> First 20 nodes: (D:11,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack e b)', '(put-down a)', '(unstack c e)', '(stack c a)', '(pick-up a)', '(stack e c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(not (clear ?y)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 367  <<<<

> Fringe size: 1259
> First 20 nodes: (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack e b)', '(put-down a)', '(unstack c e)', '(stack c a)', '(pick-up a)', '(stack e c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(not (clear ?y)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 368  <<<<

> Fringe size: 1261
> First 20 nodes: (D:9,C:2), (D:9,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack e b)', '(put-down a)', '(unstack c e)', '(stack e a)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(not (clear ?y)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 369  <<<<

> Fringe size: 1268
> First 20 nodes: (D:10,C:2), (D:9,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack e b)', '(put-down a)', '(unstack c e)', '(stack e a)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(not (clear ?y)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 370  <<<<

> Fringe size: 1270
> First 20 nodes: (D:11,C:2), (D:9,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack e b)', '(put-down a)', '(unstack c e)', '(stack e a)', '(pick-up a)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(not (clear ?y)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 371  <<<<

> Fringe size: 1277
> First 20 nodes: (D:9,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack e b)', '(put-down a)', '(unstack c e)', '(stack e a)', '(pick-up a)', '(stack c e)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(not (clear ?y)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(unstack c d)', '(unstack c e)', '(unstack e b)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(put-down b)', '(put-down c)']
> Current state:
[<Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(unstack b a)', '(unstack c d)', '(unstack c e)']
> Current state:
[<Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack c b)', '(stack c c)', '(stack c d)']
> Current state:
[<Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, b)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)']
> Current state:
[<Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom ontable(c)>]
> Possible groundings:
['(unstack b a)', '(unstack c d)', '(unstack c e)']
> Current state:
[<Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom ontable(c)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack c b)', '(stack c c)', '(stack c d)']
> Current state:
[<Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(put-down c)']
> Current state:
[<Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom ontable(c)>]
> Possible groundings:
['(unstack b a)', '(unstack c d)', '(unstack c e)']
> Current state:
[<Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom ontable(c)>]
> Possible groundings:
['(stack c b)', '(stack c c)', '(stack c d)']
> Current state:
[<Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom ontable(c)>]
> Possible groundings:
['(stack c b)', '(stack c c)', '(stack c d)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(put-down a)', '(put-down b)', '(put-down c)', '(put-down d)', '(put-down e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(unstack c e)', '(unstack e b)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(c, a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(c, a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(c, a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(c, a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']

>>>>  A* iteration 372  <<<<

> Fringe size: 1284
> First 20 nodes: (D:10,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack e b)', '(put-down a)', '(unstack c e)', '(stack e a)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(not (clear ?y)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 373  <<<<

> Fringe size: 1286
> First 20 nodes: (D:11,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack e b)', '(put-down a)', '(unstack c e)', '(stack e a)', '(pick-up e)', '(stack c a)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(not (clear ?y)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 374  <<<<

> Fringe size: 1293
> First 20 nodes: (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack e b)', '(put-down a)', '(unstack c e)', '(stack e a)', '(pick-up e)', '(stack c a)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(not (clear ?y)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 375  <<<<

> Fringe size: 1295
> First 20 nodes: (D:7,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=6
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack e b)', '(put-down b)']
> Next lifted action: unstack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(not (clear ?y)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 376  <<<<

> Fringe size: 1313
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=7
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack e b)', '(put-down b)', '(unstack b a)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(not (clear ?y)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=19

>>>>  A* iteration 377  <<<<

> Fringe size: 1316
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(not (clear ?y)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 378  <<<<

> Fringe size: 1335
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a c)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(not (clear ?y)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 379  <<<<

> Fringe size: 1338
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a c)', '(pick-up a)', '(stack b c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(not (clear ?y)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 380  <<<<

> Fringe size: 1357
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a c)', '(pick-up a)', '(stack b c)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(not (clear ?y)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 381  <<<<

> Fringe size: 1360
> First 20 nodes: (D:11,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a c)', '(pick-up a)', '(stack e c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(not (clear ?y)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 382  <<<<

> Fringe size: 1379
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a c)', '(pick-up a)', '(stack e c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(not (clear ?y)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 383  <<<<

> Fringe size: 1381
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(not (clear ?y)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 384  <<<<

> Fringe size: 1399
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b c)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(not (clear ?y)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=19

>>>>  A* iteration 385  <<<<

> Fringe size: 1402
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b c)', '(pick-up b)', '(stack a c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(not (clear ?y)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 386  <<<<

> Fringe size: 1421
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b c)', '(pick-up b)', '(stack a c)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(not (clear ?y)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 387  <<<<

> Fringe size: 1423
> First 20 nodes: (D:11,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b c)', '(pick-up b)', '(stack e c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(not (clear ?y)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom ontable(b)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(unstack b a)', '(unstack c e)', '(unstack e b)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom ontable(b)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom on(a, c)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom on(a, c)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom on(a, c)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom on(a, c)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom on(a, c)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom on(a, c)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom on(a, c)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom on(a, c)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']

>>>>  A* iteration 388  <<<<

> Fringe size: 1441
> First 20 nodes: (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b c)', '(pick-up b)', '(stack e c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(not (clear ?y)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=19

>>>>  A* iteration 389  <<<<

> Fringe size: 1443
> First 20 nodes: (D:9,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(not (clear ?y)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 390  <<<<

> Fringe size: 1461
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(not (clear ?y)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=19

>>>>  A* iteration 391  <<<<

> Fringe size: 1464
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e c)', '(pick-up e)', '(stack a c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(not (clear ?y)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 392  <<<<

> Fringe size: 1483
> First 20 nodes: (D:10,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e c)', '(pick-up e)', '(stack a c)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(not (clear ?y)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 393  <<<<

> Fringe size: 1485
> First 20 nodes: (D:11,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e c)', '(pick-up e)', '(stack b c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(not (clear ?y)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 394  <<<<

> Fringe size: 1503
> First 20 nodes: (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e c)', '(pick-up e)', '(stack b c)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(not (clear ?y)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=19

>>>>  A* iteration 395  <<<<

> Fringe size: 1514
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=7
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack e b)', '(put-down b)', '(unstack c e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(not (clear ?y)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=12

>>>>  A* iteration 396  <<<<

> Fringe size: 1516
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack e b)', '(put-down b)', '(unstack c e)', '(stack c b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(not (clear ?y)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 397  <<<<

> Fringe size: 1527
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack e b)', '(put-down b)', '(unstack c e)', '(stack c b)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(not (clear ?y)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=12

>>>>  A* iteration 398  <<<<

> Fringe size: 1529
> First 20 nodes: (D:11,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack e b)', '(put-down b)', '(unstack c e)', '(stack c b)', '(pick-up b)', '(stack e c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(not (clear ?y)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 399  <<<<

> Fringe size: 1540
> First 20 nodes: (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack e b)', '(put-down b)', '(unstack c e)', '(stack c b)', '(pick-up b)', '(stack e c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(not (clear ?y)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=12

>>>>  A* iteration 400  <<<<

> Fringe size: 1542
> First 20 nodes: (D:9,C:2), (D:9,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack e b)', '(put-down b)', '(unstack c e)', '(stack e b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(not (clear ?y)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 401  <<<<

> Fringe size: 1553
> First 20 nodes: (D:10,C:2), (D:9,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack e b)', '(put-down b)', '(unstack c e)', '(stack e b)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(not (clear ?y)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=12

>>>>  A* iteration 402  <<<<

> Fringe size: 1555
> First 20 nodes: (D:11,C:2), (D:9,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack e b)', '(put-down b)', '(unstack c e)', '(stack e b)', '(pick-up b)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(not (clear ?y)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 403  <<<<

> Fringe size: 1566
> First 20 nodes: (D:9,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack e b)', '(put-down b)', '(unstack c e)', '(stack e b)', '(pick-up b)', '(stack c e)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(not (clear ?y)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=12
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom on(a, c)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom on(a, c)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom ontable(b)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom ontable(b)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, b)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, b)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, b)>, <Atom on(b, a)>, <Atom on(e, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, b)>, <Atom on(b, a)>, <Atom on(e, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom ontable(b)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom ontable(b)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom ontable(b)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom ontable(b)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom ontable(b)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]

>>>>  A* iteration 404  <<<<

> Fringe size: 1577
> First 20 nodes: (D:10,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack e b)', '(put-down b)', '(unstack c e)', '(stack e b)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(not (clear ?y)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=12

>>>>  A* iteration 405  <<<<

> Fringe size: 1579
> First 20 nodes: (D:11,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack e b)', '(put-down b)', '(unstack c e)', '(stack e b)', '(pick-up e)', '(stack c b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(not (clear ?y)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 406  <<<<

> Fringe size: 1590
> First 20 nodes: (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack e b)', '(put-down b)', '(unstack c e)', '(stack e b)', '(pick-up e)', '(stack c b)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(not (clear ?y)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=12

>>>>  A* iteration 407  <<<<

> Fringe size: 1591
> First 20 nodes: (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=6
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack e b)', '(put-down c)']
> Next lifted action: unstack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(not (clear ?y)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 408  <<<<

> Fringe size: 1596
> First 20 nodes: (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=7
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack e b)', '(put-down c)', '(unstack c e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(not (clear ?y)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 409  <<<<

> Fringe size: 1597
> First 20 nodes: (D:7,C:2), (D:6,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=6
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack e b)', '(put-down d)']
> Next lifted action: unstack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(not (clear ?y)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 410  <<<<

> Fringe size: 1602
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=7
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack e b)', '(put-down d)', '(unstack c e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(not (clear ?y)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 411  <<<<

> Fringe size: 1603
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack e b)', '(put-down d)', '(unstack c e)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(not (clear ?y)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 412  <<<<

> Fringe size: 1608
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack e b)', '(put-down d)', '(unstack c e)', '(stack c d)', '(pick-up d)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(not (clear ?y)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 413  <<<<

> Fringe size: 1609
> First 20 nodes: (D:11,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack e b)', '(put-down d)', '(unstack c e)', '(stack c d)', '(pick-up d)', '(stack e c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(not (clear ?y)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 414  <<<<

> Fringe size: 1614
> First 20 nodes: (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack e b)', '(put-down d)', '(unstack c e)', '(stack c d)', '(pick-up d)', '(stack e c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(not (clear ?y)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 415  <<<<

> Fringe size: 1615
> First 20 nodes: (D:9,C:2), (D:9,C:2), (D:6,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack e b)', '(put-down d)', '(unstack c e)', '(stack e d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(not (clear ?y)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 416  <<<<

> Fringe size: 1620
> First 20 nodes: (D:10,C:2), (D:9,C:2), (D:6,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack e b)', '(put-down d)', '(unstack c e)', '(stack e d)', '(pick-up d)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(not (clear ?y)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 417  <<<<

> Fringe size: 1621
> First 20 nodes: (D:11,C:2), (D:9,C:2), (D:6,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack e b)', '(put-down d)', '(unstack c e)', '(stack e d)', '(pick-up d)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(not (clear ?y)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 418  <<<<

> Fringe size: 1626
> First 20 nodes: (D:9,C:2), (D:6,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack e b)', '(put-down d)', '(unstack c e)', '(stack e d)', '(pick-up d)', '(stack c e)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(not (clear ?y)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 419  <<<<

> Fringe size: 1631
> First 20 nodes: (D:10,C:2), (D:6,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack e b)', '(put-down d)', '(unstack c e)', '(stack e d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(not (clear ?y)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 420  <<<<

> Fringe size: 1632
> First 20 nodes: (D:11,C:2), (D:6,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack e b)', '(put-down d)', '(unstack c e)', '(stack e d)', '(pick-up e)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(not (clear ?y)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 421  <<<<

> Fringe size: 1637
> First 20 nodes: (D:6,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack e b)', '(put-down d)', '(unstack c e)', '(stack e d)', '(pick-up e)', '(stack c d)', '(pick-up d)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(not (clear ?y)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 422  <<<<

> Fringe size: 1638
> First 20 nodes: (D:7,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=6
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack e b)', '(put-down e)']
> Next lifted action: unstack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(not (clear ?y)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 423  <<<<

> Fringe size: 1648
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=7
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack e b)', '(put-down e)', '(unstack c e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(not (clear ?y)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=11

>>>>  A* iteration 424  <<<<

> Fringe size: 1649
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack e b)', '(put-down e)', '(unstack c e)', '(stack b e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(not (clear ?y)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 425  <<<<

> Fringe size: 1660
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack e b)', '(put-down e)', '(unstack c e)', '(stack b e)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(not (clear ?y)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=12

>>>>  A* iteration 426  <<<<

> Fringe size: 1661
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack e b)', '(put-down e)', '(unstack c e)', '(stack b e)', '(pick-up e)', '(stack c b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(not (clear ?y)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom ontable(b)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, b)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, b)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom ontable(c)>]
> Possible groundings:
['(unstack c e)', '(unstack e b)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom ontable(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(unstack c e)', '(unstack e b)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(unstack c e)', '(unstack e b)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(c, b)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']

>>>>  A* iteration 427  <<<<

> Fringe size: 1662
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack e b)', '(put-down e)', '(unstack c e)', '(stack b e)', '(pick-up e)', '(stack e b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(not (clear ?y)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 428  <<<<

> Fringe size: 1663
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack e b)', '(put-down e)', '(unstack c e)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(not (clear ?y)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 429  <<<<

> Fringe size: 1673
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack e b)', '(put-down e)', '(unstack c e)', '(stack c e)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(not (clear ?y)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=11

>>>>  A* iteration 430  <<<<

> Fringe size: 1674
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack e b)', '(put-down e)', '(unstack c e)', '(stack c e)', '(pick-up e)', '(stack b c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(not (clear ?y)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 431  <<<<

> Fringe size: 1675
> First 20 nodes: (D:8,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack e b)', '(put-down e)', '(unstack c e)', '(stack c e)', '(pick-up e)', '(stack e c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(not (clear ?y)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 432  <<<<

> Fringe size: 1676
> First 20 nodes: (D:9,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack e b)', '(put-down e)', '(unstack c e)', '(stack e e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(not (clear ?y)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 433  <<<<

> Fringe size: 1686
> First 20 nodes: (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c e)', '(unstack e b)', '(put-down e)', '(unstack c e)', '(stack e e)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(not (clear ?y)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=11

>>>>  A* iteration 434  <<<<

> Fringe size: 1686
> First 20 nodes: (D:6,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=5
> Ground actions: ['(unstack c e)', '(put-down c)', '(pick-up c)', '(stack c d)', '(unstack c e)']
> Next lifted action: put-down
> Repair set:
unstack,(on ?x ?y),precPos,-1
put-down,(holding ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=1

>>>>  A* iteration 435  <<<<

> Fringe size: 1687
> First 20 nodes: (D:7,C:2), (D:7,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=6
> Ground actions: ['(unstack c e)', '(put-down c)', '(pick-up c)', '(stack c d)', '(unstack c e)', '(put-down c)']
> Next lifted action: unstack
> Repair set:
unstack,(on ?x ?y),precPos,-1
put-down,(holding ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 436  <<<<

> Fringe size: 1688
> First 20 nodes: (D:7,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=7
> Ground actions: ['(unstack c e)', '(put-down c)', '(pick-up c)', '(stack c d)', '(unstack c e)', '(put-down c)', '(unstack c d)']
> Next lifted action: stack
> Repair set:
unstack,(on ?x ?y),precPos,-1
put-down,(holding ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 437  <<<<

> Fringe size: 1689
> First 20 nodes: (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=7
> Ground actions: ['(unstack c e)', '(put-down c)', '(pick-up c)', '(stack c d)', '(unstack c e)', '(put-down c)', '(unstack c e)']
> Next lifted action: stack
> Repair set:
unstack,(on ?x ?y),precPos,-1
put-down,(holding ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 438  <<<<

> Fringe size: 1689
> First 20 nodes: (D:6,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=5
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up d)', '(stack c b)', '(unstack c e)']
> Next lifted action: put-down
> Repair set:
put-down,(holding ?x),precPos,-1
unstack,(on ?x ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=1

>>>>  A* iteration 439  <<<<

> Fringe size: 1691
> First 20 nodes: (D:7,C:2), (D:7,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=6
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up d)', '(stack c b)', '(unstack c e)', '(put-down c)']
> Next lifted action: unstack
> Repair set:
put-down,(holding ?x),precPos,-1
unstack,(on ?x ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 440  <<<<

> Fringe size: 1693
> First 20 nodes: (D:7,C:2), (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=7
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up d)', '(stack c b)', '(unstack c e)', '(put-down c)', '(unstack c b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
unstack,(on ?x ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 441  <<<<

> Fringe size: 1695
> First 20 nodes: (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=7
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up d)', '(stack c b)', '(unstack c e)', '(put-down c)', '(unstack c e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
unstack,(on ?x ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 442  <<<<

> Fringe size: 1696
> First 20 nodes: (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=5
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up d)', '(stack c b)', '(unstack b a)']
> Next lifted action: put-down
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(not (clear ?y)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 443  <<<<

> Fringe size: 1698
> First 20 nodes: (D:7,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=6
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up d)', '(stack c b)', '(unstack b a)', '(put-down b)']
> Next lifted action: unstack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(not (clear ?y)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 444  <<<<

> Fringe size: 1703
> First 20 nodes: (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=7
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up d)', '(stack c b)', '(unstack b a)', '(put-down b)', '(unstack c b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(not (clear ?y)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 445  <<<<

> Fringe size: 1704
> First 20 nodes: (D:9,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up d)', '(stack c b)', '(unstack b a)', '(put-down b)', '(unstack c b)', '(stack c b)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(not (clear ?y)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 446  <<<<

> Fringe size: 1709
> First 20 nodes: (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up d)', '(stack c b)', '(unstack b a)', '(put-down b)', '(unstack c b)', '(stack c b)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(not (clear ?y)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 447  <<<<

> Fringe size: 1711
> First 20 nodes: (D:7,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=6
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up d)', '(stack c b)', '(unstack b a)', '(put-down c)']
> Next lifted action: unstack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(not (clear ?y)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 448  <<<<

> Fringe size: 1716
> First 20 nodes: (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:11,C:3)

> Node instance:
> Depth=7
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up d)', '(stack c b)', '(unstack b a)', '(put-down c)', '(unstack c b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(not (clear ?y)),effNeg,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 449  <<<<

> Fringe size: 1716
> First 20 nodes: (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:11,C:3)

> Node instance:
> Depth=5
> Ground actions: ['(unstack c e)', '(put-down c)', '(pick-up d)', '(stack c c)', '(unstack c e)']
> Next lifted action: put-down
> Repair set:
unstack,(on ?x ?y),precPos,-1
put-down,(holding ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=1

>>>>  A* iteration 450  <<<<

> Fringe size: 1717
> First 20 nodes: (D:7,C:2), (D:7,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=6
> Ground actions: ['(unstack c e)', '(put-down c)', '(pick-up d)', '(stack c c)', '(unstack c e)', '(put-down c)']
> Next lifted action: unstack
> Repair set:
unstack,(on ?x ?y),precPos,-1
put-down,(holding ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 451  <<<<

> Fringe size: 1718
> First 20 nodes: (D:7,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:11,C:3)

> Node instance:
> Depth=7
> Ground actions: ['(unstack c e)', '(put-down c)', '(pick-up d)', '(stack c c)', '(unstack c e)', '(put-down c)', '(unstack c c)']
> Next lifted action: stack
> Repair set:
unstack,(on ?x ?y),precPos,-1
put-down,(holding ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom on(e, b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom ontable(c)>]
> Possible groundings:
['(put-down c)']
> Current state:
[<Atom on(e, b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom ontable(c)>]
> Possible groundings:
['(unstack c d)', '(unstack c e)']
> Current state:
[<Atom on(e, b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom ontable(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)']
> Current state:
[<Atom on(e, b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom ontable(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)']
> Current state:
[<Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, b)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(put-down c)']
> Current state:
[<Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, b)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom ontable(c)>]
> Possible groundings:
['(unstack b a)', '(unstack c b)', '(unstack c e)']
> Current state:
[<Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, b)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom ontable(c)>]
> Possible groundings:
['(stack c b)', '(stack c c)', '(stack c d)']
> Current state:
[<Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, b)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom ontable(c)>]
> Possible groundings:
['(stack c b)', '(stack c c)', '(stack c d)']
> Current state:
[<Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, b)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(put-down b)', '(put-down c)']
> Current state:
[<Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, b)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(unstack b a)', '(unstack c b)', '(unstack c e)']
> Current state:
[<Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, b)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack c b)', '(stack c c)', '(stack c d)']
> Current state:
[<Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, b)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)']
> Current state:
[<Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, b)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack c b)', '(stack c c)', '(stack c d)']
> Current state:
[<Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, b)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom ontable(c)>]
> Possible groundings:
['(unstack b a)', '(unstack c b)', '(unstack c e)']
> Current state:
[<Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, b)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom ontable(c)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack c b)', '(stack c c)', '(stack c d)']
> Current state:
[<Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom ontable(c)>]
> Possible groundings:
['(put-down c)']
> Current state:
[<Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom ontable(c)>]
> Possible groundings:
['(unstack c c)', '(unstack c e)']
> Current state:
[<Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom ontable(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)']

>>>>  A* iteration 452  <<<<

> Fringe size: 1719
> First 20 nodes: (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=7
> Ground actions: ['(unstack c e)', '(put-down c)', '(pick-up d)', '(stack c c)', '(unstack c e)', '(put-down c)', '(unstack c e)']
> Next lifted action: stack
> Repair set:
unstack,(on ?x ?y),precPos,-1
put-down,(holding ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 453  <<<<

> Fringe size: 1721
> First 20 nodes: (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:11,C:3)

> Node instance:
> Depth=4
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)']
> Next lifted action: unstack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 454  <<<<

> Fringe size: 1725
> First 20 nodes: (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=5
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)']
> Next lifted action: put-down
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=5

>>>>  A* iteration 455  <<<<

> Fringe size: 1727
> First 20 nodes: (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=6
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down a)']
> Next lifted action: unstack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 456  <<<<

> Fringe size: 1734
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=7
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down a)', '(unstack e b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 457  <<<<

> Fringe size: 1736
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down a)', '(unstack e b)', '(stack c a)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 458  <<<<

> Fringe size: 1738
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down a)', '(unstack e b)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 459  <<<<

> Fringe size: 1745
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down a)', '(unstack e b)', '(stack c c)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 460  <<<<

> Fringe size: 1747
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down a)', '(unstack e b)', '(stack c c)', '(pick-up a)', '(stack e a)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 461  <<<<

> Fringe size: 1754
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down a)', '(unstack e b)', '(stack c c)', '(pick-up a)', '(stack e a)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 462  <<<<

> Fringe size: 1756
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down a)', '(unstack e b)', '(stack c c)', '(pick-up a)', '(stack e c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 463  <<<<

> Fringe size: 1763
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down a)', '(unstack e b)', '(stack c c)', '(pick-up a)', '(stack e c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 464  <<<<

> Fringe size: 1765
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down a)', '(unstack e b)', '(stack c c)', '(pick-up a)', '(stack e d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 465  <<<<

> Fringe size: 1772
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down a)', '(unstack e b)', '(stack c c)', '(pick-up a)', '(stack e d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 466  <<<<

> Fringe size: 1774
> First 20 nodes: (D:11,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down a)', '(unstack e b)', '(stack c c)', '(pick-up a)', '(stack e e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 467  <<<<

> Fringe size: 1781
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down a)', '(unstack e b)', '(stack c c)', '(pick-up a)', '(stack e e)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 468  <<<<

> Fringe size: 1783
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down a)', '(unstack e b)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 469  <<<<

> Fringe size: 1790
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down a)', '(unstack e b)', '(stack c d)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 470  <<<<

> Fringe size: 1792
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down a)', '(unstack e b)', '(stack c d)', '(pick-up a)', '(stack e a)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 471  <<<<

> Fringe size: 1799
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down a)', '(unstack e b)', '(stack c d)', '(pick-up a)', '(stack e a)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 472  <<<<

> Fringe size: 1801
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down a)', '(unstack e b)', '(stack c d)', '(pick-up a)', '(stack e c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3
> Current state:
[<Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom ontable(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(unstack c d)', '(unstack c e)', '(unstack e b)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(put-down a)', '(put-down b)', '(put-down c)', '(put-down d)', '(put-down e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(unstack c d)', '(unstack c e)', '(unstack e b)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(c, a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom on(e, a)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom on(e, c)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>, <Atom on(e, d)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']

>>>>  A* iteration 473  <<<<

> Fringe size: 1808
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down a)', '(unstack e b)', '(stack c d)', '(pick-up a)', '(stack e c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 474  <<<<

> Fringe size: 1810
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down a)', '(unstack e b)', '(stack c d)', '(pick-up a)', '(stack e d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 475  <<<<

> Fringe size: 1817
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down a)', '(unstack e b)', '(stack c d)', '(pick-up a)', '(stack e d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 476  <<<<

> Fringe size: 1819
> First 20 nodes: (D:11,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down a)', '(unstack e b)', '(stack c d)', '(pick-up a)', '(stack e e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 477  <<<<

> Fringe size: 1826
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down a)', '(unstack e b)', '(stack c d)', '(pick-up a)', '(stack e e)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 478  <<<<

> Fringe size: 1828
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down a)', '(unstack e b)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 479  <<<<

> Fringe size: 1835
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down a)', '(unstack e b)', '(stack c e)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 480  <<<<

> Fringe size: 1837
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down a)', '(unstack e b)', '(stack c e)', '(pick-up a)', '(stack e a)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 481  <<<<

> Fringe size: 1844
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down a)', '(unstack e b)', '(stack c e)', '(pick-up a)', '(stack e a)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 482  <<<<

> Fringe size: 1846
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down a)', '(unstack e b)', '(stack c e)', '(pick-up a)', '(stack e c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 483  <<<<

> Fringe size: 1853
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down a)', '(unstack e b)', '(stack c e)', '(pick-up a)', '(stack e c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 484  <<<<

> Fringe size: 1855
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down a)', '(unstack e b)', '(stack c e)', '(pick-up a)', '(stack e d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 485  <<<<

> Fringe size: 1862
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down a)', '(unstack e b)', '(stack c e)', '(pick-up a)', '(stack e d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 486  <<<<

> Fringe size: 1864
> First 20 nodes: (D:11,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down a)', '(unstack e b)', '(stack c e)', '(pick-up a)', '(stack e e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 487  <<<<

> Fringe size: 1871
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down a)', '(unstack e b)', '(stack c e)', '(pick-up a)', '(stack e e)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 488  <<<<

> Fringe size: 1873
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down a)', '(unstack e b)', '(stack e a)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 489  <<<<

> Fringe size: 1880
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down a)', '(unstack e b)', '(stack e a)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 490  <<<<

> Fringe size: 1882
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down a)', '(unstack e b)', '(stack e a)', '(pick-up e)', '(stack c a)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 491  <<<<

> Fringe size: 1884
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down a)', '(unstack e b)', '(stack e a)', '(pick-up e)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 492  <<<<

> Fringe size: 1886
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down a)', '(unstack e b)', '(stack e a)', '(pick-up e)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 493  <<<<

> Fringe size: 1888
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down a)', '(unstack e b)', '(stack e a)', '(pick-up e)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']

>>>>  A* iteration 494  <<<<

> Fringe size: 1890
> First 20 nodes: (D:9,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down a)', '(unstack e b)', '(stack e c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 495  <<<<

> Fringe size: 1897
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down a)', '(unstack e b)', '(stack e c)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 496  <<<<

> Fringe size: 1899
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down a)', '(unstack e b)', '(stack e c)', '(pick-up a)', '(stack c a)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 497  <<<<

> Fringe size: 1906
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down a)', '(unstack e b)', '(stack e c)', '(pick-up a)', '(stack c a)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 498  <<<<

> Fringe size: 1908
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down a)', '(unstack e b)', '(stack e c)', '(pick-up a)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 499  <<<<

> Fringe size: 1915
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down a)', '(unstack e b)', '(stack e c)', '(pick-up a)', '(stack c c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 500  <<<<

> Fringe size: 1917
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down a)', '(unstack e b)', '(stack e c)', '(pick-up a)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 501  <<<<

> Fringe size: 1924
> First 20 nodes: (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down a)', '(unstack e b)', '(stack e c)', '(pick-up a)', '(stack c d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 502  <<<<

> Fringe size: 1926
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down a)', '(unstack e b)', '(stack e c)', '(pick-up a)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 503  <<<<

> Fringe size: 1933
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down a)', '(unstack e b)', '(stack e c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 504  <<<<

> Fringe size: 1935
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down a)', '(unstack e b)', '(stack e c)', '(pick-up e)', '(stack c a)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 505  <<<<

> Fringe size: 1937
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down a)', '(unstack e b)', '(stack e c)', '(pick-up e)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 506  <<<<

> Fringe size: 1944
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down a)', '(unstack e b)', '(stack e c)', '(pick-up e)', '(stack c c)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 507  <<<<

> Fringe size: 1946
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down a)', '(unstack e b)', '(stack e c)', '(pick-up e)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 508  <<<<

> Fringe size: 1953
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down a)', '(unstack e b)', '(stack e c)', '(pick-up e)', '(stack c d)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 509  <<<<

> Fringe size: 1955
> First 20 nodes: (D:11,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down a)', '(unstack e b)', '(stack e c)', '(pick-up e)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 510  <<<<

> Fringe size: 1962
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down a)', '(unstack e b)', '(stack e c)', '(pick-up e)', '(stack c e)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 511  <<<<

> Fringe size: 1964
> First 20 nodes: (D:9,C:2), (D:9,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down a)', '(unstack e b)', '(stack e d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 512  <<<<

> Fringe size: 1971
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down a)', '(unstack e b)', '(stack e d)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 513  <<<<

> Fringe size: 1973
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down a)', '(unstack e b)', '(stack e d)', '(pick-up a)', '(stack c a)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom on(e, c)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>, <Atom on(e, b)>, <Atom on(c, a)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom on(e, c)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom on(e, c)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(c, a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']

>>>>  A* iteration 514  <<<<

> Fringe size: 1980
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down a)', '(unstack e b)', '(stack e d)', '(pick-up a)', '(stack c a)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 515  <<<<

> Fringe size: 1982
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down a)', '(unstack e b)', '(stack e d)', '(pick-up a)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 516  <<<<

> Fringe size: 1989
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down a)', '(unstack e b)', '(stack e d)', '(pick-up a)', '(stack c c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 517  <<<<

> Fringe size: 1991
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down a)', '(unstack e b)', '(stack e d)', '(pick-up a)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 518  <<<<

> Fringe size: 1998
> First 20 nodes: (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down a)', '(unstack e b)', '(stack e d)', '(pick-up a)', '(stack c d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 519  <<<<

> Fringe size: 2000
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down a)', '(unstack e b)', '(stack e d)', '(pick-up a)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 520  <<<<

> Fringe size: 2007
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down a)', '(unstack e b)', '(stack e d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 521  <<<<

> Fringe size: 2009
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down a)', '(unstack e b)', '(stack e d)', '(pick-up e)', '(stack c a)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 522  <<<<

> Fringe size: 2011
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down a)', '(unstack e b)', '(stack e d)', '(pick-up e)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 523  <<<<

> Fringe size: 2018
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down a)', '(unstack e b)', '(stack e d)', '(pick-up e)', '(stack c c)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 524  <<<<

> Fringe size: 2020
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down a)', '(unstack e b)', '(stack e d)', '(pick-up e)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 525  <<<<

> Fringe size: 2027
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down a)', '(unstack e b)', '(stack e d)', '(pick-up e)', '(stack c d)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 526  <<<<

> Fringe size: 2029
> First 20 nodes: (D:11,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down a)', '(unstack e b)', '(stack e d)', '(pick-up e)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 527  <<<<

> Fringe size: 2036
> First 20 nodes: (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down a)', '(unstack e b)', '(stack e d)', '(pick-up e)', '(stack c e)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 528  <<<<

> Fringe size: 2038
> First 20 nodes: (D:9,C:2), (D:9,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down a)', '(unstack e b)', '(stack e e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 529  <<<<

> Fringe size: 2045
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down a)', '(unstack e b)', '(stack e e)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 530  <<<<

> Fringe size: 2047
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down a)', '(unstack e b)', '(stack e e)', '(pick-up a)', '(stack c a)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 531  <<<<

> Fringe size: 2054
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down a)', '(unstack e b)', '(stack e e)', '(pick-up a)', '(stack c a)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 532  <<<<

> Fringe size: 2056
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down a)', '(unstack e b)', '(stack e e)', '(pick-up a)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 533  <<<<

> Fringe size: 2063
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down a)', '(unstack e b)', '(stack e e)', '(pick-up a)', '(stack c c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>, <Atom on(e, b)>, <Atom on(c, a)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>, <Atom on(e, d)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>, <Atom on(e, d)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(c, a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>, <Atom on(e, d)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>, <Atom on(e, b)>, <Atom on(c, a)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']

>>>>  A* iteration 534  <<<<

> Fringe size: 2065
> First 20 nodes: (D:10,C:2), (D:9,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down a)', '(unstack e b)', '(stack e e)', '(pick-up a)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 535  <<<<

> Fringe size: 2067
> First 20 nodes: (D:11,C:2), (D:9,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down a)', '(unstack e b)', '(stack e e)', '(pick-up a)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 536  <<<<

> Fringe size: 2074
> First 20 nodes: (D:9,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down a)', '(unstack e b)', '(stack e e)', '(pick-up a)', '(stack c d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 537  <<<<

> Fringe size: 2081
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down a)', '(unstack e b)', '(stack e e)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 538  <<<<

> Fringe size: 2083
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down a)', '(unstack e b)', '(stack e e)', '(pick-up e)', '(stack c a)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 539  <<<<

> Fringe size: 2085
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down a)', '(unstack e b)', '(stack e e)', '(pick-up e)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 540  <<<<

> Fringe size: 2092
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down a)', '(unstack e b)', '(stack e e)', '(pick-up e)', '(stack c c)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 541  <<<<

> Fringe size: 2094
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down a)', '(unstack e b)', '(stack e e)', '(pick-up e)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 542  <<<<

> Fringe size: 2101
> First 20 nodes: (D:10,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down a)', '(unstack e b)', '(stack e e)', '(pick-up e)', '(stack c d)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 543  <<<<

> Fringe size: 2103
> First 20 nodes: (D:11,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down a)', '(unstack e b)', '(stack e e)', '(pick-up e)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 544  <<<<

> Fringe size: 2110
> First 20 nodes: (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down a)', '(unstack e b)', '(stack e e)', '(pick-up e)', '(stack c e)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 545  <<<<

> Fringe size: 2112
> First 20 nodes: (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=6
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down d)']
> Next lifted action: unstack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 546  <<<<

> Fringe size: 2126
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=7
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down d)', '(unstack e b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=15

>>>>  A* iteration 547  <<<<

> Fringe size: 2127
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down d)', '(unstack e b)', '(stack b c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 548  <<<<

> Fringe size: 2142
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down d)', '(unstack e b)', '(stack b c)', '(pick-up d)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=16

>>>>  A* iteration 549  <<<<

> Fringe size: 2143
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down d)', '(unstack e b)', '(stack b c)', '(pick-up d)', '(stack c b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 550  <<<<

> Fringe size: 2144
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down d)', '(unstack e b)', '(stack b c)', '(pick-up d)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 551  <<<<

> Fringe size: 2145
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down d)', '(unstack e b)', '(stack b c)', '(pick-up d)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 552  <<<<

> Fringe size: 2146
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down d)', '(unstack e b)', '(stack b c)', '(pick-up d)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 553  <<<<

> Fringe size: 2147
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down d)', '(unstack e b)', '(stack b c)', '(pick-up d)', '(stack e b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(unstack c d)', '(unstack c e)', '(unstack e b)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom on(c, b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']

>>>>  A* iteration 554  <<<<

> Fringe size: 2162
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down d)', '(unstack e b)', '(stack b c)', '(pick-up d)', '(stack e b)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=16

>>>>  A* iteration 555  <<<<

> Fringe size: 2163
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down d)', '(unstack e b)', '(stack b c)', '(pick-up d)', '(stack e c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 556  <<<<

> Fringe size: 2178
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down d)', '(unstack e b)', '(stack b c)', '(pick-up d)', '(stack e c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=16

>>>>  A* iteration 557  <<<<

> Fringe size: 2179
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down d)', '(unstack e b)', '(stack b c)', '(pick-up d)', '(stack e d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 558  <<<<

> Fringe size: 2194
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down d)', '(unstack e b)', '(stack b c)', '(pick-up d)', '(stack e d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=16

>>>>  A* iteration 559  <<<<

> Fringe size: 2195
> First 20 nodes: (D:11,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down d)', '(unstack e b)', '(stack b c)', '(pick-up d)', '(stack e e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 560  <<<<

> Fringe size: 2210
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down d)', '(unstack e b)', '(stack b c)', '(pick-up d)', '(stack e e)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=16

>>>>  A* iteration 561  <<<<

> Fringe size: 2211
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down d)', '(unstack e b)', '(stack b d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 562  <<<<

> Fringe size: 2212
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down d)', '(unstack e b)', '(stack b e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 563  <<<<

> Fringe size: 2227
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down d)', '(unstack e b)', '(stack b e)', '(pick-up d)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=16

>>>>  A* iteration 564  <<<<

> Fringe size: 2228
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down d)', '(unstack e b)', '(stack b e)', '(pick-up d)', '(stack c b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 565  <<<<

> Fringe size: 2229
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down d)', '(unstack e b)', '(stack b e)', '(pick-up d)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 566  <<<<

> Fringe size: 2230
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down d)', '(unstack e b)', '(stack b e)', '(pick-up d)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 567  <<<<

> Fringe size: 2231
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down d)', '(unstack e b)', '(stack b e)', '(pick-up d)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 568  <<<<

> Fringe size: 2232
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down d)', '(unstack e b)', '(stack b e)', '(pick-up d)', '(stack e b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 569  <<<<

> Fringe size: 2247
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down d)', '(unstack e b)', '(stack b e)', '(pick-up d)', '(stack e b)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=16

>>>>  A* iteration 570  <<<<

> Fringe size: 2248
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down d)', '(unstack e b)', '(stack b e)', '(pick-up d)', '(stack e c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom on(e, c)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom on(e, c)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom on(e, d)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom on(e, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom handempty()>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom on(c, b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom on(e, c)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom on(e, c)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom holding(d)>, <Atom on(c, d)>]

>>>>  A* iteration 571  <<<<

> Fringe size: 2263
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down d)', '(unstack e b)', '(stack b e)', '(pick-up d)', '(stack e c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=16

>>>>  A* iteration 572  <<<<

> Fringe size: 2264
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down d)', '(unstack e b)', '(stack b e)', '(pick-up d)', '(stack e d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 573  <<<<

> Fringe size: 2279
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down d)', '(unstack e b)', '(stack b e)', '(pick-up d)', '(stack e d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=16

>>>>  A* iteration 574  <<<<

> Fringe size: 2280
> First 20 nodes: (D:11,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down d)', '(unstack e b)', '(stack b e)', '(pick-up d)', '(stack e e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 575  <<<<

> Fringe size: 2295
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down d)', '(unstack e b)', '(stack b e)', '(pick-up d)', '(stack e e)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=16

>>>>  A* iteration 576  <<<<

> Fringe size: 2296
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down d)', '(unstack e b)', '(stack c b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 577  <<<<

> Fringe size: 2310
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down d)', '(unstack e b)', '(stack c b)', '(pick-up d)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=15

>>>>  A* iteration 578  <<<<

> Fringe size: 2311
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down d)', '(unstack e b)', '(stack c b)', '(pick-up d)', '(stack b c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 579  <<<<

> Fringe size: 2312
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down d)', '(unstack e b)', '(stack c b)', '(pick-up d)', '(stack b d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 580  <<<<

> Fringe size: 2313
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down d)', '(unstack e b)', '(stack c b)', '(pick-up d)', '(stack b e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 581  <<<<

> Fringe size: 2314
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down d)', '(unstack e b)', '(stack c b)', '(pick-up d)', '(stack e b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 582  <<<<

> Fringe size: 2328
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down d)', '(unstack e b)', '(stack c b)', '(pick-up d)', '(stack e b)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=15

>>>>  A* iteration 583  <<<<

> Fringe size: 2329
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down d)', '(unstack e b)', '(stack c b)', '(pick-up d)', '(stack e c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 584  <<<<

> Fringe size: 2343
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down d)', '(unstack e b)', '(stack c b)', '(pick-up d)', '(stack e c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=15

>>>>  A* iteration 585  <<<<

> Fringe size: 2344
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down d)', '(unstack e b)', '(stack c b)', '(pick-up d)', '(stack e d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 586  <<<<

> Fringe size: 2358
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down d)', '(unstack e b)', '(stack c b)', '(pick-up d)', '(stack e d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=15

>>>>  A* iteration 587  <<<<

> Fringe size: 2359
> First 20 nodes: (D:11,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down d)', '(unstack e b)', '(stack c b)', '(pick-up d)', '(stack e e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 588  <<<<

> Fringe size: 2373
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down d)', '(unstack e b)', '(stack c b)', '(pick-up d)', '(stack e e)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=15
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom on(e, d)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom on(e, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(c, b)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom on(c, b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom on(c, b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom on(c, b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom on(c, b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom on(c, b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom on(c, b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom on(c, b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom on(c, b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom on(c, b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom on(e, d)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom on(c, b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom on(e, d)>]
> Possible groundings:
['(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom on(c, b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom on(c, b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']

>>>>  A* iteration 589  <<<<

> Fringe size: 2374
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down d)', '(unstack e b)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 590  <<<<

> Fringe size: 2388
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down d)', '(unstack e b)', '(stack c c)', '(pick-up d)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=15

>>>>  A* iteration 591  <<<<

> Fringe size: 2389
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down d)', '(unstack e b)', '(stack c c)', '(pick-up d)', '(stack b c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 592  <<<<

> Fringe size: 2390
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down d)', '(unstack e b)', '(stack c c)', '(pick-up d)', '(stack b d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 593  <<<<

> Fringe size: 2391
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down d)', '(unstack e b)', '(stack c c)', '(pick-up d)', '(stack b e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 594  <<<<

> Fringe size: 2392
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down d)', '(unstack e b)', '(stack c c)', '(pick-up d)', '(stack e b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 595  <<<<

> Fringe size: 2406
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down d)', '(unstack e b)', '(stack c c)', '(pick-up d)', '(stack e b)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=15

>>>>  A* iteration 596  <<<<

> Fringe size: 2407
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down d)', '(unstack e b)', '(stack c c)', '(pick-up d)', '(stack e c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 597  <<<<

> Fringe size: 2421
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down d)', '(unstack e b)', '(stack c c)', '(pick-up d)', '(stack e c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=15

>>>>  A* iteration 598  <<<<

> Fringe size: 2422
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down d)', '(unstack e b)', '(stack c c)', '(pick-up d)', '(stack e d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 599  <<<<

> Fringe size: 2436
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down d)', '(unstack e b)', '(stack c c)', '(pick-up d)', '(stack e d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=15

>>>>  A* iteration 600  <<<<

> Fringe size: 2437
> First 20 nodes: (D:11,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down d)', '(unstack e b)', '(stack c c)', '(pick-up d)', '(stack e e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 601  <<<<

> Fringe size: 2451
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down d)', '(unstack e b)', '(stack c c)', '(pick-up d)', '(stack e e)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=15

>>>>  A* iteration 602  <<<<

> Fringe size: 2452
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down d)', '(unstack e b)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 603  <<<<

> Fringe size: 2453
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down d)', '(unstack e b)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 604  <<<<

> Fringe size: 2467
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down d)', '(unstack e b)', '(stack c e)', '(pick-up d)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=15

>>>>  A* iteration 605  <<<<

> Fringe size: 2468
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down d)', '(unstack e b)', '(stack c e)', '(pick-up d)', '(stack b c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 606  <<<<

> Fringe size: 2469
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down d)', '(unstack e b)', '(stack c e)', '(pick-up d)', '(stack b d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom on(e, c)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom on(e, c)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom on(e, d)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom on(e, d)>]
> Possible groundings:
['(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom handempty()>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]

>>>>  A* iteration 607  <<<<

> Fringe size: 2470
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down d)', '(unstack e b)', '(stack c e)', '(pick-up d)', '(stack b e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 608  <<<<

> Fringe size: 2471
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down d)', '(unstack e b)', '(stack c e)', '(pick-up d)', '(stack e b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 609  <<<<

> Fringe size: 2485
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down d)', '(unstack e b)', '(stack c e)', '(pick-up d)', '(stack e b)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=15

>>>>  A* iteration 610  <<<<

> Fringe size: 2486
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down d)', '(unstack e b)', '(stack c e)', '(pick-up d)', '(stack e c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 611  <<<<

> Fringe size: 2500
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down d)', '(unstack e b)', '(stack c e)', '(pick-up d)', '(stack e c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=15

>>>>  A* iteration 612  <<<<

> Fringe size: 2501
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down d)', '(unstack e b)', '(stack c e)', '(pick-up d)', '(stack e d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 613  <<<<

> Fringe size: 2515
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down d)', '(unstack e b)', '(stack c e)', '(pick-up d)', '(stack e d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=15

>>>>  A* iteration 614  <<<<

> Fringe size: 2516
> First 20 nodes: (D:11,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down d)', '(unstack e b)', '(stack c e)', '(pick-up d)', '(stack e e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 615  <<<<

> Fringe size: 2530
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down d)', '(unstack e b)', '(stack c e)', '(pick-up d)', '(stack e e)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=15

>>>>  A* iteration 616  <<<<

> Fringe size: 2531
> First 20 nodes: (D:9,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down d)', '(unstack e b)', '(stack e b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 617  <<<<

> Fringe size: 2545
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down d)', '(unstack e b)', '(stack e b)', '(pick-up d)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=15

>>>>  A* iteration 618  <<<<

> Fringe size: 2546
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down d)', '(unstack e b)', '(stack e b)', '(pick-up d)', '(stack b c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 619  <<<<

> Fringe size: 2561
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down d)', '(unstack e b)', '(stack e b)', '(pick-up d)', '(stack b c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=16

>>>>  A* iteration 620  <<<<

> Fringe size: 2562
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down d)', '(unstack e b)', '(stack e b)', '(pick-up d)', '(stack b d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 621  <<<<

> Fringe size: 2577
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down d)', '(unstack e b)', '(stack e b)', '(pick-up d)', '(stack b d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=16

>>>>  A* iteration 622  <<<<

> Fringe size: 2578
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down d)', '(unstack e b)', '(stack e b)', '(pick-up d)', '(stack b e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 623  <<<<

> Fringe size: 2579
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down d)', '(unstack e b)', '(stack e b)', '(pick-up d)', '(stack c b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 624  <<<<

> Fringe size: 2593
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down d)', '(unstack e b)', '(stack e b)', '(pick-up d)', '(stack c b)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=15

>>>>  A* iteration 625  <<<<

> Fringe size: 2594
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down d)', '(unstack e b)', '(stack e b)', '(pick-up d)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom on(e, c)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom holding(d)>, <Atom on(c, d)>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom on(e, d)>]
> Possible groundings:
['(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom handempty()>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(c, b)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom on(c, b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']

>>>>  A* iteration 626  <<<<

> Fringe size: 2608
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down d)', '(unstack e b)', '(stack e b)', '(pick-up d)', '(stack c c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=15

>>>>  A* iteration 627  <<<<

> Fringe size: 2609
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down d)', '(unstack e b)', '(stack e b)', '(pick-up d)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 628  <<<<

> Fringe size: 2623
> First 20 nodes: (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down d)', '(unstack e b)', '(stack e b)', '(pick-up d)', '(stack c d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=15

>>>>  A* iteration 629  <<<<

> Fringe size: 2624
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down d)', '(unstack e b)', '(stack e b)', '(pick-up d)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 630  <<<<

> Fringe size: 2638
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down d)', '(unstack e b)', '(stack e b)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=15

>>>>  A* iteration 631  <<<<

> Fringe size: 2639
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down d)', '(unstack e b)', '(stack e b)', '(pick-up e)', '(stack b c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 632  <<<<

> Fringe size: 2654
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down d)', '(unstack e b)', '(stack e b)', '(pick-up e)', '(stack b c)', '(pick-up d)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=16

>>>>  A* iteration 633  <<<<

> Fringe size: 2655
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down d)', '(unstack e b)', '(stack e b)', '(pick-up e)', '(stack b d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 634  <<<<

> Fringe size: 2656
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down d)', '(unstack e b)', '(stack e b)', '(pick-up e)', '(stack b e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 635  <<<<

> Fringe size: 2671
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down d)', '(unstack e b)', '(stack e b)', '(pick-up e)', '(stack b e)', '(pick-up d)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=16

>>>>  A* iteration 636  <<<<

> Fringe size: 2672
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down d)', '(unstack e b)', '(stack e b)', '(pick-up e)', '(stack c b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 637  <<<<

> Fringe size: 2686
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down d)', '(unstack e b)', '(stack e b)', '(pick-up e)', '(stack c b)', '(pick-up d)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=15

>>>>  A* iteration 638  <<<<

> Fringe size: 2687
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down d)', '(unstack e b)', '(stack e b)', '(pick-up e)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 639  <<<<

> Fringe size: 2701
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down d)', '(unstack e b)', '(stack e b)', '(pick-up e)', '(stack c c)', '(pick-up d)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=15

>>>>  A* iteration 640  <<<<

> Fringe size: 2702
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down d)', '(unstack e b)', '(stack e b)', '(pick-up e)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 641  <<<<

> Fringe size: 2703
> First 20 nodes: (D:11,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down d)', '(unstack e b)', '(stack e b)', '(pick-up e)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 642  <<<<

> Fringe size: 2717
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down d)', '(unstack e b)', '(stack e b)', '(pick-up e)', '(stack c e)', '(pick-up d)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=15

>>>>  A* iteration 643  <<<<

> Fringe size: 2718
> First 20 nodes: (D:9,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down d)', '(unstack e b)', '(stack e c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom handempty()>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(c, b)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom on(c, b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']

>>>>  A* iteration 644  <<<<

> Fringe size: 2732
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down d)', '(unstack e b)', '(stack e c)', '(pick-up d)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=15

>>>>  A* iteration 645  <<<<

> Fringe size: 2733
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down d)', '(unstack e b)', '(stack e c)', '(pick-up d)', '(stack b c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 646  <<<<

> Fringe size: 2748
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down d)', '(unstack e b)', '(stack e c)', '(pick-up d)', '(stack b c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=16

>>>>  A* iteration 647  <<<<

> Fringe size: 2749
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down d)', '(unstack e b)', '(stack e c)', '(pick-up d)', '(stack b d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 648  <<<<

> Fringe size: 2764
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down d)', '(unstack e b)', '(stack e c)', '(pick-up d)', '(stack b d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=16

>>>>  A* iteration 649  <<<<

> Fringe size: 2765
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down d)', '(unstack e b)', '(stack e c)', '(pick-up d)', '(stack b e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 650  <<<<

> Fringe size: 2766
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down d)', '(unstack e b)', '(stack e c)', '(pick-up d)', '(stack c b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 651  <<<<

> Fringe size: 2780
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down d)', '(unstack e b)', '(stack e c)', '(pick-up d)', '(stack c b)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=15

>>>>  A* iteration 652  <<<<

> Fringe size: 2781
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down d)', '(unstack e b)', '(stack e c)', '(pick-up d)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 653  <<<<

> Fringe size: 2795
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down d)', '(unstack e b)', '(stack e c)', '(pick-up d)', '(stack c c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=15

>>>>  A* iteration 654  <<<<

> Fringe size: 2796
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down d)', '(unstack e b)', '(stack e c)', '(pick-up d)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 655  <<<<

> Fringe size: 2810
> First 20 nodes: (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down d)', '(unstack e b)', '(stack e c)', '(pick-up d)', '(stack c d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=15

>>>>  A* iteration 656  <<<<

> Fringe size: 2811
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down d)', '(unstack e b)', '(stack e c)', '(pick-up d)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 657  <<<<

> Fringe size: 2825
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down d)', '(unstack e b)', '(stack e c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=15

>>>>  A* iteration 658  <<<<

> Fringe size: 2826
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down d)', '(unstack e b)', '(stack e c)', '(pick-up e)', '(stack b c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 659  <<<<

> Fringe size: 2841
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down d)', '(unstack e b)', '(stack e c)', '(pick-up e)', '(stack b c)', '(pick-up d)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=16

>>>>  A* iteration 660  <<<<

> Fringe size: 2842
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down d)', '(unstack e b)', '(stack e c)', '(pick-up e)', '(stack b d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom on(e, c)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom on(e, c)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom on(e, c)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom on(e, c)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom on(e, c)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom on(e, c)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom on(e, c)>, <Atom ontable(a)>, <Atom on(c, b)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom on(e, c)>, <Atom ontable(a)>, <Atom on(c, b)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom on(e, c)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom on(e, c)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom on(e, c)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom on(e, c)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom on(e, c)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom on(e, c)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom on(e, c)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom on(e, c)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom on(e, c)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']

>>>>  A* iteration 661  <<<<

> Fringe size: 2843
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down d)', '(unstack e b)', '(stack e c)', '(pick-up e)', '(stack b e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 662  <<<<

> Fringe size: 2858
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down d)', '(unstack e b)', '(stack e c)', '(pick-up e)', '(stack b e)', '(pick-up d)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=16

>>>>  A* iteration 663  <<<<

> Fringe size: 2859
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down d)', '(unstack e b)', '(stack e c)', '(pick-up e)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 664  <<<<

> Fringe size: 2860
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down d)', '(unstack e b)', '(stack e c)', '(pick-up e)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 665  <<<<

> Fringe size: 2874
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down d)', '(unstack e b)', '(stack e c)', '(pick-up e)', '(stack c e)', '(pick-up d)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=15

>>>>  A* iteration 666  <<<<

> Fringe size: 2875
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down d)', '(unstack e b)', '(stack e c)', '(pick-up e)', '(stack c b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 667  <<<<

> Fringe size: 2889
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down d)', '(unstack e b)', '(stack e c)', '(pick-up e)', '(stack c b)', '(pick-up d)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=15

>>>>  A* iteration 668  <<<<

> Fringe size: 2890
> First 20 nodes: (D:11,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down d)', '(unstack e b)', '(stack e c)', '(pick-up e)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 669  <<<<

> Fringe size: 2904
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down d)', '(unstack e b)', '(stack e c)', '(pick-up e)', '(stack c c)', '(pick-up d)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=15

>>>>  A* iteration 670  <<<<

> Fringe size: 2905
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down d)', '(unstack e b)', '(stack e d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 671  <<<<

> Fringe size: 2919
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down d)', '(unstack e b)', '(stack e d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=15

>>>>  A* iteration 672  <<<<

> Fringe size: 2920
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down d)', '(unstack e b)', '(stack e d)', '(pick-up e)', '(stack b c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 673  <<<<

> Fringe size: 2921
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down d)', '(unstack e b)', '(stack e d)', '(pick-up e)', '(stack b d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 674  <<<<

> Fringe size: 2922
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down d)', '(unstack e b)', '(stack e d)', '(pick-up e)', '(stack b e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 675  <<<<

> Fringe size: 2923
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down d)', '(unstack e b)', '(stack e d)', '(pick-up e)', '(stack c b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 676  <<<<

> Fringe size: 2924
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down d)', '(unstack e b)', '(stack e d)', '(pick-up e)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 677  <<<<

> Fringe size: 2925
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down d)', '(unstack e b)', '(stack e d)', '(pick-up e)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 678  <<<<

> Fringe size: 2926
> First 20 nodes: (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down d)', '(unstack e b)', '(stack e d)', '(pick-up e)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 679  <<<<

> Fringe size: 2927
> First 20 nodes: (D:9,C:2), (D:9,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down d)', '(unstack e b)', '(stack e e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom on(e, c)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom on(e, c)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom on(e, c)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom on(e, c)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom on(e, c)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom on(e, c)>, <Atom ontable(a)>, <Atom on(c, b)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom on(e, c)>, <Atom ontable(a)>, <Atom on(c, b)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom on(e, c)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom on(e, c)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom holding(d)>, <Atom on(c, d)>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom on(e, d)>]
> Possible groundings:
['(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom on(e, d)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom on(e, d)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom on(e, d)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom on(c, b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom on(e, d)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom on(e, d)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom on(e, d)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom on(e, d)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']

>>>>  A* iteration 680  <<<<

> Fringe size: 2941
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down d)', '(unstack e b)', '(stack e e)', '(pick-up d)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=15

>>>>  A* iteration 681  <<<<

> Fringe size: 2942
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down d)', '(unstack e b)', '(stack e e)', '(pick-up d)', '(stack b c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 682  <<<<

> Fringe size: 2957
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down d)', '(unstack e b)', '(stack e e)', '(pick-up d)', '(stack b c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=16

>>>>  A* iteration 683  <<<<

> Fringe size: 2958
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down d)', '(unstack e b)', '(stack e e)', '(pick-up d)', '(stack b d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 684  <<<<

> Fringe size: 2973
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down d)', '(unstack e b)', '(stack e e)', '(pick-up d)', '(stack b d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=16

>>>>  A* iteration 685  <<<<

> Fringe size: 2974
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down d)', '(unstack e b)', '(stack e e)', '(pick-up d)', '(stack b e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 686  <<<<

> Fringe size: 2975
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down d)', '(unstack e b)', '(stack e e)', '(pick-up d)', '(stack c b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 687  <<<<

> Fringe size: 2989
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down d)', '(unstack e b)', '(stack e e)', '(pick-up d)', '(stack c b)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=15

>>>>  A* iteration 688  <<<<

> Fringe size: 2990
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down d)', '(unstack e b)', '(stack e e)', '(pick-up d)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 689  <<<<

> Fringe size: 3004
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down d)', '(unstack e b)', '(stack e e)', '(pick-up d)', '(stack c c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=15

>>>>  A* iteration 690  <<<<

> Fringe size: 3005
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:9,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down d)', '(unstack e b)', '(stack e e)', '(pick-up d)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 691  <<<<

> Fringe size: 3019
> First 20 nodes: (D:10,C:2), (D:9,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down d)', '(unstack e b)', '(stack e e)', '(pick-up d)', '(stack c d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=15

>>>>  A* iteration 692  <<<<

> Fringe size: 3020
> First 20 nodes: (D:9,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down d)', '(unstack e b)', '(stack e e)', '(pick-up d)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 693  <<<<

> Fringe size: 3034
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down d)', '(unstack e b)', '(stack e e)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=15

>>>>  A* iteration 694  <<<<

> Fringe size: 3035
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down d)', '(unstack e b)', '(stack e e)', '(pick-up e)', '(stack b c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 695  <<<<

> Fringe size: 3050
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down d)', '(unstack e b)', '(stack e e)', '(pick-up e)', '(stack b c)', '(pick-up d)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=16

>>>>  A* iteration 696  <<<<

> Fringe size: 3051
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down d)', '(unstack e b)', '(stack e e)', '(pick-up e)', '(stack b d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom on(c, b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom on(c, b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']

>>>>  A* iteration 697  <<<<

> Fringe size: 3052
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down d)', '(unstack e b)', '(stack e e)', '(pick-up e)', '(stack b e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 698  <<<<

> Fringe size: 3067
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down d)', '(unstack e b)', '(stack e e)', '(pick-up e)', '(stack b e)', '(pick-up d)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=16

>>>>  A* iteration 699  <<<<

> Fringe size: 3068
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down d)', '(unstack e b)', '(stack e e)', '(pick-up e)', '(stack c b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 700  <<<<

> Fringe size: 3082
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down d)', '(unstack e b)', '(stack e e)', '(pick-up e)', '(stack c b)', '(pick-up d)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=15

>>>>  A* iteration 701  <<<<

> Fringe size: 3083
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down d)', '(unstack e b)', '(stack e e)', '(pick-up e)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 702  <<<<

> Fringe size: 3097
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down d)', '(unstack e b)', '(stack e e)', '(pick-up e)', '(stack c c)', '(pick-up d)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=15

>>>>  A* iteration 703  <<<<

> Fringe size: 3098
> First 20 nodes: (D:10,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down d)', '(unstack e b)', '(stack e e)', '(pick-up e)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 704  <<<<

> Fringe size: 3099
> First 20 nodes: (D:11,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down d)', '(unstack e b)', '(stack e e)', '(pick-up e)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 705  <<<<

> Fringe size: 3113
> First 20 nodes: (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down d)', '(unstack e b)', '(stack e e)', '(pick-up e)', '(stack c e)', '(pick-up d)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=15

>>>>  A* iteration 706  <<<<

> Fringe size: 3115
> First 20 nodes: (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=6
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down e)']
> Next lifted action: unstack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 707  <<<<

> Fringe size: 3120
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=7
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down e)', '(unstack e b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 708  <<<<

> Fringe size: 3121
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down e)', '(unstack e b)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 709  <<<<

> Fringe size: 3122
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down e)', '(unstack e b)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 710  <<<<

> Fringe size: 3123
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down e)', '(unstack e b)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 711  <<<<

> Fringe size: 3124
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down e)', '(unstack e b)', '(stack e c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 712  <<<<

> Fringe size: 3129
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down e)', '(unstack e b)', '(stack e c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 713  <<<<

> Fringe size: 3130
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down e)', '(unstack e b)', '(stack e c)', '(pick-up e)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 714  <<<<

> Fringe size: 3131
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down e)', '(unstack e b)', '(stack e c)', '(pick-up e)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 715  <<<<

> Fringe size: 3132
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down e)', '(unstack e b)', '(stack e c)', '(pick-up e)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 716  <<<<

> Fringe size: 3133
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down e)', '(unstack e b)', '(stack e d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 717  <<<<

> Fringe size: 3138
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down e)', '(unstack e b)', '(stack e d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom on(c, b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom on(c, b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(unstack c d)', '(unstack c e)', '(unstack e b)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']

>>>>  A* iteration 718  <<<<

> Fringe size: 3139
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down e)', '(unstack e b)', '(stack e d)', '(pick-up e)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 719  <<<<

> Fringe size: 3140
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down e)', '(unstack e b)', '(stack e d)', '(pick-up e)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 720  <<<<

> Fringe size: 3141
> First 20 nodes: (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down e)', '(unstack e b)', '(stack e d)', '(pick-up e)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 721  <<<<

> Fringe size: 3142
> First 20 nodes: (D:9,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down e)', '(unstack e b)', '(stack e e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 722  <<<<

> Fringe size: 3147
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down e)', '(unstack e b)', '(stack e e)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 723  <<<<

> Fringe size: 3148
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down e)', '(unstack e b)', '(stack e e)', '(pick-up e)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 724  <<<<

> Fringe size: 3149
> First 20 nodes: (D:10,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down e)', '(unstack e b)', '(stack e e)', '(pick-up e)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 725  <<<<

> Fringe size: 3150
> First 20 nodes: (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down e)', '(unstack e b)', '(stack e e)', '(pick-up e)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 726  <<<<

> Fringe size: 3152
> First 20 nodes: (D:7,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=6
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down c)']
> Next lifted action: unstack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 727  <<<<

> Fringe size: 3166
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=7
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack e b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=15

>>>>  A* iteration 728  <<<<

> Fringe size: 3168
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack e b)', '(stack b c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 729  <<<<

> Fringe size: 3170
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack e b)', '(stack b d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 730  <<<<

> Fringe size: 3185
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack e b)', '(stack b d)', '(pick-up c)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=16

>>>>  A* iteration 731  <<<<

> Fringe size: 3187
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack e b)', '(stack b d)', '(pick-up c)', '(stack d b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 732  <<<<

> Fringe size: 3189
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack e b)', '(stack b d)', '(pick-up c)', '(stack d c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 733  <<<<

> Fringe size: 3191
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack e b)', '(stack b d)', '(pick-up c)', '(stack d d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 734  <<<<

> Fringe size: 3193
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack e b)', '(stack b d)', '(pick-up c)', '(stack d e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 735  <<<<

> Fringe size: 3195
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack e b)', '(stack b d)', '(pick-up c)', '(stack e b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 736  <<<<

> Fringe size: 3210
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack e b)', '(stack b d)', '(pick-up c)', '(stack e b)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=16
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom ontable(c)>]
> Possible groundings:
['(unstack c d)', '(unstack c e)', '(unstack e b)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom ontable(c)>]
> Possible groundings:
['(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(c)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom on(d, b)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(d, c)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom on(d, d)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom on(d, e)>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(c)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom on(e, c)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(c)>]

>>>>  A* iteration 737  <<<<

> Fringe size: 3212
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack e b)', '(stack b d)', '(pick-up c)', '(stack e c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 738  <<<<

> Fringe size: 3227
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack e b)', '(stack b d)', '(pick-up c)', '(stack e c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=16

>>>>  A* iteration 739  <<<<

> Fringe size: 3229
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack e b)', '(stack b d)', '(pick-up c)', '(stack e d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 740  <<<<

> Fringe size: 3244
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack e b)', '(stack b d)', '(pick-up c)', '(stack e d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=16

>>>>  A* iteration 741  <<<<

> Fringe size: 3246
> First 20 nodes: (D:11,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack e b)', '(stack b d)', '(pick-up c)', '(stack e e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 742  <<<<

> Fringe size: 3261
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack e b)', '(stack b d)', '(pick-up c)', '(stack e e)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=16

>>>>  A* iteration 743  <<<<

> Fringe size: 3263
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack e b)', '(stack b e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 744  <<<<

> Fringe size: 3278
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack e b)', '(stack b e)', '(pick-up c)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=16

>>>>  A* iteration 745  <<<<

> Fringe size: 3280
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack e b)', '(stack b e)', '(pick-up c)', '(stack d b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 746  <<<<

> Fringe size: 3282
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack e b)', '(stack b e)', '(pick-up c)', '(stack d c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 747  <<<<

> Fringe size: 3284
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack e b)', '(stack b e)', '(pick-up c)', '(stack d d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 748  <<<<

> Fringe size: 3286
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack e b)', '(stack b e)', '(pick-up c)', '(stack d e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 749  <<<<

> Fringe size: 3288
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack e b)', '(stack b e)', '(pick-up c)', '(stack e b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 750  <<<<

> Fringe size: 3303
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack e b)', '(stack b e)', '(pick-up c)', '(stack e b)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=16

>>>>  A* iteration 751  <<<<

> Fringe size: 3305
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack e b)', '(stack b e)', '(pick-up c)', '(stack e c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 752  <<<<

> Fringe size: 3320
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack e b)', '(stack b e)', '(pick-up c)', '(stack e c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=16

>>>>  A* iteration 753  <<<<

> Fringe size: 3322
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack e b)', '(stack b e)', '(pick-up c)', '(stack e d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom on(e, c)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(c)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom on(e, d)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom on(e, d)>, <Atom ontable(c)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(c)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(c)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom on(d, b)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(d, c)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom on(d, d)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom on(d, e)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(c)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom on(e, c)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom on(e, c)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(c)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom on(e, d)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']

>>>>  A* iteration 754  <<<<

> Fringe size: 3337
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack e b)', '(stack b e)', '(pick-up c)', '(stack e d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=16

>>>>  A* iteration 755  <<<<

> Fringe size: 3339
> First 20 nodes: (D:11,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack e b)', '(stack b e)', '(pick-up c)', '(stack e e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 756  <<<<

> Fringe size: 3354
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack e b)', '(stack b e)', '(pick-up c)', '(stack e e)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=16

>>>>  A* iteration 757  <<<<

> Fringe size: 3356
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack e b)', '(stack d b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 758  <<<<

> Fringe size: 3370
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack e b)', '(stack d b)', '(pick-up c)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=15

>>>>  A* iteration 759  <<<<

> Fringe size: 3372
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack e b)', '(stack d b)', '(pick-up c)', '(stack b c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 760  <<<<

> Fringe size: 3374
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack e b)', '(stack d b)', '(pick-up c)', '(stack b d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 761  <<<<

> Fringe size: 3376
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack e b)', '(stack d b)', '(pick-up c)', '(stack b e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 762  <<<<

> Fringe size: 3378
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack e b)', '(stack d b)', '(pick-up c)', '(stack e b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 763  <<<<

> Fringe size: 3392
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack e b)', '(stack d b)', '(pick-up c)', '(stack e b)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=15

>>>>  A* iteration 764  <<<<

> Fringe size: 3394
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack e b)', '(stack d b)', '(pick-up c)', '(stack e c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 765  <<<<

> Fringe size: 3408
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack e b)', '(stack d b)', '(pick-up c)', '(stack e c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=15

>>>>  A* iteration 766  <<<<

> Fringe size: 3410
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack e b)', '(stack d b)', '(pick-up c)', '(stack e d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 767  <<<<

> Fringe size: 3424
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack e b)', '(stack d b)', '(pick-up c)', '(stack e d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=15

>>>>  A* iteration 768  <<<<

> Fringe size: 3426
> First 20 nodes: (D:11,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack e b)', '(stack d b)', '(pick-up c)', '(stack e e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 769  <<<<

> Fringe size: 3440
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack e b)', '(stack d b)', '(pick-up c)', '(stack e e)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=15
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom on(e, d)>, <Atom ontable(c)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(c)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom on(d, b)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom on(d, b)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(c)>]
> Possible groundings:
['(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom on(d, b)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom on(d, b)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom on(d, b)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom on(d, b)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom on(d, b)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(c)>]
> Possible groundings:
['(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom on(e, c)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom on(d, b)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom on(e, c)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom on(d, b)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(c)>]
> Possible groundings:
['(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom on(d, b)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom on(e, d)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom on(d, b)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom on(e, d)>, <Atom ontable(c)>]
> Possible groundings:
['(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom on(d, b)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom on(d, b)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(c)>]
> Possible groundings:
['(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']

>>>>  A* iteration 770  <<<<

> Fringe size: 3442
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack e b)', '(stack d c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 771  <<<<

> Fringe size: 3444
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack e b)', '(stack d d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 772  <<<<

> Fringe size: 3458
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack e b)', '(stack d d)', '(pick-up c)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=15

>>>>  A* iteration 773  <<<<

> Fringe size: 3460
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack e b)', '(stack d d)', '(pick-up c)', '(stack b c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 774  <<<<

> Fringe size: 3462
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack e b)', '(stack d d)', '(pick-up c)', '(stack b d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 775  <<<<

> Fringe size: 3464
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack e b)', '(stack d d)', '(pick-up c)', '(stack b e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 776  <<<<

> Fringe size: 3466
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack e b)', '(stack d d)', '(pick-up c)', '(stack e b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 777  <<<<

> Fringe size: 3480
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack e b)', '(stack d d)', '(pick-up c)', '(stack e b)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=15

>>>>  A* iteration 778  <<<<

> Fringe size: 3482
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack e b)', '(stack d d)', '(pick-up c)', '(stack e c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 779  <<<<

> Fringe size: 3496
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack e b)', '(stack d d)', '(pick-up c)', '(stack e c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=15

>>>>  A* iteration 780  <<<<

> Fringe size: 3498
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack e b)', '(stack d d)', '(pick-up c)', '(stack e d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 781  <<<<

> Fringe size: 3512
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack e b)', '(stack d d)', '(pick-up c)', '(stack e d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=15

>>>>  A* iteration 782  <<<<

> Fringe size: 3514
> First 20 nodes: (D:11,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack e b)', '(stack d d)', '(pick-up c)', '(stack e e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 783  <<<<

> Fringe size: 3528
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack e b)', '(stack d d)', '(pick-up c)', '(stack e e)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=15

>>>>  A* iteration 784  <<<<

> Fringe size: 3530
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack e b)', '(stack d e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 785  <<<<

> Fringe size: 3544
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack e b)', '(stack d e)', '(pick-up c)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=15

>>>>  A* iteration 786  <<<<

> Fringe size: 3546
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack e b)', '(stack d e)', '(pick-up c)', '(stack b c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(d, c)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom on(d, d)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom on(d, d)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(c)>]
> Possible groundings:
['(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom on(d, d)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom on(d, d)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom on(d, d)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom on(d, d)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom on(d, d)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(c)>]
> Possible groundings:
['(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom on(e, c)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom on(d, d)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom on(e, c)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom on(d, d)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(c)>]
> Possible groundings:
['(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom on(d, d)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom on(e, d)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom on(d, d)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom on(e, d)>, <Atom ontable(c)>]
> Possible groundings:
['(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom on(d, d)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom on(d, d)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(c)>]
> Possible groundings:
['(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom on(d, e)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom on(d, e)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(c)>]
> Possible groundings:
['(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom on(d, e)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']

>>>>  A* iteration 787  <<<<

> Fringe size: 3548
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack e b)', '(stack d e)', '(pick-up c)', '(stack b d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 788  <<<<

> Fringe size: 3550
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack e b)', '(stack d e)', '(pick-up c)', '(stack b e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 789  <<<<

> Fringe size: 3552
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack e b)', '(stack d e)', '(pick-up c)', '(stack e b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 790  <<<<

> Fringe size: 3566
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack e b)', '(stack d e)', '(pick-up c)', '(stack e b)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=15

>>>>  A* iteration 791  <<<<

> Fringe size: 3568
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack e b)', '(stack d e)', '(pick-up c)', '(stack e c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 792  <<<<

> Fringe size: 3582
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack e b)', '(stack d e)', '(pick-up c)', '(stack e c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=15

>>>>  A* iteration 793  <<<<

> Fringe size: 3584
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack e b)', '(stack d e)', '(pick-up c)', '(stack e d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 794  <<<<

> Fringe size: 3598
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack e b)', '(stack d e)', '(pick-up c)', '(stack e d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=15

>>>>  A* iteration 795  <<<<

> Fringe size: 3600
> First 20 nodes: (D:11,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack e b)', '(stack d e)', '(pick-up c)', '(stack e e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 796  <<<<

> Fringe size: 3614
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack e b)', '(stack d e)', '(pick-up c)', '(stack e e)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=15

>>>>  A* iteration 797  <<<<

> Fringe size: 3616
> First 20 nodes: (D:9,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack e b)', '(stack e b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 798  <<<<

> Fringe size: 3630
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack e b)', '(stack e b)', '(pick-up c)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=15

>>>>  A* iteration 799  <<<<

> Fringe size: 3632
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack e b)', '(stack e b)', '(pick-up c)', '(stack b c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 800  <<<<

> Fringe size: 3647
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack e b)', '(stack e b)', '(pick-up c)', '(stack b c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=16

>>>>  A* iteration 801  <<<<

> Fringe size: 3649
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack e b)', '(stack e b)', '(pick-up c)', '(stack b d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 802  <<<<

> Fringe size: 3664
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack e b)', '(stack e b)', '(pick-up c)', '(stack b d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=16
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom on(d, e)>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom on(d, e)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom on(d, e)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom on(d, e)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(c)>]
> Possible groundings:
['(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom on(e, c)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom on(d, e)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom on(e, c)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom on(d, e)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(c)>]
> Possible groundings:
['(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom on(d, e)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom on(e, d)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom on(d, e)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom on(e, d)>, <Atom ontable(c)>]
> Possible groundings:
['(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom on(d, e)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom on(d, e)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(c)>]
> Possible groundings:
['(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(c)>]
> Possible groundings:
['(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(c)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(c)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(c)>]

>>>>  A* iteration 803  <<<<

> Fringe size: 3666
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack e b)', '(stack e b)', '(pick-up c)', '(stack b e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 804  <<<<

> Fringe size: 3668
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack e b)', '(stack e b)', '(pick-up c)', '(stack d b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 805  <<<<

> Fringe size: 3682
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack e b)', '(stack e b)', '(pick-up c)', '(stack d b)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=15

>>>>  A* iteration 806  <<<<

> Fringe size: 3684
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack e b)', '(stack e b)', '(pick-up c)', '(stack d c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 807  <<<<

> Fringe size: 3698
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack e b)', '(stack e b)', '(pick-up c)', '(stack d c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=15

>>>>  A* iteration 808  <<<<

> Fringe size: 3700
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack e b)', '(stack e b)', '(pick-up c)', '(stack d d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 809  <<<<

> Fringe size: 3714
> First 20 nodes: (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack e b)', '(stack e b)', '(pick-up c)', '(stack d d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=15

>>>>  A* iteration 810  <<<<

> Fringe size: 3716
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack e b)', '(stack e b)', '(pick-up c)', '(stack d e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 811  <<<<

> Fringe size: 3730
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack e b)', '(stack e b)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=15

>>>>  A* iteration 812  <<<<

> Fringe size: 3732
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack e b)', '(stack e b)', '(pick-up e)', '(stack b c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 813  <<<<

> Fringe size: 3734
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack e b)', '(stack e b)', '(pick-up e)', '(stack b d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 814  <<<<

> Fringe size: 3749
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack e b)', '(stack e b)', '(pick-up e)', '(stack b d)', '(pick-up c)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=16

>>>>  A* iteration 815  <<<<

> Fringe size: 3751
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack e b)', '(stack e b)', '(pick-up e)', '(stack b e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 816  <<<<

> Fringe size: 3766
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack e b)', '(stack e b)', '(pick-up e)', '(stack b e)', '(pick-up c)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=16

>>>>  A* iteration 817  <<<<

> Fringe size: 3768
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack e b)', '(stack e b)', '(pick-up e)', '(stack d b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 818  <<<<

> Fringe size: 3782
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack e b)', '(stack e b)', '(pick-up e)', '(stack d b)', '(pick-up c)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=15

>>>>  A* iteration 819  <<<<

> Fringe size: 3784
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack e b)', '(stack e b)', '(pick-up e)', '(stack d c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 820  <<<<

> Fringe size: 3786
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack e b)', '(stack e b)', '(pick-up e)', '(stack d d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom on(d, b)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom on(d, b)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(c)>]
> Possible groundings:
['(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(d, c)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(d, c)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(c)>]
> Possible groundings:
['(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom on(d, d)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom on(d, d)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(c)>]
> Possible groundings:
['(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom on(d, e)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(c)>]
> Possible groundings:
['(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(c)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(c)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom on(d, b)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom on(d, b)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(c)>]
> Possible groundings:
['(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(d, c)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom on(d, d)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']

>>>>  A* iteration 821  <<<<

> Fringe size: 3800
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack e b)', '(stack e b)', '(pick-up e)', '(stack d d)', '(pick-up c)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=15

>>>>  A* iteration 822  <<<<

> Fringe size: 3802
> First 20 nodes: (D:11,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack e b)', '(stack e b)', '(pick-up e)', '(stack d e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 823  <<<<

> Fringe size: 3816
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack e b)', '(stack e b)', '(pick-up e)', '(stack d e)', '(pick-up c)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=15

>>>>  A* iteration 824  <<<<

> Fringe size: 3818
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack e b)', '(stack e c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 825  <<<<

> Fringe size: 3832
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack e b)', '(stack e c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=15

>>>>  A* iteration 826  <<<<

> Fringe size: 3834
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack e b)', '(stack e c)', '(pick-up e)', '(stack b c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 827  <<<<

> Fringe size: 3836
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack e b)', '(stack e c)', '(pick-up e)', '(stack b d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 828  <<<<

> Fringe size: 3838
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack e b)', '(stack e c)', '(pick-up e)', '(stack b e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 829  <<<<

> Fringe size: 3840
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack e b)', '(stack e c)', '(pick-up e)', '(stack d b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 830  <<<<

> Fringe size: 3842
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack e b)', '(stack e c)', '(pick-up e)', '(stack d c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 831  <<<<

> Fringe size: 3844
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack e b)', '(stack e c)', '(pick-up e)', '(stack d d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 832  <<<<

> Fringe size: 3846
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack e b)', '(stack e c)', '(pick-up e)', '(stack d e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 833  <<<<

> Fringe size: 3848
> First 20 nodes: (D:9,C:2), (D:9,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack e b)', '(stack e d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 834  <<<<

> Fringe size: 3862
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack e b)', '(stack e d)', '(pick-up c)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=15

>>>>  A* iteration 835  <<<<

> Fringe size: 3864
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack e b)', '(stack e d)', '(pick-up c)', '(stack b c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 836  <<<<

> Fringe size: 3879
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack e b)', '(stack e d)', '(pick-up c)', '(stack b c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=16

>>>>  A* iteration 837  <<<<

> Fringe size: 3881
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack e b)', '(stack e d)', '(pick-up c)', '(stack b d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom on(d, d)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(c)>]
> Possible groundings:
['(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom on(d, e)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom on(d, e)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(c)>]
> Possible groundings:
['(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom on(e, c)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom on(e, c)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(c)>]
> Possible groundings:
['(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom on(e, c)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom on(e, c)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom on(e, c)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom on(e, c)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom on(d, b)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom on(e, c)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(d, c)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom on(e, c)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom on(d, d)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom on(e, c)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom on(d, e)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom on(e, d)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom on(e, d)>, <Atom ontable(c)>]
> Possible groundings:
['(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom on(e, d)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom on(e, d)>, <Atom ontable(c)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom on(e, d)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']

>>>>  A* iteration 838  <<<<

> Fringe size: 3896
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack e b)', '(stack e d)', '(pick-up c)', '(stack b d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=16

>>>>  A* iteration 839  <<<<

> Fringe size: 3898
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack e b)', '(stack e d)', '(pick-up c)', '(stack b e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 840  <<<<

> Fringe size: 3900
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack e b)', '(stack e d)', '(pick-up c)', '(stack d b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 841  <<<<

> Fringe size: 3914
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack e b)', '(stack e d)', '(pick-up c)', '(stack d b)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=15

>>>>  A* iteration 842  <<<<

> Fringe size: 3916
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack e b)', '(stack e d)', '(pick-up c)', '(stack d c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 843  <<<<

> Fringe size: 3930
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack e b)', '(stack e d)', '(pick-up c)', '(stack d c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=15

>>>>  A* iteration 844  <<<<

> Fringe size: 3932
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack e b)', '(stack e d)', '(pick-up c)', '(stack d d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 845  <<<<

> Fringe size: 3946
> First 20 nodes: (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack e b)', '(stack e d)', '(pick-up c)', '(stack d d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=15

>>>>  A* iteration 846  <<<<

> Fringe size: 3948
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack e b)', '(stack e d)', '(pick-up c)', '(stack d e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 847  <<<<

> Fringe size: 3962
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack e b)', '(stack e d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=15

>>>>  A* iteration 848  <<<<

> Fringe size: 3964
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack e b)', '(stack e d)', '(pick-up e)', '(stack b c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 849  <<<<

> Fringe size: 3966
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack e b)', '(stack e d)', '(pick-up e)', '(stack b d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 850  <<<<

> Fringe size: 3981
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack e b)', '(stack e d)', '(pick-up e)', '(stack b d)', '(pick-up c)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=16

>>>>  A* iteration 851  <<<<

> Fringe size: 3983
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack e b)', '(stack e d)', '(pick-up e)', '(stack b e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 852  <<<<

> Fringe size: 3998
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack e b)', '(stack e d)', '(pick-up e)', '(stack b e)', '(pick-up c)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=16

>>>>  A* iteration 853  <<<<

> Fringe size: 4000
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack e b)', '(stack e d)', '(pick-up e)', '(stack d b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom on(e, d)>, <Atom ontable(c)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom on(e, d)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom on(d, b)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom on(e, d)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom on(d, b)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom on(e, d)>, <Atom ontable(c)>]
> Possible groundings:
['(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(d, c)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom on(e, d)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(d, c)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom on(e, d)>, <Atom ontable(c)>]
> Possible groundings:
['(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom on(d, d)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom on(e, d)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom on(d, d)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom on(e, d)>, <Atom ontable(c)>]
> Possible groundings:
['(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom on(d, e)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom on(e, d)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom on(e, d)>, <Atom ontable(c)>]
> Possible groundings:
['(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom on(e, d)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom on(e, d)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom on(e, d)>, <Atom ontable(c)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom on(e, d)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom on(e, d)>, <Atom ontable(c)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom on(d, b)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom on(e, d)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']

>>>>  A* iteration 854  <<<<

> Fringe size: 4014
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack e b)', '(stack e d)', '(pick-up e)', '(stack d b)', '(pick-up c)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=15

>>>>  A* iteration 855  <<<<

> Fringe size: 4016
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack e b)', '(stack e d)', '(pick-up e)', '(stack d c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 856  <<<<

> Fringe size: 4018
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack e b)', '(stack e d)', '(pick-up e)', '(stack d d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 857  <<<<

> Fringe size: 4032
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack e b)', '(stack e d)', '(pick-up e)', '(stack d d)', '(pick-up c)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=15

>>>>  A* iteration 858  <<<<

> Fringe size: 4034
> First 20 nodes: (D:11,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack e b)', '(stack e d)', '(pick-up e)', '(stack d e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 859  <<<<

> Fringe size: 4048
> First 20 nodes: (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack e b)', '(stack e d)', '(pick-up e)', '(stack d e)', '(pick-up c)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=15

>>>>  A* iteration 860  <<<<

> Fringe size: 4050
> First 20 nodes: (D:9,C:2), (D:9,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack e b)', '(stack e e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 861  <<<<

> Fringe size: 4064
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack e b)', '(stack e e)', '(pick-up c)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=15

>>>>  A* iteration 862  <<<<

> Fringe size: 4066
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack e b)', '(stack e e)', '(pick-up c)', '(stack b c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 863  <<<<

> Fringe size: 4081
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack e b)', '(stack e e)', '(pick-up c)', '(stack b c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=16

>>>>  A* iteration 864  <<<<

> Fringe size: 4083
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack e b)', '(stack e e)', '(pick-up c)', '(stack b d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 865  <<<<

> Fringe size: 4098
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack e b)', '(stack e e)', '(pick-up c)', '(stack b d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=16

>>>>  A* iteration 866  <<<<

> Fringe size: 4100
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack e b)', '(stack e e)', '(pick-up c)', '(stack b e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 867  <<<<

> Fringe size: 4102
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack e b)', '(stack e e)', '(pick-up c)', '(stack d b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 868  <<<<

> Fringe size: 4116
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack e b)', '(stack e e)', '(pick-up c)', '(stack d b)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=15

>>>>  A* iteration 869  <<<<

> Fringe size: 4118
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack e b)', '(stack e e)', '(pick-up c)', '(stack d d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom on(d, b)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom on(e, d)>, <Atom ontable(c)>]
> Possible groundings:
['(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(d, c)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom on(e, d)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom on(d, d)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom on(e, d)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom on(d, d)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom on(e, d)>, <Atom ontable(c)>]
> Possible groundings:
['(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom on(d, e)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom on(e, d)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom on(d, e)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom on(e, d)>, <Atom ontable(c)>]
> Possible groundings:
['(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(c)>]
> Possible groundings:
['(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(c)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(c)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom on(d, b)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom on(d, b)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(c)>]
> Possible groundings:
['(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom on(d, d)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']

>>>>  A* iteration 870  <<<<

> Fringe size: 4132
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack e b)', '(stack e e)', '(pick-up c)', '(stack d d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=15

>>>>  A* iteration 871  <<<<

> Fringe size: 4134
> First 20 nodes: (D:10,C:2), (D:9,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack e b)', '(stack e e)', '(pick-up c)', '(stack d e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 872  <<<<

> Fringe size: 4136
> First 20 nodes: (D:11,C:2), (D:9,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack e b)', '(stack e e)', '(pick-up c)', '(stack d c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 873  <<<<

> Fringe size: 4150
> First 20 nodes: (D:9,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack e b)', '(stack e e)', '(pick-up c)', '(stack d c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=15

>>>>  A* iteration 874  <<<<

> Fringe size: 4164
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack e b)', '(stack e e)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=15

>>>>  A* iteration 875  <<<<

> Fringe size: 4166
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack e b)', '(stack e e)', '(pick-up e)', '(stack b c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 876  <<<<

> Fringe size: 4168
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack e b)', '(stack e e)', '(pick-up e)', '(stack b d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 877  <<<<

> Fringe size: 4183
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack e b)', '(stack e e)', '(pick-up e)', '(stack b d)', '(pick-up c)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=16

>>>>  A* iteration 878  <<<<

> Fringe size: 4185
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack e b)', '(stack e e)', '(pick-up e)', '(stack b e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 879  <<<<

> Fringe size: 4200
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack e b)', '(stack e e)', '(pick-up e)', '(stack b e)', '(pick-up c)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=16

>>>>  A* iteration 880  <<<<

> Fringe size: 4202
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack e b)', '(stack e e)', '(pick-up e)', '(stack d b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 881  <<<<

> Fringe size: 4216
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack e b)', '(stack e e)', '(pick-up e)', '(stack d b)', '(pick-up c)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=15

>>>>  A* iteration 882  <<<<

> Fringe size: 4218
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack e b)', '(stack e e)', '(pick-up e)', '(stack d c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 883  <<<<

> Fringe size: 4220
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack e b)', '(stack e e)', '(pick-up e)', '(stack d d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 884  <<<<

> Fringe size: 4234
> First 20 nodes: (D:10,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack e b)', '(stack e e)', '(pick-up e)', '(stack d d)', '(pick-up c)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=15

>>>>  A* iteration 885  <<<<

> Fringe size: 4236
> First 20 nodes: (D:11,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack e b)', '(stack e e)', '(pick-up e)', '(stack d e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom on(d, d)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(c)>]
> Possible groundings:
['(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom on(d, e)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(d, c)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(d, c)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(c)>]
> Possible groundings:
['(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(c)>]
> Possible groundings:
['(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(c)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(c)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom on(d, b)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom on(d, b)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(c)>]
> Possible groundings:
['(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(d, c)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom on(d, d)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom on(d, d)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(c)>]
> Possible groundings:
['(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom on(d, e)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']

>>>>  A* iteration 886  <<<<

> Fringe size: 4250
> First 20 nodes: (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:11,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack e b)', '(stack e e)', '(pick-up e)', '(stack d e)', '(pick-up c)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=15

>>>>  A* iteration 887  <<<<

> Fringe size: 4253
> First 20 nodes: (D:7,C:2), (D:7,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=6
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)']
> Next lifted action: unstack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 888  <<<<

> Fringe size: 4260
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=7
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack b a)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 889  <<<<

> Fringe size: 4262
> First 20 nodes: (D:9,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack b a)', '(stack b b)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 890  <<<<

> Fringe size: 4269
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack b a)', '(stack b b)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 891  <<<<

> Fringe size: 4271
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack b a)', '(stack b b)', '(pick-up b)', '(stack c b)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 892  <<<<

> Fringe size: 4278
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack b a)', '(stack b b)', '(pick-up b)', '(stack c b)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 893  <<<<

> Fringe size: 4280
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack b a)', '(stack b b)', '(pick-up b)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 894  <<<<

> Fringe size: 4287
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack b a)', '(stack b b)', '(pick-up b)', '(stack c c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 895  <<<<

> Fringe size: 4289
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack b a)', '(stack b b)', '(pick-up b)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 896  <<<<

> Fringe size: 4296
> First 20 nodes: (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack b a)', '(stack b b)', '(pick-up b)', '(stack c d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 897  <<<<

> Fringe size: 4298
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack b a)', '(stack b b)', '(pick-up b)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 898  <<<<

> Fringe size: 4305
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack b a)', '(stack b b)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 899  <<<<

> Fringe size: 4307
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack b a)', '(stack b b)', '(pick-up e)', '(stack c b)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 900  <<<<

> Fringe size: 4309
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack b a)', '(stack b b)', '(pick-up e)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 901  <<<<

> Fringe size: 4316
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack b a)', '(stack b b)', '(pick-up e)', '(stack c c)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 902  <<<<

> Fringe size: 4318
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack b a)', '(stack b b)', '(pick-up e)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 903  <<<<

> Fringe size: 4325
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack b a)', '(stack b b)', '(pick-up e)', '(stack c d)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 904  <<<<

> Fringe size: 4327
> First 20 nodes: (D:11,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack b a)', '(stack b b)', '(pick-up e)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom on(d, e)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(c)>]
> Possible groundings:
['(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(unstack b a)', '(unstack c d)', '(unstack c e)', '(unstack e b)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom on(c, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(c, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom on(c, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']

>>>>  A* iteration 905  <<<<

> Fringe size: 4334
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack b a)', '(stack b b)', '(pick-up e)', '(stack c e)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 906  <<<<

> Fringe size: 4336
> First 20 nodes: (D:9,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack b a)', '(stack b c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 907  <<<<

> Fringe size: 4343
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack b a)', '(stack b c)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 908  <<<<

> Fringe size: 4345
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack b a)', '(stack b c)', '(pick-up b)', '(stack c b)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 909  <<<<

> Fringe size: 4352
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack b a)', '(stack b c)', '(pick-up b)', '(stack c b)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 910  <<<<

> Fringe size: 4354
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack b a)', '(stack b c)', '(pick-up b)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 911  <<<<

> Fringe size: 4361
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack b a)', '(stack b c)', '(pick-up b)', '(stack c c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 912  <<<<

> Fringe size: 4363
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack b a)', '(stack b c)', '(pick-up b)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 913  <<<<

> Fringe size: 4370
> First 20 nodes: (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack b a)', '(stack b c)', '(pick-up b)', '(stack c d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 914  <<<<

> Fringe size: 4372
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack b a)', '(stack b c)', '(pick-up b)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 915  <<<<

> Fringe size: 4379
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack b a)', '(stack b c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 916  <<<<

> Fringe size: 4381
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack b a)', '(stack b c)', '(pick-up e)', '(stack c b)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 917  <<<<

> Fringe size: 4383
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack b a)', '(stack b c)', '(pick-up e)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 918  <<<<

> Fringe size: 4390
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack b a)', '(stack b c)', '(pick-up e)', '(stack c c)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 919  <<<<

> Fringe size: 4392
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack b a)', '(stack b c)', '(pick-up e)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 920  <<<<

> Fringe size: 4399
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack b a)', '(stack b c)', '(pick-up e)', '(stack c d)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 921  <<<<

> Fringe size: 4401
> First 20 nodes: (D:11,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack b a)', '(stack b c)', '(pick-up e)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 922  <<<<

> Fringe size: 4408
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack b a)', '(stack b c)', '(pick-up e)', '(stack c e)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 923  <<<<

> Fringe size: 4410
> First 20 nodes: (D:9,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack b a)', '(stack b d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom on(c, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(c, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom on(c, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']

>>>>  A* iteration 924  <<<<

> Fringe size: 4417
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack b a)', '(stack b d)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 925  <<<<

> Fringe size: 4419
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack b a)', '(stack b d)', '(pick-up b)', '(stack c b)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 926  <<<<

> Fringe size: 4426
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack b a)', '(stack b d)', '(pick-up b)', '(stack c b)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 927  <<<<

> Fringe size: 4428
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack b a)', '(stack b d)', '(pick-up b)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 928  <<<<

> Fringe size: 4435
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack b a)', '(stack b d)', '(pick-up b)', '(stack c c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 929  <<<<

> Fringe size: 4437
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack b a)', '(stack b d)', '(pick-up b)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 930  <<<<

> Fringe size: 4444
> First 20 nodes: (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack b a)', '(stack b d)', '(pick-up b)', '(stack c d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 931  <<<<

> Fringe size: 4446
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack b a)', '(stack b d)', '(pick-up b)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 932  <<<<

> Fringe size: 4453
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack b a)', '(stack b d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 933  <<<<

> Fringe size: 4455
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack b a)', '(stack b d)', '(pick-up e)', '(stack c b)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 934  <<<<

> Fringe size: 4457
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack b a)', '(stack b d)', '(pick-up e)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 935  <<<<

> Fringe size: 4464
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack b a)', '(stack b d)', '(pick-up e)', '(stack c c)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 936  <<<<

> Fringe size: 4466
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack b a)', '(stack b d)', '(pick-up e)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 937  <<<<

> Fringe size: 4473
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack b a)', '(stack b d)', '(pick-up e)', '(stack c d)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 938  <<<<

> Fringe size: 4475
> First 20 nodes: (D:11,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack b a)', '(stack b d)', '(pick-up e)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 939  <<<<

> Fringe size: 4482
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack b a)', '(stack b d)', '(pick-up e)', '(stack c e)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 940  <<<<

> Fringe size: 4484
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack b a)', '(stack b e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 941  <<<<

> Fringe size: 4491
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack b a)', '(stack b e)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 942  <<<<

> Fringe size: 4493
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack b a)', '(stack b e)', '(pick-up b)', '(stack c b)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom on(c, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(c, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom on(c, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom on(c, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']

>>>>  A* iteration 943  <<<<

> Fringe size: 4495
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack b a)', '(stack b e)', '(pick-up b)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 944  <<<<

> Fringe size: 4497
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack b a)', '(stack b e)', '(pick-up b)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 945  <<<<

> Fringe size: 4499
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack b a)', '(stack b e)', '(pick-up b)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 946  <<<<

> Fringe size: 4501
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack b a)', '(stack c b)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 947  <<<<

> Fringe size: 4508
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack b a)', '(stack c b)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 948  <<<<

> Fringe size: 4510
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack b a)', '(stack c b)', '(pick-up e)', '(stack b b)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 949  <<<<

> Fringe size: 4517
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack b a)', '(stack c b)', '(pick-up e)', '(stack b b)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 950  <<<<

> Fringe size: 4519
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack b a)', '(stack c b)', '(pick-up e)', '(stack b c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 951  <<<<

> Fringe size: 4526
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack b a)', '(stack c b)', '(pick-up e)', '(stack b c)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 952  <<<<

> Fringe size: 4528
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack b a)', '(stack c b)', '(pick-up e)', '(stack b d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 953  <<<<

> Fringe size: 4535
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack b a)', '(stack c b)', '(pick-up e)', '(stack b d)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 954  <<<<

> Fringe size: 4537
> First 20 nodes: (D:11,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack b a)', '(stack c b)', '(pick-up e)', '(stack b e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 955  <<<<

> Fringe size: 4544
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack b a)', '(stack c b)', '(pick-up e)', '(stack b e)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 956  <<<<

> Fringe size: 4546
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack b a)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 957  <<<<

> Fringe size: 4553
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack b a)', '(stack c c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 958  <<<<

> Fringe size: 4555
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack b a)', '(stack c c)', '(pick-up e)', '(stack b b)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 959  <<<<

> Fringe size: 4562
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack b a)', '(stack c c)', '(pick-up e)', '(stack b b)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 960  <<<<

> Fringe size: 4564
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack b a)', '(stack c c)', '(pick-up e)', '(stack b c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 961  <<<<

> Fringe size: 4571
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack b a)', '(stack c c)', '(pick-up e)', '(stack b c)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, b)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(c, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom on(c, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(c, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom on(c, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(c, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom on(c, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(c, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom on(c, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(c, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']

>>>>  A* iteration 962  <<<<

> Fringe size: 4573
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack b a)', '(stack c c)', '(pick-up e)', '(stack b d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 963  <<<<

> Fringe size: 4580
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack b a)', '(stack c c)', '(pick-up e)', '(stack b d)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 964  <<<<

> Fringe size: 4582
> First 20 nodes: (D:11,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack b a)', '(stack c c)', '(pick-up e)', '(stack b e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 965  <<<<

> Fringe size: 4589
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack b a)', '(stack c c)', '(pick-up e)', '(stack b e)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 966  <<<<

> Fringe size: 4591
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:7,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack b a)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 967  <<<<

> Fringe size: 4598
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:7,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack b a)', '(stack c d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 968  <<<<

> Fringe size: 4600
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:7,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack b a)', '(stack c d)', '(pick-up e)', '(stack b b)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 969  <<<<

> Fringe size: 4607
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:7,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack b a)', '(stack c d)', '(pick-up e)', '(stack b b)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 970  <<<<

> Fringe size: 4609
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:7,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack b a)', '(stack c d)', '(pick-up e)', '(stack b c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 971  <<<<

> Fringe size: 4616
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:7,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack b a)', '(stack c d)', '(pick-up e)', '(stack b c)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 972  <<<<

> Fringe size: 4618
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:8,C:2), (D:7,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack b a)', '(stack c d)', '(pick-up e)', '(stack b d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 973  <<<<

> Fringe size: 4625
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:7,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack b a)', '(stack c d)', '(pick-up e)', '(stack b d)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 974  <<<<

> Fringe size: 4627
> First 20 nodes: (D:11,C:2), (D:8,C:2), (D:7,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack b a)', '(stack c d)', '(pick-up e)', '(stack b e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 975  <<<<

> Fringe size: 4634
> First 20 nodes: (D:8,C:2), (D:7,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack b a)', '(stack c d)', '(pick-up e)', '(stack b e)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 976  <<<<

> Fringe size: 4636
> First 20 nodes: (D:7,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:11,C:3)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack b a)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 977  <<<<

> Fringe size: 4643
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=7
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack e b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 978  <<<<

> Fringe size: 4645
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack e b)', '(stack c b)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 979  <<<<

> Fringe size: 4647
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack e b)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 980  <<<<

> Fringe size: 4654
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack e b)', '(stack c c)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 981  <<<<

> Fringe size: 4656
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack e b)', '(stack c c)', '(pick-up b)', '(stack e b)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, b)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']

>>>>  A* iteration 982  <<<<

> Fringe size: 4663
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack e b)', '(stack c c)', '(pick-up b)', '(stack e b)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 983  <<<<

> Fringe size: 4665
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack e b)', '(stack c c)', '(pick-up b)', '(stack e c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 984  <<<<

> Fringe size: 4672
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack e b)', '(stack c c)', '(pick-up b)', '(stack e c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 985  <<<<

> Fringe size: 4674
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack e b)', '(stack c c)', '(pick-up b)', '(stack e d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 986  <<<<

> Fringe size: 4681
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack e b)', '(stack c c)', '(pick-up b)', '(stack e d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 987  <<<<

> Fringe size: 4683
> First 20 nodes: (D:11,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack e b)', '(stack c c)', '(pick-up b)', '(stack e e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 988  <<<<

> Fringe size: 4690
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack e b)', '(stack c c)', '(pick-up b)', '(stack e e)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 989  <<<<

> Fringe size: 4692
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack e b)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 990  <<<<

> Fringe size: 4699
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack e b)', '(stack c d)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 991  <<<<

> Fringe size: 4701
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack e b)', '(stack c d)', '(pick-up b)', '(stack e b)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 992  <<<<

> Fringe size: 4708
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack e b)', '(stack c d)', '(pick-up b)', '(stack e b)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 993  <<<<

> Fringe size: 4710
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack e b)', '(stack c d)', '(pick-up b)', '(stack e c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 994  <<<<

> Fringe size: 4717
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack e b)', '(stack c d)', '(pick-up b)', '(stack e c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 995  <<<<

> Fringe size: 4719
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack e b)', '(stack c d)', '(pick-up b)', '(stack e d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 996  <<<<

> Fringe size: 4726
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack e b)', '(stack c d)', '(pick-up b)', '(stack e d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 997  <<<<

> Fringe size: 4728
> First 20 nodes: (D:11,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack e b)', '(stack c d)', '(pick-up b)', '(stack e e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 998  <<<<

> Fringe size: 4735
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack e b)', '(stack c d)', '(pick-up b)', '(stack e e)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 999  <<<<

> Fringe size: 4737
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack e b)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1000  <<<<

> Fringe size: 4744
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack e b)', '(stack c e)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>, <Atom on(e, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>, <Atom on(e, d)>]
> Possible groundings:
['(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>, <Atom on(e, d)>]
> Possible groundings:
['(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]

>>>>  A* iteration 1001  <<<<

> Fringe size: 4746
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack e b)', '(stack c e)', '(pick-up b)', '(stack e b)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1002  <<<<

> Fringe size: 4753
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack e b)', '(stack c e)', '(pick-up b)', '(stack e b)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 1003  <<<<

> Fringe size: 4755
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack e b)', '(stack c e)', '(pick-up b)', '(stack e c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1004  <<<<

> Fringe size: 4762
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack e b)', '(stack c e)', '(pick-up b)', '(stack e c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 1005  <<<<

> Fringe size: 4764
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack e b)', '(stack c e)', '(pick-up b)', '(stack e d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1006  <<<<

> Fringe size: 4771
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack e b)', '(stack c e)', '(pick-up b)', '(stack e d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 1007  <<<<

> Fringe size: 4773
> First 20 nodes: (D:11,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack e b)', '(stack c e)', '(pick-up b)', '(stack e e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1008  <<<<

> Fringe size: 4780
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack e b)', '(stack c e)', '(pick-up b)', '(stack e e)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 1009  <<<<

> Fringe size: 4782
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack e b)', '(stack e b)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1010  <<<<

> Fringe size: 4789
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack e b)', '(stack e b)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 1011  <<<<

> Fringe size: 4791
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack e b)', '(stack e b)', '(pick-up e)', '(stack c b)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1012  <<<<

> Fringe size: 4793
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack e b)', '(stack e b)', '(pick-up e)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1013  <<<<

> Fringe size: 4795
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack e b)', '(stack e b)', '(pick-up e)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1014  <<<<

> Fringe size: 4797
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack e b)', '(stack e b)', '(pick-up e)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1015  <<<<

> Fringe size: 4799
> First 20 nodes: (D:9,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack e b)', '(stack e c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1016  <<<<

> Fringe size: 4806
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack e b)', '(stack e c)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 1017  <<<<

> Fringe size: 4808
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack e b)', '(stack e c)', '(pick-up b)', '(stack c b)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1018  <<<<

> Fringe size: 4815
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack e b)', '(stack e c)', '(pick-up b)', '(stack c b)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 1019  <<<<

> Fringe size: 4817
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack e b)', '(stack e c)', '(pick-up b)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1020  <<<<

> Fringe size: 4824
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack e b)', '(stack e c)', '(pick-up b)', '(stack c c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 1021  <<<<

> Fringe size: 4826
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack e b)', '(stack e c)', '(pick-up b)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>, <Atom on(e, d)>]
> Possible groundings:
['(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, b)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, b)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, b)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']

>>>>  A* iteration 1022  <<<<

> Fringe size: 4833
> First 20 nodes: (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack e b)', '(stack e c)', '(pick-up b)', '(stack c d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 1023  <<<<

> Fringe size: 4835
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack e b)', '(stack e c)', '(pick-up b)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1024  <<<<

> Fringe size: 4842
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack e b)', '(stack e c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 1025  <<<<

> Fringe size: 4844
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack e b)', '(stack e c)', '(pick-up e)', '(stack c b)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1026  <<<<

> Fringe size: 4846
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack e b)', '(stack e c)', '(pick-up e)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1027  <<<<

> Fringe size: 4853
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack e b)', '(stack e c)', '(pick-up e)', '(stack c c)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 1028  <<<<

> Fringe size: 4855
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack e b)', '(stack e c)', '(pick-up e)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1029  <<<<

> Fringe size: 4862
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack e b)', '(stack e c)', '(pick-up e)', '(stack c d)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 1030  <<<<

> Fringe size: 4864
> First 20 nodes: (D:11,C:2), (D:8,C:2), (D:8,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack e b)', '(stack e c)', '(pick-up e)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1031  <<<<

> Fringe size: 4871
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack e b)', '(stack e c)', '(pick-up e)', '(stack c e)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 1032  <<<<

> Fringe size: 4873
> First 20 nodes: (D:9,C:2), (D:9,C:2), (D:8,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack e b)', '(stack e d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1033  <<<<

> Fringe size: 4880
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack e b)', '(stack e d)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 1034  <<<<

> Fringe size: 4882
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack e b)', '(stack e d)', '(pick-up b)', '(stack c b)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1035  <<<<

> Fringe size: 4889
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack e b)', '(stack e d)', '(pick-up b)', '(stack c b)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 1036  <<<<

> Fringe size: 4891
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack e b)', '(stack e d)', '(pick-up b)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1037  <<<<

> Fringe size: 4898
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack e b)', '(stack e d)', '(pick-up b)', '(stack c c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 1038  <<<<

> Fringe size: 4900
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack e b)', '(stack e d)', '(pick-up b)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1039  <<<<

> Fringe size: 4907
> First 20 nodes: (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack e b)', '(stack e d)', '(pick-up b)', '(stack c d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 1040  <<<<

> Fringe size: 4909
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack e b)', '(stack e d)', '(pick-up b)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, b)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>, <Atom on(e, d)>]
> Possible groundings:
['(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, b)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>, <Atom on(e, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, b)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>, <Atom on(e, d)>]
> Possible groundings:
['(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>, <Atom on(e, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>, <Atom on(e, d)>]
> Possible groundings:
['(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>, <Atom on(e, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>, <Atom on(e, d)>]
> Possible groundings:
['(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>, <Atom on(e, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']

>>>>  A* iteration 1041  <<<<

> Fringe size: 4916
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack e b)', '(stack e d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 1042  <<<<

> Fringe size: 4918
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack e b)', '(stack e d)', '(pick-up e)', '(stack c b)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1043  <<<<

> Fringe size: 4920
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack e b)', '(stack e d)', '(pick-up e)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1044  <<<<

> Fringe size: 4927
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack e b)', '(stack e d)', '(pick-up e)', '(stack c c)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 1045  <<<<

> Fringe size: 4929
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:8,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack e b)', '(stack e d)', '(pick-up e)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1046  <<<<

> Fringe size: 4936
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack e b)', '(stack e d)', '(pick-up e)', '(stack c d)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 1047  <<<<

> Fringe size: 4938
> First 20 nodes: (D:11,C:2), (D:8,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack e b)', '(stack e d)', '(pick-up e)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1048  <<<<

> Fringe size: 4945
> First 20 nodes: (D:8,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:11,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack e b)', '(stack e d)', '(pick-up e)', '(stack c e)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 1049  <<<<

> Fringe size: 4947
> First 20 nodes: (D:9,C:2), (D:9,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack e b)', '(stack e e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1050  <<<<

> Fringe size: 4954
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack e b)', '(stack e e)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 1051  <<<<

> Fringe size: 4956
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack e b)', '(stack e e)', '(pick-up b)', '(stack c b)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1052  <<<<

> Fringe size: 4963
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack e b)', '(stack e e)', '(pick-up b)', '(stack c b)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 1053  <<<<

> Fringe size: 4965
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack e b)', '(stack e e)', '(pick-up b)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1054  <<<<

> Fringe size: 4972
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack e b)', '(stack e e)', '(pick-up b)', '(stack c c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 1055  <<<<

> Fringe size: 4974
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:9,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack e b)', '(stack e e)', '(pick-up b)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1056  <<<<

> Fringe size: 4981
> First 20 nodes: (D:10,C:2), (D:9,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack e b)', '(stack e e)', '(pick-up b)', '(stack c d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 1057  <<<<

> Fringe size: 4983
> First 20 nodes: (D:9,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:11,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack e b)', '(stack e e)', '(pick-up b)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1058  <<<<

> Fringe size: 4990
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack e b)', '(stack e e)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 1059  <<<<

> Fringe size: 4992
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack e b)', '(stack e e)', '(pick-up e)', '(stack c b)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>, <Atom on(e, d)>]
> Possible groundings:
['(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, b)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>, <Atom on(e, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>, <Atom on(e, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>, <Atom on(e, d)>]
> Possible groundings:
['(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>, <Atom on(e, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>, <Atom on(e, d)>]
> Possible groundings:
['(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>, <Atom on(e, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>, <Atom on(e, d)>]
> Possible groundings:
['(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, b)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, b)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, b)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']

>>>>  A* iteration 1060  <<<<

> Fringe size: 4994
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack e b)', '(stack e e)', '(pick-up e)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1061  <<<<

> Fringe size: 5001
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack e b)', '(stack e e)', '(pick-up e)', '(stack c c)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 1062  <<<<

> Fringe size: 5003
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack e b)', '(stack e e)', '(pick-up e)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1063  <<<<

> Fringe size: 5010
> First 20 nodes: (D:10,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:11,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack e b)', '(stack e e)', '(pick-up e)', '(stack c d)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 1064  <<<<

> Fringe size: 5012
> First 20 nodes: (D:11,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:11,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack e b)', '(stack e e)', '(pick-up e)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1065  <<<<

> Fringe size: 5019
> First 20 nodes: (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down b)', '(unstack e b)', '(stack e e)', '(pick-up e)', '(stack c e)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 1066  <<<<

> Fringe size: 5023
> First 20 nodes: (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=5
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)']
> Next lifted action: put-down
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=5

>>>>  A* iteration 1067  <<<<

> Fringe size: 5025
> First 20 nodes: (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=6
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down a)']
> Next lifted action: unstack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1068  <<<<

> Fringe size: 5032
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=7
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down a)', '(unstack c d)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 1069  <<<<

> Fringe size: 5034
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down a)', '(unstack c d)', '(stack c a)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1070  <<<<

> Fringe size: 5036
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down a)', '(unstack c d)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1071  <<<<

> Fringe size: 5043
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down a)', '(unstack c d)', '(stack c c)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 1072  <<<<

> Fringe size: 5045
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down a)', '(unstack c d)', '(stack c c)', '(pick-up a)', '(stack e a)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1073  <<<<

> Fringe size: 5052
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down a)', '(unstack c d)', '(stack c c)', '(pick-up a)', '(stack e a)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 1074  <<<<

> Fringe size: 5054
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down a)', '(unstack c d)', '(stack c c)', '(pick-up a)', '(stack e c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1075  <<<<

> Fringe size: 5061
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down a)', '(unstack c d)', '(stack c c)', '(pick-up a)', '(stack e c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 1076  <<<<

> Fringe size: 5063
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down a)', '(unstack c d)', '(stack c c)', '(pick-up a)', '(stack e d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1077  <<<<

> Fringe size: 5070
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down a)', '(unstack c d)', '(stack c c)', '(pick-up a)', '(stack e d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 1078  <<<<

> Fringe size: 5072
> First 20 nodes: (D:11,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down a)', '(unstack c d)', '(stack c c)', '(pick-up a)', '(stack e e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1079  <<<<

> Fringe size: 5079
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down a)', '(unstack c d)', '(stack c c)', '(pick-up a)', '(stack e e)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(put-down a)', '(put-down b)', '(put-down c)', '(put-down d)', '(put-down e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(unstack c d)', '(unstack c e)', '(unstack e b)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(c, a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom on(e, a)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom on(e, c)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>, <Atom on(e, d)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']

>>>>  A* iteration 1080  <<<<

> Fringe size: 5081
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down a)', '(unstack c d)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1081  <<<<

> Fringe size: 5088
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down a)', '(unstack c d)', '(stack c d)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 1082  <<<<

> Fringe size: 5090
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down a)', '(unstack c d)', '(stack c d)', '(pick-up a)', '(stack e a)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1083  <<<<

> Fringe size: 5097
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down a)', '(unstack c d)', '(stack c d)', '(pick-up a)', '(stack e a)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 1084  <<<<

> Fringe size: 5099
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down a)', '(unstack c d)', '(stack c d)', '(pick-up a)', '(stack e c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1085  <<<<

> Fringe size: 5106
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down a)', '(unstack c d)', '(stack c d)', '(pick-up a)', '(stack e c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 1086  <<<<

> Fringe size: 5108
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down a)', '(unstack c d)', '(stack c d)', '(pick-up a)', '(stack e d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1087  <<<<

> Fringe size: 5115
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down a)', '(unstack c d)', '(stack c d)', '(pick-up a)', '(stack e d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 1088  <<<<

> Fringe size: 5117
> First 20 nodes: (D:11,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down a)', '(unstack c d)', '(stack c d)', '(pick-up a)', '(stack e e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1089  <<<<

> Fringe size: 5124
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down a)', '(unstack c d)', '(stack c d)', '(pick-up a)', '(stack e e)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 1090  <<<<

> Fringe size: 5126
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down a)', '(unstack c d)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1091  <<<<

> Fringe size: 5133
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down a)', '(unstack c d)', '(stack c e)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 1092  <<<<

> Fringe size: 5135
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down a)', '(unstack c d)', '(stack c e)', '(pick-up a)', '(stack e a)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1093  <<<<

> Fringe size: 5142
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down a)', '(unstack c d)', '(stack c e)', '(pick-up a)', '(stack e a)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 1094  <<<<

> Fringe size: 5144
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down a)', '(unstack c d)', '(stack c e)', '(pick-up a)', '(stack e c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1095  <<<<

> Fringe size: 5151
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down a)', '(unstack c d)', '(stack c e)', '(pick-up a)', '(stack e c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 1096  <<<<

> Fringe size: 5153
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down a)', '(unstack c d)', '(stack c e)', '(pick-up a)', '(stack e d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1097  <<<<

> Fringe size: 5160
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down a)', '(unstack c d)', '(stack c e)', '(pick-up a)', '(stack e d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 1098  <<<<

> Fringe size: 5162
> First 20 nodes: (D:11,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down a)', '(unstack c d)', '(stack c e)', '(pick-up a)', '(stack e e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1099  <<<<

> Fringe size: 5169
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down a)', '(unstack c d)', '(stack c e)', '(pick-up a)', '(stack e e)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 1100  <<<<

> Fringe size: 5171
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down a)', '(unstack c d)', '(stack e a)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']

>>>>  A* iteration 1101  <<<<

> Fringe size: 5178
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down a)', '(unstack c d)', '(stack e a)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 1102  <<<<

> Fringe size: 5180
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down a)', '(unstack c d)', '(stack e a)', '(pick-up e)', '(stack c a)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1103  <<<<

> Fringe size: 5182
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down a)', '(unstack c d)', '(stack e a)', '(pick-up e)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1104  <<<<

> Fringe size: 5184
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down a)', '(unstack c d)', '(stack e a)', '(pick-up e)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1105  <<<<

> Fringe size: 5186
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down a)', '(unstack c d)', '(stack e a)', '(pick-up e)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1106  <<<<

> Fringe size: 5188
> First 20 nodes: (D:9,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down a)', '(unstack c d)', '(stack e c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1107  <<<<

> Fringe size: 5195
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down a)', '(unstack c d)', '(stack e c)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 1108  <<<<

> Fringe size: 5197
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down a)', '(unstack c d)', '(stack e c)', '(pick-up a)', '(stack c a)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1109  <<<<

> Fringe size: 5204
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down a)', '(unstack c d)', '(stack e c)', '(pick-up a)', '(stack c a)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 1110  <<<<

> Fringe size: 5206
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down a)', '(unstack c d)', '(stack e c)', '(pick-up a)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1111  <<<<

> Fringe size: 5213
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down a)', '(unstack c d)', '(stack e c)', '(pick-up a)', '(stack c c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 1112  <<<<

> Fringe size: 5215
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down a)', '(unstack c d)', '(stack e c)', '(pick-up a)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1113  <<<<

> Fringe size: 5222
> First 20 nodes: (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down a)', '(unstack c d)', '(stack e c)', '(pick-up a)', '(stack c d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 1114  <<<<

> Fringe size: 5224
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down a)', '(unstack c d)', '(stack e c)', '(pick-up a)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1115  <<<<

> Fringe size: 5231
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down a)', '(unstack c d)', '(stack e c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 1116  <<<<

> Fringe size: 5233
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down a)', '(unstack c d)', '(stack e c)', '(pick-up e)', '(stack c a)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1117  <<<<

> Fringe size: 5235
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down a)', '(unstack c d)', '(stack e c)', '(pick-up e)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1118  <<<<

> Fringe size: 5242
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down a)', '(unstack c d)', '(stack e c)', '(pick-up e)', '(stack c c)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 1119  <<<<

> Fringe size: 5244
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down a)', '(unstack c d)', '(stack e c)', '(pick-up e)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1120  <<<<

> Fringe size: 5251
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down a)', '(unstack c d)', '(stack e c)', '(pick-up e)', '(stack c d)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom on(e, c)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>, <Atom on(e, b)>, <Atom on(c, a)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom on(e, c)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom on(e, c)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]

>>>>  A* iteration 1121  <<<<

> Fringe size: 5253
> First 20 nodes: (D:11,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down a)', '(unstack c d)', '(stack e c)', '(pick-up e)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1122  <<<<

> Fringe size: 5260
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down a)', '(unstack c d)', '(stack e c)', '(pick-up e)', '(stack c e)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 1123  <<<<

> Fringe size: 5262
> First 20 nodes: (D:9,C:2), (D:9,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down a)', '(unstack c d)', '(stack e d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1124  <<<<

> Fringe size: 5269
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down a)', '(unstack c d)', '(stack e d)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 1125  <<<<

> Fringe size: 5271
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down a)', '(unstack c d)', '(stack e d)', '(pick-up a)', '(stack c a)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1126  <<<<

> Fringe size: 5278
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down a)', '(unstack c d)', '(stack e d)', '(pick-up a)', '(stack c a)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 1127  <<<<

> Fringe size: 5280
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down a)', '(unstack c d)', '(stack e d)', '(pick-up a)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1128  <<<<

> Fringe size: 5287
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down a)', '(unstack c d)', '(stack e d)', '(pick-up a)', '(stack c c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 1129  <<<<

> Fringe size: 5289
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down a)', '(unstack c d)', '(stack e d)', '(pick-up a)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1130  <<<<

> Fringe size: 5296
> First 20 nodes: (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down a)', '(unstack c d)', '(stack e d)', '(pick-up a)', '(stack c d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 1131  <<<<

> Fringe size: 5298
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down a)', '(unstack c d)', '(stack e d)', '(pick-up a)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1132  <<<<

> Fringe size: 5305
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down a)', '(unstack c d)', '(stack e d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 1133  <<<<

> Fringe size: 5307
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down a)', '(unstack c d)', '(stack e d)', '(pick-up e)', '(stack c a)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1134  <<<<

> Fringe size: 5309
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down a)', '(unstack c d)', '(stack e d)', '(pick-up e)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1135  <<<<

> Fringe size: 5316
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down a)', '(unstack c d)', '(stack e d)', '(pick-up e)', '(stack c c)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 1136  <<<<

> Fringe size: 5318
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down a)', '(unstack c d)', '(stack e d)', '(pick-up e)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1137  <<<<

> Fringe size: 5325
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down a)', '(unstack c d)', '(stack e d)', '(pick-up e)', '(stack c d)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 1138  <<<<

> Fringe size: 5327
> First 20 nodes: (D:11,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down a)', '(unstack c d)', '(stack e d)', '(pick-up e)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1139  <<<<

> Fringe size: 5334
> First 20 nodes: (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down a)', '(unstack c d)', '(stack e d)', '(pick-up e)', '(stack c e)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 1140  <<<<

> Fringe size: 5336
> First 20 nodes: (D:9,C:2), (D:9,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down a)', '(unstack c d)', '(stack e e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1141  <<<<

> Fringe size: 5343
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down a)', '(unstack c d)', '(stack e e)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(c, a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>, <Atom on(e, b)>, <Atom on(c, a)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>, <Atom on(e, d)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>, <Atom on(e, d)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(c, a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>, <Atom on(e, d)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']

>>>>  A* iteration 1142  <<<<

> Fringe size: 5345
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down a)', '(unstack c d)', '(stack e e)', '(pick-up a)', '(stack c a)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1143  <<<<

> Fringe size: 5352
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down a)', '(unstack c d)', '(stack e e)', '(pick-up a)', '(stack c a)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 1144  <<<<

> Fringe size: 5354
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down a)', '(unstack c d)', '(stack e e)', '(pick-up a)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1145  <<<<

> Fringe size: 5361
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down a)', '(unstack c d)', '(stack e e)', '(pick-up a)', '(stack c c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 1146  <<<<

> Fringe size: 5363
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:9,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down a)', '(unstack c d)', '(stack e e)', '(pick-up a)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1147  <<<<

> Fringe size: 5370
> First 20 nodes: (D:10,C:2), (D:9,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down a)', '(unstack c d)', '(stack e e)', '(pick-up a)', '(stack c d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 1148  <<<<

> Fringe size: 5372
> First 20 nodes: (D:9,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down a)', '(unstack c d)', '(stack e e)', '(pick-up a)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1149  <<<<

> Fringe size: 5379
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down a)', '(unstack c d)', '(stack e e)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 1150  <<<<

> Fringe size: 5381
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down a)', '(unstack c d)', '(stack e e)', '(pick-up e)', '(stack c a)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1151  <<<<

> Fringe size: 5383
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down a)', '(unstack c d)', '(stack e e)', '(pick-up e)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1152  <<<<

> Fringe size: 5390
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down a)', '(unstack c d)', '(stack e e)', '(pick-up e)', '(stack c c)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 1153  <<<<

> Fringe size: 5392
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down a)', '(unstack c d)', '(stack e e)', '(pick-up e)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1154  <<<<

> Fringe size: 5399
> First 20 nodes: (D:10,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down a)', '(unstack c d)', '(stack e e)', '(pick-up e)', '(stack c d)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 1155  <<<<

> Fringe size: 5401
> First 20 nodes: (D:11,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down a)', '(unstack c d)', '(stack e e)', '(pick-up e)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1156  <<<<

> Fringe size: 5408
> First 20 nodes: (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down a)', '(unstack c d)', '(stack e e)', '(pick-up e)', '(stack c e)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 1157  <<<<

> Fringe size: 5411
> First 20 nodes: (D:7,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=6
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)']
> Next lifted action: unstack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 1158  <<<<

> Fringe size: 5429
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=7
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=19

>>>>  A* iteration 1159  <<<<

> Fringe size: 5432
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 1160  <<<<

> Fringe size: 5451
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a b)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>, <Atom on(e, b)>, <Atom on(c, a)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom ontable(b)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(unstack b a)', '(unstack c d)', '(unstack c e)', '(unstack e b)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(a, b)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(a, b)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']

>>>>  A* iteration 1161  <<<<

> Fringe size: 5454
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a b)', '(pick-up a)', '(stack b a)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 1162  <<<<

> Fringe size: 5473
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a b)', '(pick-up a)', '(stack b a)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 1163  <<<<

> Fringe size: 5476
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a b)', '(pick-up a)', '(stack b b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 1164  <<<<

> Fringe size: 5495
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a b)', '(pick-up a)', '(stack b b)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 1165  <<<<

> Fringe size: 5498
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a b)', '(pick-up a)', '(stack b c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 1166  <<<<

> Fringe size: 5517
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a b)', '(pick-up a)', '(stack b c)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 1167  <<<<

> Fringe size: 5520
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a b)', '(pick-up a)', '(stack b d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 1168  <<<<

> Fringe size: 5539
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a b)', '(pick-up a)', '(stack b d)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 1169  <<<<

> Fringe size: 5542
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a b)', '(pick-up a)', '(stack b e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 1170  <<<<

> Fringe size: 5561
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a b)', '(pick-up a)', '(stack b e)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 1171  <<<<

> Fringe size: 5564
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a b)', '(pick-up a)', '(stack e a)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 1172  <<<<

> Fringe size: 5583
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a b)', '(pick-up a)', '(stack e a)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 1173  <<<<

> Fringe size: 5586
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a b)', '(pick-up a)', '(stack e b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 1174  <<<<

> Fringe size: 5605
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a b)', '(pick-up a)', '(stack e b)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(a, b)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(a, b)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(a, b)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(a, b)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(a, b)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(a, b)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(a, b)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(a, b)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(a, b)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(a, b)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom on(c, d)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(a, b)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(e, a)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(a, b)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(e, a)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(a, b)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(a, b)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']

>>>>  A* iteration 1175  <<<<

> Fringe size: 5608
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a b)', '(pick-up a)', '(stack e c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 1176  <<<<

> Fringe size: 5627
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a b)', '(pick-up a)', '(stack e c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 1177  <<<<

> Fringe size: 5630
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a b)', '(pick-up a)', '(stack e d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 1178  <<<<

> Fringe size: 5649
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a b)', '(pick-up a)', '(stack e d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 1179  <<<<

> Fringe size: 5652
> First 20 nodes: (D:11,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a b)', '(pick-up a)', '(stack e e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 1180  <<<<

> Fringe size: 5671
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a b)', '(pick-up a)', '(stack e e)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 1181  <<<<

> Fringe size: 5674
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 1182  <<<<

> Fringe size: 5693
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a c)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 1183  <<<<

> Fringe size: 5696
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a c)', '(pick-up a)', '(stack b a)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 1184  <<<<

> Fringe size: 5715
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a c)', '(pick-up a)', '(stack b a)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 1185  <<<<

> Fringe size: 5718
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a c)', '(pick-up a)', '(stack b b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 1186  <<<<

> Fringe size: 5737
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a c)', '(pick-up a)', '(stack b b)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 1187  <<<<

> Fringe size: 5740
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a c)', '(pick-up a)', '(stack b c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 1188  <<<<

> Fringe size: 5759
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a c)', '(pick-up a)', '(stack b c)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(a, b)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(a, b)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(a, b)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>, <Atom on(e, d)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(a, b)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>, <Atom on(e, d)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(a, b)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(a, b)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom on(a, c)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom on(a, c)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom on(a, c)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom on(a, c)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom handempty()>, <Atom on(a, c)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom handempty()>, <Atom on(a, c)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom on(a, c)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom on(a, c)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']

>>>>  A* iteration 1189  <<<<

> Fringe size: 5762
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a c)', '(pick-up a)', '(stack b d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 1190  <<<<

> Fringe size: 5781
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a c)', '(pick-up a)', '(stack b d)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 1191  <<<<

> Fringe size: 5784
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a c)', '(pick-up a)', '(stack b e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 1192  <<<<

> Fringe size: 5803
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a c)', '(pick-up a)', '(stack b e)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 1193  <<<<

> Fringe size: 5806
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a c)', '(pick-up a)', '(stack e a)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 1194  <<<<

> Fringe size: 5825
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a c)', '(pick-up a)', '(stack e a)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 1195  <<<<

> Fringe size: 5828
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a c)', '(pick-up a)', '(stack e b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 1196  <<<<

> Fringe size: 5847
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a c)', '(pick-up a)', '(stack e b)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 1197  <<<<

> Fringe size: 5850
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a c)', '(pick-up a)', '(stack e c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 1198  <<<<

> Fringe size: 5869
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a c)', '(pick-up a)', '(stack e c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 1199  <<<<

> Fringe size: 5872
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a c)', '(pick-up a)', '(stack e d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 1200  <<<<

> Fringe size: 5891
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a c)', '(pick-up a)', '(stack e d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 1201  <<<<

> Fringe size: 5894
> First 20 nodes: (D:11,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a c)', '(pick-up a)', '(stack e e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 1202  <<<<

> Fringe size: 5913
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a c)', '(pick-up a)', '(stack e e)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom on(a, c)>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom on(a, c)>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom on(a, c)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom on(a, c)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom on(c, d)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom on(a, c)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(e, a)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom on(a, c)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(e, a)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom on(a, c)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom on(a, c)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom on(a, c)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom on(a, c)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom on(a, c)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>, <Atom on(e, d)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom on(a, c)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>, <Atom on(e, d)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom on(a, c)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom on(a, c)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']

>>>>  A* iteration 1203  <<<<

> Fringe size: 5916
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 1204  <<<<

> Fringe size: 5935
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a d)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 1205  <<<<

> Fringe size: 5938
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a d)', '(pick-up a)', '(stack b a)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 1206  <<<<

> Fringe size: 5957
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a d)', '(pick-up a)', '(stack b a)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 1207  <<<<

> Fringe size: 5960
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a d)', '(pick-up a)', '(stack b b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 1208  <<<<

> Fringe size: 5979
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a d)', '(pick-up a)', '(stack b b)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 1209  <<<<

> Fringe size: 5982
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a d)', '(pick-up a)', '(stack b c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 1210  <<<<

> Fringe size: 6001
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a d)', '(pick-up a)', '(stack b c)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 1211  <<<<

> Fringe size: 6004
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a d)', '(pick-up a)', '(stack b d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 1212  <<<<

> Fringe size: 6023
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a d)', '(pick-up a)', '(stack b d)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 1213  <<<<

> Fringe size: 6026
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a d)', '(pick-up a)', '(stack b e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 1214  <<<<

> Fringe size: 6045
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a d)', '(pick-up a)', '(stack b e)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 1215  <<<<

> Fringe size: 6048
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a d)', '(pick-up a)', '(stack e a)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 1216  <<<<

> Fringe size: 6067
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a d)', '(pick-up a)', '(stack e a)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(a, d)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(a, d)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(a, d)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(a, d)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(a, d)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(a, d)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(a, d)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(a, d)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(a, d)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(a, d)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(a, d)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(a, d)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom on(c, d)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(a, d)>, <Atom on(e, b)>, <Atom on(e, a)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(a, d)>, <Atom on(e, b)>, <Atom on(e, a)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']

>>>>  A* iteration 1217  <<<<

> Fringe size: 6070
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a d)', '(pick-up a)', '(stack e b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 1218  <<<<

> Fringe size: 6089
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a d)', '(pick-up a)', '(stack e b)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 1219  <<<<

> Fringe size: 6092
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a d)', '(pick-up a)', '(stack e c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 1220  <<<<

> Fringe size: 6111
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a d)', '(pick-up a)', '(stack e c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 1221  <<<<

> Fringe size: 6114
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a d)', '(pick-up a)', '(stack e d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 1222  <<<<

> Fringe size: 6133
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a d)', '(pick-up a)', '(stack e d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 1223  <<<<

> Fringe size: 6136
> First 20 nodes: (D:11,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a d)', '(pick-up a)', '(stack e e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 1224  <<<<

> Fringe size: 6155
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a d)', '(pick-up a)', '(stack e e)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 1225  <<<<

> Fringe size: 6158
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 1226  <<<<

> Fringe size: 6177
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a e)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 1227  <<<<

> Fringe size: 6180
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a e)', '(pick-up a)', '(stack b a)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 1228  <<<<

> Fringe size: 6199
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a e)', '(pick-up a)', '(stack b a)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 1229  <<<<

> Fringe size: 6202
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a e)', '(pick-up a)', '(stack b b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 1230  <<<<

> Fringe size: 6221
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a e)', '(pick-up a)', '(stack b b)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(a, d)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(a, d)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(a, d)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(a, d)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(a, d)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>, <Atom on(e, d)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(a, d)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>, <Atom on(e, d)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(a, d)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(a, d)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>, <Atom on(a, e)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>, <Atom on(a, e)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>, <Atom on(a, e)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>, <Atom on(a, e)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>, <Atom on(a, e)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>, <Atom on(a, e)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']

>>>>  A* iteration 1231  <<<<

> Fringe size: 6224
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a e)', '(pick-up a)', '(stack b c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 1232  <<<<

> Fringe size: 6243
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a e)', '(pick-up a)', '(stack b c)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 1233  <<<<

> Fringe size: 6246
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a e)', '(pick-up a)', '(stack b d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 1234  <<<<

> Fringe size: 6265
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a e)', '(pick-up a)', '(stack b d)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 1235  <<<<

> Fringe size: 6268
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a e)', '(pick-up a)', '(stack b e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 1236  <<<<

> Fringe size: 6287
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a e)', '(pick-up a)', '(stack b e)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 1237  <<<<

> Fringe size: 6290
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a e)', '(pick-up a)', '(stack e a)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 1238  <<<<

> Fringe size: 6309
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a e)', '(pick-up a)', '(stack e a)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 1239  <<<<

> Fringe size: 6312
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a e)', '(pick-up a)', '(stack e b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 1240  <<<<

> Fringe size: 6331
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a e)', '(pick-up a)', '(stack e b)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 1241  <<<<

> Fringe size: 6334
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a e)', '(pick-up a)', '(stack e d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 1242  <<<<

> Fringe size: 6353
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a e)', '(pick-up a)', '(stack e d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 1243  <<<<

> Fringe size: 6356
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a e)', '(pick-up a)', '(stack e e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 1244  <<<<

> Fringe size: 6375
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a e)', '(pick-up a)', '(stack e e)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>, <Atom on(a, e)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>, <Atom on(a, e)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>, <Atom on(a, e)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>, <Atom on(a, e)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom on(c, d)>, <Atom on(a, e)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom on(c, d)>, <Atom on(a, e)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(e, a)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>, <Atom on(a, e)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(e, a)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>, <Atom on(a, e)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>, <Atom on(a, e)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>, <Atom on(a, e)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>, <Atom on(e, d)>, <Atom on(a, e)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>, <Atom on(e, d)>, <Atom on(a, e)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>, <Atom on(a, e)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>, <Atom on(a, e)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']

>>>>  A* iteration 1245  <<<<

> Fringe size: 6378
> First 20 nodes: (D:11,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a e)', '(pick-up a)', '(stack e c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 1246  <<<<

> Fringe size: 6397
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a e)', '(pick-up a)', '(stack e c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 1247  <<<<

> Fringe size: 6399
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b a)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1248  <<<<

> Fringe size: 6417
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b a)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=19

>>>>  A* iteration 1249  <<<<

> Fringe size: 6420
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b a)', '(pick-up b)', '(stack a b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 1250  <<<<

> Fringe size: 6439
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b a)', '(pick-up b)', '(stack a b)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 1251  <<<<

> Fringe size: 6442
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b a)', '(pick-up b)', '(stack a c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 1252  <<<<

> Fringe size: 6461
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b a)', '(pick-up b)', '(stack a c)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 1253  <<<<

> Fringe size: 6464
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b a)', '(pick-up b)', '(stack a d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 1254  <<<<

> Fringe size: 6483
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b a)', '(pick-up b)', '(stack a d)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 1255  <<<<

> Fringe size: 6486
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b a)', '(pick-up b)', '(stack a e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 1256  <<<<

> Fringe size: 6505
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b a)', '(pick-up b)', '(stack a e)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 1257  <<<<

> Fringe size: 6507
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b a)', '(pick-up b)', '(stack e a)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1258  <<<<

> Fringe size: 6525
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b a)', '(pick-up b)', '(stack e a)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=19

>>>>  A* iteration 1259  <<<<

> Fringe size: 6527
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b a)', '(pick-up b)', '(stack e b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>, <Atom on(a, e)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>, <Atom on(a, e)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(a, b)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(a, b)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom on(a, c)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom on(a, c)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(a, d)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(a, d)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>, <Atom on(a, e)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>, <Atom on(a, e)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(e, a)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(e, a)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']

>>>>  A* iteration 1260  <<<<

> Fringe size: 6545
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b a)', '(pick-up b)', '(stack e b)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=19

>>>>  A* iteration 1261  <<<<

> Fringe size: 6547
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b a)', '(pick-up b)', '(stack e c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1262  <<<<

> Fringe size: 6565
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b a)', '(pick-up b)', '(stack e c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=19

>>>>  A* iteration 1263  <<<<

> Fringe size: 6567
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b a)', '(pick-up b)', '(stack e d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1264  <<<<

> Fringe size: 6585
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b a)', '(pick-up b)', '(stack e d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=19

>>>>  A* iteration 1265  <<<<

> Fringe size: 6587
> First 20 nodes: (D:11,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b a)', '(pick-up b)', '(stack e e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1266  <<<<

> Fringe size: 6605
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b a)', '(pick-up b)', '(stack e e)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=19

>>>>  A* iteration 1267  <<<<

> Fringe size: 6607
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1268  <<<<

> Fringe size: 6625
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b b)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=19

>>>>  A* iteration 1269  <<<<

> Fringe size: 6628
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b b)', '(pick-up b)', '(stack a b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 1270  <<<<

> Fringe size: 6647
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b b)', '(pick-up b)', '(stack a b)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 1271  <<<<

> Fringe size: 6650
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b b)', '(pick-up b)', '(stack a c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 1272  <<<<

> Fringe size: 6669
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b b)', '(pick-up b)', '(stack a c)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 1273  <<<<

> Fringe size: 6672
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b b)', '(pick-up b)', '(stack a d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>, <Atom on(e, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>, <Atom on(e, d)>]
> Possible groundings:
['(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(a, b)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(a, b)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom handempty()>, <Atom on(a, c)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom handempty()>, <Atom on(a, c)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(a, d)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(a, d)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]

>>>>  A* iteration 1274  <<<<

> Fringe size: 6691
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b b)', '(pick-up b)', '(stack a d)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 1275  <<<<

> Fringe size: 6694
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b b)', '(pick-up b)', '(stack a e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 1276  <<<<

> Fringe size: 6713
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b b)', '(pick-up b)', '(stack a e)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 1277  <<<<

> Fringe size: 6715
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b b)', '(pick-up b)', '(stack e a)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1278  <<<<

> Fringe size: 6733
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b b)', '(pick-up b)', '(stack e a)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=19

>>>>  A* iteration 1279  <<<<

> Fringe size: 6735
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b b)', '(pick-up b)', '(stack e b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1280  <<<<

> Fringe size: 6753
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b b)', '(pick-up b)', '(stack e b)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=19

>>>>  A* iteration 1281  <<<<

> Fringe size: 6755
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b b)', '(pick-up b)', '(stack e c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1282  <<<<

> Fringe size: 6773
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b b)', '(pick-up b)', '(stack e c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=19

>>>>  A* iteration 1283  <<<<

> Fringe size: 6775
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b b)', '(pick-up b)', '(stack e d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1284  <<<<

> Fringe size: 6793
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b b)', '(pick-up b)', '(stack e d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=19

>>>>  A* iteration 1285  <<<<

> Fringe size: 6795
> First 20 nodes: (D:11,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b b)', '(pick-up b)', '(stack e e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1286  <<<<

> Fringe size: 6813
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b b)', '(pick-up b)', '(stack e e)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=19

>>>>  A* iteration 1287  <<<<

> Fringe size: 6815
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1288  <<<<

> Fringe size: 6833
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b c)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=19
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>, <Atom on(a, e)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>, <Atom on(a, e)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(e, a)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(e, a)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>, <Atom on(e, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>, <Atom on(e, d)>]
> Possible groundings:
['(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']

>>>>  A* iteration 1289  <<<<

> Fringe size: 6836
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b c)', '(pick-up b)', '(stack a b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 1290  <<<<

> Fringe size: 6855
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b c)', '(pick-up b)', '(stack a b)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 1291  <<<<

> Fringe size: 6858
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b c)', '(pick-up b)', '(stack a c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 1292  <<<<

> Fringe size: 6877
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b c)', '(pick-up b)', '(stack a c)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 1293  <<<<

> Fringe size: 6880
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b c)', '(pick-up b)', '(stack a d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 1294  <<<<

> Fringe size: 6899
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b c)', '(pick-up b)', '(stack a d)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 1295  <<<<

> Fringe size: 6902
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b c)', '(pick-up b)', '(stack a e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 1296  <<<<

> Fringe size: 6921
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b c)', '(pick-up b)', '(stack a e)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 1297  <<<<

> Fringe size: 6923
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b c)', '(pick-up b)', '(stack e a)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1298  <<<<

> Fringe size: 6941
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b c)', '(pick-up b)', '(stack e a)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=19

>>>>  A* iteration 1299  <<<<

> Fringe size: 6943
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b c)', '(pick-up b)', '(stack e b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1300  <<<<

> Fringe size: 6961
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b c)', '(pick-up b)', '(stack e b)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=19

>>>>  A* iteration 1301  <<<<

> Fringe size: 6963
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b c)', '(pick-up b)', '(stack e c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1302  <<<<

> Fringe size: 6981
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b c)', '(pick-up b)', '(stack e c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=19
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(a, b)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(a, b)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom on(a, c)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom on(a, c)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(a, d)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(a, d)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>, <Atom on(a, e)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>, <Atom on(a, e)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(e, a)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(e, a)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']

>>>>  A* iteration 1303  <<<<

> Fringe size: 6983
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b c)', '(pick-up b)', '(stack e d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1304  <<<<

> Fringe size: 7001
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b c)', '(pick-up b)', '(stack e d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=19

>>>>  A* iteration 1305  <<<<

> Fringe size: 7003
> First 20 nodes: (D:11,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b c)', '(pick-up b)', '(stack e e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1306  <<<<

> Fringe size: 7021
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b c)', '(pick-up b)', '(stack e e)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=19

>>>>  A* iteration 1307  <<<<

> Fringe size: 7023
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1308  <<<<

> Fringe size: 7041
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b d)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=19

>>>>  A* iteration 1309  <<<<

> Fringe size: 7044
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b d)', '(pick-up b)', '(stack a b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 1310  <<<<

> Fringe size: 7063
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b d)', '(pick-up b)', '(stack a b)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 1311  <<<<

> Fringe size: 7066
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b d)', '(pick-up b)', '(stack a c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 1312  <<<<

> Fringe size: 7085
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b d)', '(pick-up b)', '(stack a c)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 1313  <<<<

> Fringe size: 7088
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b d)', '(pick-up b)', '(stack a d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 1314  <<<<

> Fringe size: 7107
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b d)', '(pick-up b)', '(stack a d)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 1315  <<<<

> Fringe size: 7110
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b d)', '(pick-up b)', '(stack a e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 1316  <<<<

> Fringe size: 7129
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b d)', '(pick-up b)', '(stack a e)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>, <Atom on(e, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>, <Atom on(e, d)>]
> Possible groundings:
['(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(a, b)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(a, b)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom on(a, c)>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom on(a, c)>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(a, d)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(a, d)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>, <Atom on(a, e)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>, <Atom on(a, e)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']

>>>>  A* iteration 1317  <<<<

> Fringe size: 7131
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b d)', '(pick-up b)', '(stack e a)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1318  <<<<

> Fringe size: 7149
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b d)', '(pick-up b)', '(stack e a)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=19

>>>>  A* iteration 1319  <<<<

> Fringe size: 7151
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b d)', '(pick-up b)', '(stack e d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1320  <<<<

> Fringe size: 7169
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b d)', '(pick-up b)', '(stack e d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=19

>>>>  A* iteration 1321  <<<<

> Fringe size: 7171
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b d)', '(pick-up b)', '(stack e e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1322  <<<<

> Fringe size: 7189
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b d)', '(pick-up b)', '(stack e e)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=19

>>>>  A* iteration 1323  <<<<

> Fringe size: 7191
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b d)', '(pick-up b)', '(stack e b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1324  <<<<

> Fringe size: 7209
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b d)', '(pick-up b)', '(stack e b)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=19

>>>>  A* iteration 1325  <<<<

> Fringe size: 7211
> First 20 nodes: (D:11,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b d)', '(pick-up b)', '(stack e c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1326  <<<<

> Fringe size: 7229
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b d)', '(pick-up b)', '(stack e c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=19

>>>>  A* iteration 1327  <<<<

> Fringe size: 7231
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e a)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1328  <<<<

> Fringe size: 7249
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e a)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=19

>>>>  A* iteration 1329  <<<<

> Fringe size: 7252
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e a)', '(pick-up e)', '(stack a b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 1330  <<<<

> Fringe size: 7271
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e a)', '(pick-up e)', '(stack a b)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 1331  <<<<

> Fringe size: 7274
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e a)', '(pick-up e)', '(stack a c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(e, a)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(e, a)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>, <Atom on(e, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>, <Atom on(e, d)>]
> Possible groundings:
['(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(e, a)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(e, a)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(a, b)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(e, a)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(a, b)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(e, a)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom on(a, c)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(e, a)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']

>>>>  A* iteration 1332  <<<<

> Fringe size: 7293
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e a)', '(pick-up e)', '(stack a c)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 1333  <<<<

> Fringe size: 7296
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e a)', '(pick-up e)', '(stack a d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 1334  <<<<

> Fringe size: 7315
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e a)', '(pick-up e)', '(stack a d)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 1335  <<<<

> Fringe size: 7318
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e a)', '(pick-up e)', '(stack a e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 1336  <<<<

> Fringe size: 7337
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e a)', '(pick-up e)', '(stack a e)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 1337  <<<<

> Fringe size: 7339
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e a)', '(pick-up e)', '(stack b a)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1338  <<<<

> Fringe size: 7357
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e a)', '(pick-up e)', '(stack b a)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=19

>>>>  A* iteration 1339  <<<<

> Fringe size: 7359
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e a)', '(pick-up e)', '(stack b b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1340  <<<<

> Fringe size: 7377
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e a)', '(pick-up e)', '(stack b b)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=19

>>>>  A* iteration 1341  <<<<

> Fringe size: 7379
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e a)', '(pick-up e)', '(stack b c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1342  <<<<

> Fringe size: 7397
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e a)', '(pick-up e)', '(stack b c)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=19

>>>>  A* iteration 1343  <<<<

> Fringe size: 7399
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e a)', '(pick-up e)', '(stack b d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1344  <<<<

> Fringe size: 7417
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e a)', '(pick-up e)', '(stack b d)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=19

>>>>  A* iteration 1345  <<<<

> Fringe size: 7419
> First 20 nodes: (D:11,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e a)', '(pick-up e)', '(stack b e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom on(a, c)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(e, a)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(a, d)>, <Atom on(e, b)>, <Atom on(e, a)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(a, d)>, <Atom on(e, b)>, <Atom on(e, a)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(e, a)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>, <Atom on(a, e)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(e, a)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>, <Atom on(a, e)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(e, a)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(e, a)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(e, a)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(e, a)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(e, a)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(e, a)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(e, a)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(e, a)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(e, a)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(e, a)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom on(c, d)>]

>>>>  A* iteration 1346  <<<<

> Fringe size: 7437
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e a)', '(pick-up e)', '(stack b e)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=19

>>>>  A* iteration 1347  <<<<

> Fringe size: 7439
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1348  <<<<

> Fringe size: 7457
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e b)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=19

>>>>  A* iteration 1349  <<<<

> Fringe size: 7460
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e b)', '(pick-up e)', '(stack a b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 1350  <<<<

> Fringe size: 7479
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e b)', '(pick-up e)', '(stack a b)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 1351  <<<<

> Fringe size: 7482
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e b)', '(pick-up e)', '(stack a c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 1352  <<<<

> Fringe size: 7501
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e b)', '(pick-up e)', '(stack a c)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 1353  <<<<

> Fringe size: 7504
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e b)', '(pick-up e)', '(stack a d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 1354  <<<<

> Fringe size: 7523
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e b)', '(pick-up e)', '(stack a d)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 1355  <<<<

> Fringe size: 7526
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e b)', '(pick-up e)', '(stack a e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 1356  <<<<

> Fringe size: 7545
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e b)', '(pick-up e)', '(stack a e)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 1357  <<<<

> Fringe size: 7547
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e b)', '(pick-up e)', '(stack b a)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1358  <<<<

> Fringe size: 7565
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e b)', '(pick-up e)', '(stack b a)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=19

>>>>  A* iteration 1359  <<<<

> Fringe size: 7567
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e b)', '(pick-up e)', '(stack b b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1360  <<<<

> Fringe size: 7585
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e b)', '(pick-up e)', '(stack b b)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=19
> Possible groundings:
['(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(a, b)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(a, b)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom on(a, c)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom on(a, c)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(a, d)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(a, d)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>, <Atom on(a, e)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>, <Atom on(a, e)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']

>>>>  A* iteration 1361  <<<<

> Fringe size: 7587
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e b)', '(pick-up e)', '(stack b c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1362  <<<<

> Fringe size: 7605
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e b)', '(pick-up e)', '(stack b c)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=19

>>>>  A* iteration 1363  <<<<

> Fringe size: 7607
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e b)', '(pick-up e)', '(stack b d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1364  <<<<

> Fringe size: 7625
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e b)', '(pick-up e)', '(stack b d)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=19

>>>>  A* iteration 1365  <<<<

> Fringe size: 7627
> First 20 nodes: (D:11,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e b)', '(pick-up e)', '(stack b e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1366  <<<<

> Fringe size: 7645
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e b)', '(pick-up e)', '(stack b e)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=19

>>>>  A* iteration 1367  <<<<

> Fringe size: 7647
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1368  <<<<

> Fringe size: 7665
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=19

>>>>  A* iteration 1369  <<<<

> Fringe size: 7668
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e d)', '(pick-up e)', '(stack a b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 1370  <<<<

> Fringe size: 7687
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e d)', '(pick-up e)', '(stack a b)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 1371  <<<<

> Fringe size: 7690
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e d)', '(pick-up e)', '(stack a c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 1372  <<<<

> Fringe size: 7709
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e d)', '(pick-up e)', '(stack a c)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 1373  <<<<

> Fringe size: 7712
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e d)', '(pick-up e)', '(stack a d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 1374  <<<<

> Fringe size: 7731
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e d)', '(pick-up e)', '(stack a d)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom on(c, d)>]
> Possible groundings:
['(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>, <Atom on(e, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>, <Atom on(e, d)>]
> Possible groundings:
['(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(a, b)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>, <Atom on(e, d)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(a, b)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>, <Atom on(e, d)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom on(a, c)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>, <Atom on(e, d)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom on(a, c)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>, <Atom on(e, d)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(a, d)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>, <Atom on(e, d)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(a, d)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>, <Atom on(e, d)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>, <Atom on(e, d)>, <Atom on(a, e)>]

>>>>  A* iteration 1375  <<<<

> Fringe size: 7734
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e d)', '(pick-up e)', '(stack a e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 1376  <<<<

> Fringe size: 7753
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e d)', '(pick-up e)', '(stack a e)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 1377  <<<<

> Fringe size: 7755
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e d)', '(pick-up e)', '(stack b a)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1378  <<<<

> Fringe size: 7773
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e d)', '(pick-up e)', '(stack b a)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=19

>>>>  A* iteration 1379  <<<<

> Fringe size: 7775
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e d)', '(pick-up e)', '(stack b b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1380  <<<<

> Fringe size: 7793
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e d)', '(pick-up e)', '(stack b b)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=19

>>>>  A* iteration 1381  <<<<

> Fringe size: 7795
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e d)', '(pick-up e)', '(stack b c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1382  <<<<

> Fringe size: 7813
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e d)', '(pick-up e)', '(stack b c)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=19

>>>>  A* iteration 1383  <<<<

> Fringe size: 7815
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e d)', '(pick-up e)', '(stack b d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1384  <<<<

> Fringe size: 7833
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e d)', '(pick-up e)', '(stack b d)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=19

>>>>  A* iteration 1385  <<<<

> Fringe size: 7835
> First 20 nodes: (D:11,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e d)', '(pick-up e)', '(stack b e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1386  <<<<

> Fringe size: 7853
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e d)', '(pick-up e)', '(stack b e)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=19

>>>>  A* iteration 1387  <<<<

> Fringe size: 7855
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1388  <<<<

> Fringe size: 7873
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e e)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=19

>>>>  A* iteration 1389  <<<<

> Fringe size: 7876
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e e)', '(pick-up e)', '(stack a b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>, <Atom on(e, d)>, <Atom on(a, e)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>, <Atom on(e, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>, <Atom on(e, d)>]
> Possible groundings:
['(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>, <Atom on(e, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>, <Atom on(e, d)>]
> Possible groundings:
['(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>, <Atom on(e, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>, <Atom on(e, d)>]
> Possible groundings:
['(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>, <Atom on(e, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>, <Atom on(e, d)>]
> Possible groundings:
['(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom on(c, d)>, <Atom on(e, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom on(c, d)>, <Atom on(e, d)>]
> Possible groundings:
['(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(a, b)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(a, b)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]

>>>>  A* iteration 1390  <<<<

> Fringe size: 7895
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e e)', '(pick-up e)', '(stack a b)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 1391  <<<<

> Fringe size: 7898
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e e)', '(pick-up e)', '(stack a c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 1392  <<<<

> Fringe size: 7917
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e e)', '(pick-up e)', '(stack a c)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 1393  <<<<

> Fringe size: 7920
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e e)', '(pick-up e)', '(stack a d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 1394  <<<<

> Fringe size: 7939
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e e)', '(pick-up e)', '(stack a d)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 1395  <<<<

> Fringe size: 7942
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e e)', '(pick-up e)', '(stack a e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 1396  <<<<

> Fringe size: 7961
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e e)', '(pick-up e)', '(stack a e)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 1397  <<<<

> Fringe size: 7963
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e e)', '(pick-up e)', '(stack b a)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1398  <<<<

> Fringe size: 7981
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e e)', '(pick-up e)', '(stack b a)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=19

>>>>  A* iteration 1399  <<<<

> Fringe size: 7983
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e e)', '(pick-up e)', '(stack b b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1400  <<<<

> Fringe size: 8001
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e e)', '(pick-up e)', '(stack b b)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=19

>>>>  A* iteration 1401  <<<<

> Fringe size: 8003
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e e)', '(pick-up e)', '(stack b c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1402  <<<<

> Fringe size: 8021
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e e)', '(pick-up e)', '(stack b c)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=19

>>>>  A* iteration 1403  <<<<

> Fringe size: 8023
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e e)', '(pick-up e)', '(stack b d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1404  <<<<

> Fringe size: 8041
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e e)', '(pick-up e)', '(stack b d)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=19
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom on(a, c)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom on(a, c)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(a, d)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(a, d)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>, <Atom on(a, e)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>, <Atom on(a, e)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']

>>>>  A* iteration 1405  <<<<

> Fringe size: 8043
> First 20 nodes: (D:11,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e e)', '(pick-up e)', '(stack b e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1406  <<<<

> Fringe size: 8061
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e e)', '(pick-up e)', '(stack b e)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=19

>>>>  A* iteration 1407  <<<<

> Fringe size: 8063
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1408  <<<<

> Fringe size: 8081
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=19

>>>>  A* iteration 1409  <<<<

> Fringe size: 8084
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e c)', '(pick-up e)', '(stack a b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 1410  <<<<

> Fringe size: 8103
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e c)', '(pick-up e)', '(stack a b)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 1411  <<<<

> Fringe size: 8106
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e c)', '(pick-up e)', '(stack a c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 1412  <<<<

> Fringe size: 8125
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e c)', '(pick-up e)', '(stack a c)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 1413  <<<<

> Fringe size: 8128
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e c)', '(pick-up e)', '(stack a d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 1414  <<<<

> Fringe size: 8147
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e c)', '(pick-up e)', '(stack a d)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 1415  <<<<

> Fringe size: 8150
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e c)', '(pick-up e)', '(stack a e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 1416  <<<<

> Fringe size: 8169
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e c)', '(pick-up e)', '(stack a e)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 1417  <<<<

> Fringe size: 8171
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e c)', '(pick-up e)', '(stack b a)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1418  <<<<

> Fringe size: 8189
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e c)', '(pick-up e)', '(stack b a)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=19
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom on(c, d)>]
> Possible groundings:
['(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(a, b)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(a, b)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom on(a, c)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom on(a, c)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(a, d)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(a, d)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>, <Atom on(a, e)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>, <Atom on(a, e)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']

>>>>  A* iteration 1419  <<<<

> Fringe size: 8191
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e c)', '(pick-up e)', '(stack b b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1420  <<<<

> Fringe size: 8209
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e c)', '(pick-up e)', '(stack b b)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=19

>>>>  A* iteration 1421  <<<<

> Fringe size: 8211
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e c)', '(pick-up e)', '(stack b c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1422  <<<<

> Fringe size: 8229
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e c)', '(pick-up e)', '(stack b c)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=19

>>>>  A* iteration 1423  <<<<

> Fringe size: 8231
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e c)', '(pick-up e)', '(stack b e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1424  <<<<

> Fringe size: 8249
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e c)', '(pick-up e)', '(stack b e)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=19

>>>>  A* iteration 1425  <<<<

> Fringe size: 8251
> First 20 nodes: (D:11,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e c)', '(pick-up e)', '(stack b d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1426  <<<<

> Fringe size: 8269
> First 20 nodes: (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e c)', '(pick-up e)', '(stack b d)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=19

>>>>  A* iteration 1427  <<<<

> Fringe size: 8271
> First 20 nodes: (D:9,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1428  <<<<

> Fringe size: 8289
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b e)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=19

>>>>  A* iteration 1429  <<<<

> Fringe size: 8292
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b e)', '(pick-up b)', '(stack a b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 1430  <<<<

> Fringe size: 8311
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b e)', '(pick-up b)', '(stack a b)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 1431  <<<<

> Fringe size: 8314
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b e)', '(pick-up b)', '(stack a c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 1432  <<<<

> Fringe size: 8333
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b e)', '(pick-up b)', '(stack a c)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom on(c, d)>]
> Possible groundings:
['(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom on(c, d)>]
> Possible groundings:
['(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(a, b)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(a, b)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom on(c, d)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom on(a, c)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom on(a, c)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom on(c, d)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(a, d)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom on(c, d)>]

>>>>  A* iteration 1433  <<<<

> Fringe size: 8336
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b e)', '(pick-up b)', '(stack a d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 1434  <<<<

> Fringe size: 8355
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b e)', '(pick-up b)', '(stack a d)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 1435  <<<<

> Fringe size: 8358
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b e)', '(pick-up b)', '(stack a e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 1436  <<<<

> Fringe size: 8377
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b e)', '(pick-up b)', '(stack a e)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 1437  <<<<

> Fringe size: 8379
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b e)', '(pick-up b)', '(stack e a)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1438  <<<<

> Fringe size: 8397
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b e)', '(pick-up b)', '(stack e a)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=19

>>>>  A* iteration 1439  <<<<

> Fringe size: 8399
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b e)', '(pick-up b)', '(stack e b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1440  <<<<

> Fringe size: 8417
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b e)', '(pick-up b)', '(stack e b)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=19

>>>>  A* iteration 1441  <<<<

> Fringe size: 8419
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b e)', '(pick-up b)', '(stack e c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1442  <<<<

> Fringe size: 8437
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b e)', '(pick-up b)', '(stack e c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=19

>>>>  A* iteration 1443  <<<<

> Fringe size: 8439
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b e)', '(pick-up b)', '(stack e d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1444  <<<<

> Fringe size: 8457
> First 20 nodes: (D:10,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b e)', '(pick-up b)', '(stack e d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=19

>>>>  A* iteration 1445  <<<<

> Fringe size: 8459
> First 20 nodes: (D:11,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b e)', '(pick-up b)', '(stack e e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1446  <<<<

> Fringe size: 8477
> First 20 nodes: (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b e)', '(pick-up b)', '(stack e e)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=19

>>>>  A* iteration 1447  <<<<

> Fringe size: 8492
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=7
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=16
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(a, d)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom on(c, d)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom on(c, d)>, <Atom on(a, e)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom on(c, d)>, <Atom on(a, e)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(e, a)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(e, a)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom on(c, d)>]
> Possible groundings:
['(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom on(c, d)>]
> Possible groundings:
['(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom on(c, d)>]
> Possible groundings:
['(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom on(c, d)>, <Atom on(e, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom on(c, d)>, <Atom on(e, d)>]
> Possible groundings:
['(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom on(c, d)>]
> Possible groundings:
['(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']

>>>>  A* iteration 1448  <<<<

> Fringe size: 8494
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack c b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1449  <<<<

> Fringe size: 8496
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1450  <<<<

> Fringe size: 8511
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack c c)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=16

>>>>  A* iteration 1451  <<<<

> Fringe size: 8513
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack c c)', '(pick-up b)', '(stack d b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1452  <<<<

> Fringe size: 8515
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack c c)', '(pick-up b)', '(stack d c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1453  <<<<

> Fringe size: 8517
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack c c)', '(pick-up b)', '(stack d d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1454  <<<<

> Fringe size: 8519
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack c c)', '(pick-up b)', '(stack d e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1455  <<<<

> Fringe size: 8521
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack c c)', '(pick-up b)', '(stack e b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1456  <<<<

> Fringe size: 8536
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack c c)', '(pick-up b)', '(stack e b)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=16

>>>>  A* iteration 1457  <<<<

> Fringe size: 8538
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack c c)', '(pick-up b)', '(stack e c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1458  <<<<

> Fringe size: 8553
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack c c)', '(pick-up b)', '(stack e c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=16

>>>>  A* iteration 1459  <<<<

> Fringe size: 8555
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack c c)', '(pick-up b)', '(stack e d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1460  <<<<

> Fringe size: 8570
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack c c)', '(pick-up b)', '(stack e d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=16

>>>>  A* iteration 1461  <<<<

> Fringe size: 8572
> First 20 nodes: (D:11,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack c c)', '(pick-up b)', '(stack e e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1462  <<<<

> Fringe size: 8587
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack c c)', '(pick-up b)', '(stack e e)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=16

>>>>  A* iteration 1463  <<<<

> Fringe size: 8589
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, b)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom on(d, b)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(d, c)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom on(d, d)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom on(d, e)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom on(e, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom on(e, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]

>>>>  A* iteration 1464  <<<<

> Fringe size: 8604
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack c d)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=16

>>>>  A* iteration 1465  <<<<

> Fringe size: 8606
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack c d)', '(pick-up b)', '(stack d b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1466  <<<<

> Fringe size: 8608
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack c d)', '(pick-up b)', '(stack d c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1467  <<<<

> Fringe size: 8610
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack c d)', '(pick-up b)', '(stack d d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1468  <<<<

> Fringe size: 8612
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack c d)', '(pick-up b)', '(stack d e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1469  <<<<

> Fringe size: 8614
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack c d)', '(pick-up b)', '(stack e b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1470  <<<<

> Fringe size: 8629
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack c d)', '(pick-up b)', '(stack e b)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=16

>>>>  A* iteration 1471  <<<<

> Fringe size: 8631
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack c d)', '(pick-up b)', '(stack e c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1472  <<<<

> Fringe size: 8646
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack c d)', '(pick-up b)', '(stack e c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=16

>>>>  A* iteration 1473  <<<<

> Fringe size: 8648
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack c d)', '(pick-up b)', '(stack e d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1474  <<<<

> Fringe size: 8663
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack c d)', '(pick-up b)', '(stack e d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=16

>>>>  A* iteration 1475  <<<<

> Fringe size: 8665
> First 20 nodes: (D:11,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack c d)', '(pick-up b)', '(stack e e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1476  <<<<

> Fringe size: 8680
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack c d)', '(pick-up b)', '(stack e e)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=16

>>>>  A* iteration 1477  <<<<

> Fringe size: 8682
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1478  <<<<

> Fringe size: 8697
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack c e)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=16

>>>>  A* iteration 1479  <<<<

> Fringe size: 8699
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack c e)', '(pick-up b)', '(stack d b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1480  <<<<

> Fringe size: 8701
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack c e)', '(pick-up b)', '(stack d c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1481  <<<<

> Fringe size: 8703
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack c e)', '(pick-up b)', '(stack d d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom on(d, b)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(d, c)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom on(d, d)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom on(d, e)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom on(e, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom on(e, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom on(d, b)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(d, c)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom on(d, d)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']

>>>>  A* iteration 1482  <<<<

> Fringe size: 8705
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack c e)', '(pick-up b)', '(stack d e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1483  <<<<

> Fringe size: 8707
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack c e)', '(pick-up b)', '(stack e b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1484  <<<<

> Fringe size: 8722
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack c e)', '(pick-up b)', '(stack e b)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=16

>>>>  A* iteration 1485  <<<<

> Fringe size: 8724
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack c e)', '(pick-up b)', '(stack e c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1486  <<<<

> Fringe size: 8739
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack c e)', '(pick-up b)', '(stack e c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=16

>>>>  A* iteration 1487  <<<<

> Fringe size: 8741
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack c e)', '(pick-up b)', '(stack e d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1488  <<<<

> Fringe size: 8756
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack c e)', '(pick-up b)', '(stack e d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=16

>>>>  A* iteration 1489  <<<<

> Fringe size: 8758
> First 20 nodes: (D:11,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack c e)', '(pick-up b)', '(stack e e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1490  <<<<

> Fringe size: 8773
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack c e)', '(pick-up b)', '(stack e e)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=16

>>>>  A* iteration 1491  <<<<

> Fringe size: 8775
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack d b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1492  <<<<

> Fringe size: 8777
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack d c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1493  <<<<

> Fringe size: 8792
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack d c)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=16

>>>>  A* iteration 1494  <<<<

> Fringe size: 8794
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack d c)', '(pick-up b)', '(stack c b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1495  <<<<

> Fringe size: 8796
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack d c)', '(pick-up b)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1496  <<<<

> Fringe size: 8798
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack d c)', '(pick-up b)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1497  <<<<

> Fringe size: 8800
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack d c)', '(pick-up b)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1498  <<<<

> Fringe size: 8802
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack d c)', '(pick-up b)', '(stack e b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom on(d, e)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom on(e, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom on(e, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom on(d, b)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(d, c)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(d, c)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, b)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(d, c)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(d, c)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(d, c)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(d, c)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(d, c)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']

>>>>  A* iteration 1499  <<<<

> Fringe size: 8817
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack d c)', '(pick-up b)', '(stack e b)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=16

>>>>  A* iteration 1500  <<<<

> Fringe size: 8819
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack d c)', '(pick-up b)', '(stack e c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1501  <<<<

> Fringe size: 8834
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack d c)', '(pick-up b)', '(stack e c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=16

>>>>  A* iteration 1502  <<<<

> Fringe size: 8836
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack d c)', '(pick-up b)', '(stack e d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1503  <<<<

> Fringe size: 8851
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack d c)', '(pick-up b)', '(stack e d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=16

>>>>  A* iteration 1504  <<<<

> Fringe size: 8853
> First 20 nodes: (D:11,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack d c)', '(pick-up b)', '(stack e e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1505  <<<<

> Fringe size: 8868
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack d c)', '(pick-up b)', '(stack e e)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=16

>>>>  A* iteration 1506  <<<<

> Fringe size: 8870
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack d d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1507  <<<<

> Fringe size: 8885
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack d d)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=16

>>>>  A* iteration 1508  <<<<

> Fringe size: 8887
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack d d)', '(pick-up b)', '(stack c b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1509  <<<<

> Fringe size: 8889
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack d d)', '(pick-up b)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1510  <<<<

> Fringe size: 8891
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack d d)', '(pick-up b)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1511  <<<<

> Fringe size: 8893
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack d d)', '(pick-up b)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1512  <<<<

> Fringe size: 8895
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack d d)', '(pick-up b)', '(stack e b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1513  <<<<

> Fringe size: 8910
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack d d)', '(pick-up b)', '(stack e b)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=16

>>>>  A* iteration 1514  <<<<

> Fringe size: 8912
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack d d)', '(pick-up b)', '(stack e c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(d, c)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(d, c)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(d, c)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(d, c)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom on(e, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(d, c)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom on(e, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(d, c)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(d, c)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom on(d, d)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom on(d, d)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, b)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom on(d, d)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom on(d, d)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom on(d, d)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom on(d, d)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom on(d, d)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom on(d, d)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom on(d, d)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']

>>>>  A* iteration 1515  <<<<

> Fringe size: 8927
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack d d)', '(pick-up b)', '(stack e c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=16

>>>>  A* iteration 1516  <<<<

> Fringe size: 8929
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack d d)', '(pick-up b)', '(stack e d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1517  <<<<

> Fringe size: 8944
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack d d)', '(pick-up b)', '(stack e d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=16

>>>>  A* iteration 1518  <<<<

> Fringe size: 8946
> First 20 nodes: (D:11,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack d d)', '(pick-up b)', '(stack e e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1519  <<<<

> Fringe size: 8961
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack d d)', '(pick-up b)', '(stack e e)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=16

>>>>  A* iteration 1520  <<<<

> Fringe size: 8963
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack d e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1521  <<<<

> Fringe size: 8978
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack d e)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=16

>>>>  A* iteration 1522  <<<<

> Fringe size: 8980
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack d e)', '(pick-up b)', '(stack c b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1523  <<<<

> Fringe size: 8982
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack d e)', '(pick-up b)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1524  <<<<

> Fringe size: 8984
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack d e)', '(pick-up b)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1525  <<<<

> Fringe size: 8986
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack d e)', '(pick-up b)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1526  <<<<

> Fringe size: 8988
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack d e)', '(pick-up b)', '(stack e b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1527  <<<<

> Fringe size: 9003
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack d e)', '(pick-up b)', '(stack e b)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=16

>>>>  A* iteration 1528  <<<<

> Fringe size: 9005
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack d e)', '(pick-up b)', '(stack e c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1529  <<<<

> Fringe size: 9020
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack d e)', '(pick-up b)', '(stack e c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=16

>>>>  A* iteration 1530  <<<<

> Fringe size: 9022
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack d e)', '(pick-up b)', '(stack e d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom on(d, d)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom on(d, d)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom on(e, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom on(d, d)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom on(e, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom on(d, d)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom on(d, d)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom on(d, e)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom on(d, e)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, b)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom on(d, e)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom on(d, e)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom on(d, e)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom on(d, e)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom on(d, e)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom on(d, e)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom on(d, e)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom on(d, e)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom on(d, e)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom on(e, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']

>>>>  A* iteration 1531  <<<<

> Fringe size: 9037
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack d e)', '(pick-up b)', '(stack e d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=16

>>>>  A* iteration 1532  <<<<

> Fringe size: 9039
> First 20 nodes: (D:11,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack d e)', '(pick-up b)', '(stack e e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1533  <<<<

> Fringe size: 9054
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack d e)', '(pick-up b)', '(stack e e)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=16

>>>>  A* iteration 1534  <<<<

> Fringe size: 9056
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack e b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1535  <<<<

> Fringe size: 9071
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack e b)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=16

>>>>  A* iteration 1536  <<<<

> Fringe size: 9073
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack e b)', '(pick-up e)', '(stack c b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1537  <<<<

> Fringe size: 9075
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack e b)', '(pick-up e)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1538  <<<<

> Fringe size: 9077
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack e b)', '(pick-up e)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1539  <<<<

> Fringe size: 9079
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack e b)', '(pick-up e)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1540  <<<<

> Fringe size: 9081
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack e b)', '(pick-up e)', '(stack d b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1541  <<<<

> Fringe size: 9083
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack e b)', '(pick-up e)', '(stack d c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1542  <<<<

> Fringe size: 9085
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack e b)', '(pick-up e)', '(stack d d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1543  <<<<

> Fringe size: 9087
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack e b)', '(pick-up e)', '(stack d e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1544  <<<<

> Fringe size: 9089
> First 20 nodes: (D:9,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack e c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1545  <<<<

> Fringe size: 9104
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack e c)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=16

>>>>  A* iteration 1546  <<<<

> Fringe size: 9106
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack e c)', '(pick-up b)', '(stack c b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1547  <<<<

> Fringe size: 9121
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack e c)', '(pick-up b)', '(stack c b)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=16
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom on(d, e)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom on(e, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom on(d, e)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom on(d, e)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, b)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom on(d, b)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(d, c)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom on(d, d)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom on(d, e)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, b)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, b)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']

>>>>  A* iteration 1548  <<<<

> Fringe size: 9123
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack e c)', '(pick-up b)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1549  <<<<

> Fringe size: 9138
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack e c)', '(pick-up b)', '(stack c c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=16

>>>>  A* iteration 1550  <<<<

> Fringe size: 9140
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack e c)', '(pick-up b)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1551  <<<<

> Fringe size: 9155
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack e c)', '(pick-up b)', '(stack c d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=16

>>>>  A* iteration 1552  <<<<

> Fringe size: 9157
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack e c)', '(pick-up b)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1553  <<<<

> Fringe size: 9159
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack e c)', '(pick-up b)', '(stack d b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1554  <<<<

> Fringe size: 9174
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack e c)', '(pick-up b)', '(stack d b)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=16

>>>>  A* iteration 1555  <<<<

> Fringe size: 9176
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack e c)', '(pick-up b)', '(stack d c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1556  <<<<

> Fringe size: 9191
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack e c)', '(pick-up b)', '(stack d c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=16

>>>>  A* iteration 1557  <<<<

> Fringe size: 9193
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack e c)', '(pick-up b)', '(stack d d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1558  <<<<

> Fringe size: 9208
> First 20 nodes: (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack e c)', '(pick-up b)', '(stack d d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=16

>>>>  A* iteration 1559  <<<<

> Fringe size: 9210
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack e c)', '(pick-up b)', '(stack d e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1560  <<<<

> Fringe size: 9225
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack e c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=16

>>>>  A* iteration 1561  <<<<

> Fringe size: 9227
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack e c)', '(pick-up e)', '(stack c b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1562  <<<<

> Fringe size: 9229
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack e c)', '(pick-up e)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1563  <<<<

> Fringe size: 9244
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack e c)', '(pick-up e)', '(stack c c)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=16
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom on(d, b)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom on(d, b)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(d, c)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(d, c)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom on(d, d)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom on(d, d)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom on(d, e)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, b)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']

>>>>  A* iteration 1564  <<<<

> Fringe size: 9246
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack e c)', '(pick-up e)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1565  <<<<

> Fringe size: 9261
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack e c)', '(pick-up e)', '(stack c d)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=16

>>>>  A* iteration 1566  <<<<

> Fringe size: 9263
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack e c)', '(pick-up e)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1567  <<<<

> Fringe size: 9278
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack e c)', '(pick-up e)', '(stack c e)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=16

>>>>  A* iteration 1568  <<<<

> Fringe size: 9280
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack e c)', '(pick-up e)', '(stack d b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1569  <<<<

> Fringe size: 9282
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack e c)', '(pick-up e)', '(stack d c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1570  <<<<

> Fringe size: 9297
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack e c)', '(pick-up e)', '(stack d c)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=16

>>>>  A* iteration 1571  <<<<

> Fringe size: 9299
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack e c)', '(pick-up e)', '(stack d d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1572  <<<<

> Fringe size: 9314
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack e c)', '(pick-up e)', '(stack d d)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=16

>>>>  A* iteration 1573  <<<<

> Fringe size: 9316
> First 20 nodes: (D:11,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack e c)', '(pick-up e)', '(stack d e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1574  <<<<

> Fringe size: 9331
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack e c)', '(pick-up e)', '(stack d e)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=16

>>>>  A* iteration 1575  <<<<

> Fringe size: 9333
> First 20 nodes: (D:9,C:2), (D:9,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack e d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1576  <<<<

> Fringe size: 9348
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack e d)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=16

>>>>  A* iteration 1577  <<<<

> Fringe size: 9350
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack e d)', '(pick-up b)', '(stack c b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1578  <<<<

> Fringe size: 9365
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack e d)', '(pick-up b)', '(stack c b)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=16

>>>>  A* iteration 1579  <<<<

> Fringe size: 9367
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack e d)', '(pick-up b)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom on(d, b)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(d, c)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(d, c)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom on(d, d)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom on(d, d)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom on(d, e)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom on(d, e)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom on(e, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom on(e, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, b)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom on(e, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, b)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom on(e, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom on(e, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']

>>>>  A* iteration 1580  <<<<

> Fringe size: 9382
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack e d)', '(pick-up b)', '(stack c c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=16

>>>>  A* iteration 1581  <<<<

> Fringe size: 9384
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack e d)', '(pick-up b)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1582  <<<<

> Fringe size: 9399
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack e d)', '(pick-up b)', '(stack c d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=16

>>>>  A* iteration 1583  <<<<

> Fringe size: 9401
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack e d)', '(pick-up b)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1584  <<<<

> Fringe size: 9403
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack e d)', '(pick-up b)', '(stack d b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1585  <<<<

> Fringe size: 9418
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack e d)', '(pick-up b)', '(stack d b)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=16

>>>>  A* iteration 1586  <<<<

> Fringe size: 9420
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack e d)', '(pick-up b)', '(stack d c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1587  <<<<

> Fringe size: 9435
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack e d)', '(pick-up b)', '(stack d c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=16

>>>>  A* iteration 1588  <<<<

> Fringe size: 9437
> First 20 nodes: (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack e d)', '(pick-up b)', '(stack d e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1589  <<<<

> Fringe size: 9439
> First 20 nodes: (D:11,C:2), (D:9,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack e d)', '(pick-up b)', '(stack d d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1590  <<<<

> Fringe size: 9454
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack e d)', '(pick-up b)', '(stack d d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=16

>>>>  A* iteration 1591  <<<<

> Fringe size: 9469
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack e d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=16

>>>>  A* iteration 1592  <<<<

> Fringe size: 9471
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack e d)', '(pick-up e)', '(stack c b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1593  <<<<

> Fringe size: 9473
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack e d)', '(pick-up e)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1594  <<<<

> Fringe size: 9488
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack e d)', '(pick-up e)', '(stack c c)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=16

>>>>  A* iteration 1595  <<<<

> Fringe size: 9490
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack e d)', '(pick-up e)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom on(e, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom on(e, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom on(e, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom on(e, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom on(d, b)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom on(e, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom on(d, b)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom on(e, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(d, c)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom on(e, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(d, c)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom on(e, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom on(d, e)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom on(e, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom on(d, d)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom on(e, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom on(d, d)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom on(e, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom on(e, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, b)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom on(e, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom on(e, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom on(e, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom on(e, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']

>>>>  A* iteration 1596  <<<<

> Fringe size: 9505
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack e d)', '(pick-up e)', '(stack c d)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=16

>>>>  A* iteration 1597  <<<<

> Fringe size: 9507
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack e d)', '(pick-up e)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1598  <<<<

> Fringe size: 9522
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack e d)', '(pick-up e)', '(stack c e)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=16

>>>>  A* iteration 1599  <<<<

> Fringe size: 9524
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack e d)', '(pick-up e)', '(stack d b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1600  <<<<

> Fringe size: 9526
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack e d)', '(pick-up e)', '(stack d c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1601  <<<<

> Fringe size: 9541
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack e d)', '(pick-up e)', '(stack d c)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=16

>>>>  A* iteration 1602  <<<<

> Fringe size: 9543
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack e d)', '(pick-up e)', '(stack d d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1603  <<<<

> Fringe size: 9558
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack e d)', '(pick-up e)', '(stack d d)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=16

>>>>  A* iteration 1604  <<<<

> Fringe size: 9560
> First 20 nodes: (D:11,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack e d)', '(pick-up e)', '(stack d e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1605  <<<<

> Fringe size: 9575
> First 20 nodes: (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack e d)', '(pick-up e)', '(stack d e)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=16

>>>>  A* iteration 1606  <<<<

> Fringe size: 9577
> First 20 nodes: (D:9,C:2), (D:9,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack e e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1607  <<<<

> Fringe size: 9592
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack e e)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=16

>>>>  A* iteration 1608  <<<<

> Fringe size: 9594
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack e e)', '(pick-up b)', '(stack c b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1609  <<<<

> Fringe size: 9609
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack e e)', '(pick-up b)', '(stack c b)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=16

>>>>  A* iteration 1610  <<<<

> Fringe size: 9611
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack e e)', '(pick-up b)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom on(e, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom on(e, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom on(e, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom on(d, b)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom on(e, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(d, c)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom on(e, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(d, c)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom on(e, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom on(d, d)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom on(e, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom on(d, d)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom on(e, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom on(d, e)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom on(e, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom on(d, e)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>, <Atom on(e, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, b)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, b)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]

>>>>  A* iteration 1611  <<<<

> Fringe size: 9626
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack e e)', '(pick-up b)', '(stack c c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=16

>>>>  A* iteration 1612  <<<<

> Fringe size: 9628
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack e e)', '(pick-up b)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1613  <<<<

> Fringe size: 9643
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack e e)', '(pick-up b)', '(stack c d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=16

>>>>  A* iteration 1614  <<<<

> Fringe size: 9645
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack e e)', '(pick-up b)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1615  <<<<

> Fringe size: 9647
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack e e)', '(pick-up b)', '(stack d b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1616  <<<<

> Fringe size: 9662
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack e e)', '(pick-up b)', '(stack d b)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=16

>>>>  A* iteration 1617  <<<<

> Fringe size: 9664
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack e e)', '(pick-up b)', '(stack d c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1618  <<<<

> Fringe size: 9679
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack e e)', '(pick-up b)', '(stack d c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=16

>>>>  A* iteration 1619  <<<<

> Fringe size: 9681
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:9,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack e e)', '(pick-up b)', '(stack d d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1620  <<<<

> Fringe size: 9696
> First 20 nodes: (D:10,C:2), (D:9,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack e e)', '(pick-up b)', '(stack d d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=16

>>>>  A* iteration 1621  <<<<

> Fringe size: 9698
> First 20 nodes: (D:9,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack e e)', '(pick-up b)', '(stack d e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1622  <<<<

> Fringe size: 9713
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack e e)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=16

>>>>  A* iteration 1623  <<<<

> Fringe size: 9715
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack e e)', '(pick-up e)', '(stack c b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1624  <<<<

> Fringe size: 9717
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack e e)', '(pick-up e)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1625  <<<<

> Fringe size: 9732
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack e e)', '(pick-up e)', '(stack c c)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=16

>>>>  A* iteration 1626  <<<<

> Fringe size: 9734
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack e e)', '(pick-up e)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom on(d, b)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom on(d, b)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(d, c)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(d, c)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom on(d, d)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom on(d, d)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom on(d, e)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, b)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]

>>>>  A* iteration 1627  <<<<

> Fringe size: 9749
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack e e)', '(pick-up e)', '(stack c d)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=16

>>>>  A* iteration 1628  <<<<

> Fringe size: 9751
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack e e)', '(pick-up e)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1629  <<<<

> Fringe size: 9766
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack e e)', '(pick-up e)', '(stack c e)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=16

>>>>  A* iteration 1630  <<<<

> Fringe size: 9768
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack e e)', '(pick-up e)', '(stack d b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1631  <<<<

> Fringe size: 9770
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack e e)', '(pick-up e)', '(stack d c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1632  <<<<

> Fringe size: 9785
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack e e)', '(pick-up e)', '(stack d c)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=16

>>>>  A* iteration 1633  <<<<

> Fringe size: 9787
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack e e)', '(pick-up e)', '(stack d d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1634  <<<<

> Fringe size: 9802
> First 20 nodes: (D:10,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack e e)', '(pick-up e)', '(stack d d)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=16

>>>>  A* iteration 1635  <<<<

> Fringe size: 9804
> First 20 nodes: (D:11,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack e e)', '(pick-up e)', '(stack d e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1636  <<<<

> Fringe size: 9819
> First 20 nodes: (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack c d)', '(stack e e)', '(pick-up e)', '(stack d e)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=16

>>>>  A* iteration 1637  <<<<

> Fringe size: 9821
> First 20 nodes: (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=6
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down d)']
> Next lifted action: unstack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1638  <<<<

> Fringe size: 9826
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=7
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down d)', '(unstack c d)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 1639  <<<<

> Fringe size: 9827
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down d)', '(unstack c d)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 1640  <<<<

> Fringe size: 9832
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down d)', '(unstack c d)', '(stack c c)', '(pick-up d)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 1641  <<<<

> Fringe size: 9833
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down d)', '(unstack c d)', '(stack c c)', '(pick-up d)', '(stack e c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 1642  <<<<

> Fringe size: 9838
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down d)', '(unstack c d)', '(stack c c)', '(pick-up d)', '(stack e c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 1643  <<<<

> Fringe size: 9839
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down d)', '(unstack c d)', '(stack c c)', '(pick-up d)', '(stack e d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 1644  <<<<

> Fringe size: 9844
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down d)', '(unstack c d)', '(stack c c)', '(pick-up d)', '(stack e d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 1645  <<<<

> Fringe size: 9845
> First 20 nodes: (D:11,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down d)', '(unstack c d)', '(stack c c)', '(pick-up d)', '(stack e e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom on(d, b)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(d, c)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(d, c)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom on(d, d)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom on(d, d)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom on(d, e)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom on(d, e)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(unstack c d)', '(unstack c e)', '(unstack e b)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']

>>>>  A* iteration 1646  <<<<

> Fringe size: 9850
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down d)', '(unstack c d)', '(stack c c)', '(pick-up d)', '(stack e e)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 1647  <<<<

> Fringe size: 9851
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down d)', '(unstack c d)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 1648  <<<<

> Fringe size: 9852
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down d)', '(unstack c d)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 1649  <<<<

> Fringe size: 9857
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down d)', '(unstack c d)', '(stack c e)', '(pick-up d)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 1650  <<<<

> Fringe size: 9858
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down d)', '(unstack c d)', '(stack c e)', '(pick-up d)', '(stack e c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 1651  <<<<

> Fringe size: 9863
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down d)', '(unstack c d)', '(stack c e)', '(pick-up d)', '(stack e c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 1652  <<<<

> Fringe size: 9864
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down d)', '(unstack c d)', '(stack c e)', '(pick-up d)', '(stack e d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 1653  <<<<

> Fringe size: 9869
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down d)', '(unstack c d)', '(stack c e)', '(pick-up d)', '(stack e d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 1654  <<<<

> Fringe size: 9870
> First 20 nodes: (D:11,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down d)', '(unstack c d)', '(stack c e)', '(pick-up d)', '(stack e e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 1655  <<<<

> Fringe size: 9875
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down d)', '(unstack c d)', '(stack c e)', '(pick-up d)', '(stack e e)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 1656  <<<<

> Fringe size: 9876
> First 20 nodes: (D:9,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down d)', '(unstack c d)', '(stack e c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 1657  <<<<

> Fringe size: 9881
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down d)', '(unstack c d)', '(stack e c)', '(pick-up d)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 1658  <<<<

> Fringe size: 9882
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down d)', '(unstack c d)', '(stack e c)', '(pick-up d)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 1659  <<<<

> Fringe size: 9887
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down d)', '(unstack c d)', '(stack e c)', '(pick-up d)', '(stack c c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 1660  <<<<

> Fringe size: 9888
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down d)', '(unstack c d)', '(stack e c)', '(pick-up d)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 1661  <<<<

> Fringe size: 9893
> First 20 nodes: (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down d)', '(unstack c d)', '(stack e c)', '(pick-up d)', '(stack c d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 1662  <<<<

> Fringe size: 9894
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down d)', '(unstack c d)', '(stack e c)', '(pick-up d)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 1663  <<<<

> Fringe size: 9899
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down d)', '(unstack c d)', '(stack e c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 1664  <<<<

> Fringe size: 9900
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down d)', '(unstack c d)', '(stack e c)', '(pick-up e)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 1665  <<<<

> Fringe size: 9905
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down d)', '(unstack c d)', '(stack e c)', '(pick-up e)', '(stack c c)', '(pick-up d)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 1666  <<<<

> Fringe size: 9906
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down d)', '(unstack c d)', '(stack e c)', '(pick-up e)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 1667  <<<<

> Fringe size: 9907
> First 20 nodes: (D:11,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down d)', '(unstack c d)', '(stack e c)', '(pick-up e)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 1668  <<<<

> Fringe size: 9912
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down d)', '(unstack c d)', '(stack e c)', '(pick-up e)', '(stack c e)', '(pick-up d)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']

>>>>  A* iteration 1669  <<<<

> Fringe size: 9913
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down d)', '(unstack c d)', '(stack e d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 1670  <<<<

> Fringe size: 9918
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down d)', '(unstack c d)', '(stack e d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 1671  <<<<

> Fringe size: 9919
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down d)', '(unstack c d)', '(stack e d)', '(pick-up e)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 1672  <<<<

> Fringe size: 9920
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down d)', '(unstack c d)', '(stack e d)', '(pick-up e)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 1673  <<<<

> Fringe size: 9921
> First 20 nodes: (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down d)', '(unstack c d)', '(stack e d)', '(pick-up e)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 1674  <<<<

> Fringe size: 9922
> First 20 nodes: (D:9,C:2), (D:9,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down d)', '(unstack c d)', '(stack e e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 1675  <<<<

> Fringe size: 9927
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down d)', '(unstack c d)', '(stack e e)', '(pick-up d)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 1676  <<<<

> Fringe size: 9928
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down d)', '(unstack c d)', '(stack e e)', '(pick-up d)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 1677  <<<<

> Fringe size: 9933
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down d)', '(unstack c d)', '(stack e e)', '(pick-up d)', '(stack c c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 1678  <<<<

> Fringe size: 9934
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:9,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down d)', '(unstack c d)', '(stack e e)', '(pick-up d)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 1679  <<<<

> Fringe size: 9939
> First 20 nodes: (D:10,C:2), (D:9,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down d)', '(unstack c d)', '(stack e e)', '(pick-up d)', '(stack c d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 1680  <<<<

> Fringe size: 9940
> First 20 nodes: (D:9,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down d)', '(unstack c d)', '(stack e e)', '(pick-up d)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 1681  <<<<

> Fringe size: 9945
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down d)', '(unstack c d)', '(stack e e)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 1682  <<<<

> Fringe size: 9946
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down d)', '(unstack c d)', '(stack e e)', '(pick-up e)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 1683  <<<<

> Fringe size: 9951
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down d)', '(unstack c d)', '(stack e e)', '(pick-up e)', '(stack c c)', '(pick-up d)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 1684  <<<<

> Fringe size: 9952
> First 20 nodes: (D:10,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down d)', '(unstack c d)', '(stack e e)', '(pick-up e)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 1685  <<<<

> Fringe size: 9953
> First 20 nodes: (D:11,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down d)', '(unstack c d)', '(stack e e)', '(pick-up e)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 1686  <<<<

> Fringe size: 9958
> First 20 nodes: (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down d)', '(unstack c d)', '(stack e e)', '(pick-up e)', '(stack c e)', '(pick-up d)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 1687  <<<<

> Fringe size: 9960
> First 20 nodes: (D:7,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3)

> Node instance:
> Depth=6
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down c)']
> Next lifted action: unstack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1688  <<<<

> Fringe size: 9965
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=7
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down c)', '(unstack c d)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 1689  <<<<

> Fringe size: 9967
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down c)', '(unstack c d)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1690  <<<<

> Fringe size: 9972
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down c)', '(unstack c d)', '(stack c c)', '(pick-up c)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 1691  <<<<

> Fringe size: 9974
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down c)', '(unstack c d)', '(stack c c)', '(pick-up c)', '(stack e c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom ontable(c)>]
> Possible groundings:
['(unstack c d)', '(unstack c e)', '(unstack e b)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom ontable(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom ontable(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']

>>>>  A* iteration 1692  <<<<

> Fringe size: 9979
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down c)', '(unstack c d)', '(stack c c)', '(pick-up c)', '(stack e c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 1693  <<<<

> Fringe size: 9981
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down c)', '(unstack c d)', '(stack c c)', '(pick-up c)', '(stack e d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1694  <<<<

> Fringe size: 9986
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down c)', '(unstack c d)', '(stack c c)', '(pick-up c)', '(stack e d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 1695  <<<<

> Fringe size: 9988
> First 20 nodes: (D:11,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down c)', '(unstack c d)', '(stack c c)', '(pick-up c)', '(stack e e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1696  <<<<

> Fringe size: 9993
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down c)', '(unstack c d)', '(stack c c)', '(pick-up c)', '(stack e e)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 1697  <<<<

> Fringe size: 9995
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down c)', '(unstack c d)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1698  <<<<

> Fringe size: 10000
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down c)', '(unstack c d)', '(stack c d)', '(pick-up c)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 1699  <<<<

> Fringe size: 10002
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down c)', '(unstack c d)', '(stack c d)', '(pick-up c)', '(stack e c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1700  <<<<

> Fringe size: 10007
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down c)', '(unstack c d)', '(stack c d)', '(pick-up c)', '(stack e c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 1701  <<<<

> Fringe size: 10009
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down c)', '(unstack c d)', '(stack c d)', '(pick-up c)', '(stack e d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1702  <<<<

> Fringe size: 10014
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down c)', '(unstack c d)', '(stack c d)', '(pick-up c)', '(stack e d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 1703  <<<<

> Fringe size: 10016
> First 20 nodes: (D:11,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down c)', '(unstack c d)', '(stack c d)', '(pick-up c)', '(stack e e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1704  <<<<

> Fringe size: 10021
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down c)', '(unstack c d)', '(stack c d)', '(pick-up c)', '(stack e e)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 1705  <<<<

> Fringe size: 10023
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down c)', '(unstack c d)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1706  <<<<

> Fringe size: 10028
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down c)', '(unstack c d)', '(stack c e)', '(pick-up c)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 1707  <<<<

> Fringe size: 10030
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down c)', '(unstack c d)', '(stack c e)', '(pick-up c)', '(stack e c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1708  <<<<

> Fringe size: 10035
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down c)', '(unstack c d)', '(stack c e)', '(pick-up c)', '(stack e c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 1709  <<<<

> Fringe size: 10037
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down c)', '(unstack c d)', '(stack c e)', '(pick-up c)', '(stack e d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1710  <<<<

> Fringe size: 10042
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down c)', '(unstack c d)', '(stack c e)', '(pick-up c)', '(stack e d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 1711  <<<<

> Fringe size: 10044
> First 20 nodes: (D:11,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down c)', '(unstack c d)', '(stack c e)', '(pick-up c)', '(stack e e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1712  <<<<

> Fringe size: 10049
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down c)', '(unstack c d)', '(stack c e)', '(pick-up c)', '(stack e e)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom on(e, c)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>, <Atom ontable(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>, <Atom on(e, d)>, <Atom ontable(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>, <Atom ontable(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom ontable(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom ontable(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom ontable(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom ontable(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom ontable(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom ontable(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom ontable(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom ontable(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']

>>>>  A* iteration 1713  <<<<

> Fringe size: 10051
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down c)', '(unstack c d)', '(stack e c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1714  <<<<

> Fringe size: 10056
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down c)', '(unstack c d)', '(stack e c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 1715  <<<<

> Fringe size: 10058
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down c)', '(unstack c d)', '(stack e c)', '(pick-up e)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1716  <<<<

> Fringe size: 10063
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down c)', '(unstack c d)', '(stack e c)', '(pick-up e)', '(stack c c)', '(pick-up c)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 1717  <<<<

> Fringe size: 10065
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down c)', '(unstack c d)', '(stack e c)', '(pick-up e)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1718  <<<<

> Fringe size: 10070
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down c)', '(unstack c d)', '(stack e c)', '(pick-up e)', '(stack c d)', '(pick-up c)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 1719  <<<<

> Fringe size: 10072
> First 20 nodes: (D:11,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down c)', '(unstack c d)', '(stack e c)', '(pick-up e)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1720  <<<<

> Fringe size: 10077
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down c)', '(unstack c d)', '(stack e c)', '(pick-up e)', '(stack c e)', '(pick-up c)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 1721  <<<<

> Fringe size: 10079
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down c)', '(unstack c d)', '(stack e d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1722  <<<<

> Fringe size: 10084
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down c)', '(unstack c d)', '(stack e d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 1723  <<<<

> Fringe size: 10086
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down c)', '(unstack c d)', '(stack e d)', '(pick-up e)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1724  <<<<

> Fringe size: 10091
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down c)', '(unstack c d)', '(stack e d)', '(pick-up e)', '(stack c c)', '(pick-up c)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 1725  <<<<

> Fringe size: 10093
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:8,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down c)', '(unstack c d)', '(stack e d)', '(pick-up e)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1726  <<<<

> Fringe size: 10098
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down c)', '(unstack c d)', '(stack e d)', '(pick-up e)', '(stack c d)', '(pick-up c)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 1727  <<<<

> Fringe size: 10100
> First 20 nodes: (D:11,C:2), (D:8,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down c)', '(unstack c d)', '(stack e d)', '(pick-up e)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1728  <<<<

> Fringe size: 10105
> First 20 nodes: (D:8,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down c)', '(unstack c d)', '(stack e d)', '(pick-up e)', '(stack c e)', '(pick-up c)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 1729  <<<<

> Fringe size: 10107
> First 20 nodes: (D:9,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down c)', '(unstack c d)', '(stack e e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1730  <<<<

> Fringe size: 10112
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down c)', '(unstack c d)', '(stack e e)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 1731  <<<<

> Fringe size: 10114
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down c)', '(unstack c d)', '(stack e e)', '(pick-up e)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1732  <<<<

> Fringe size: 10119
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down c)', '(unstack c d)', '(stack e e)', '(pick-up e)', '(stack c c)', '(pick-up c)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 1733  <<<<

> Fringe size: 10121
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down c)', '(unstack c d)', '(stack e e)', '(pick-up e)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom ontable(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom on(e, c)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>, <Atom ontable(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom ontable(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom ontable(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom ontable(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>, <Atom on(e, d)>, <Atom ontable(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom ontable(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom ontable(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom ontable(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>, <Atom ontable(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']

>>>>  A* iteration 1734  <<<<

> Fringe size: 10126
> First 20 nodes: (D:10,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down c)', '(unstack c d)', '(stack e e)', '(pick-up e)', '(stack c d)', '(pick-up c)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 1735  <<<<

> Fringe size: 10128
> First 20 nodes: (D:11,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down c)', '(unstack c d)', '(stack e e)', '(pick-up e)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1736  <<<<

> Fringe size: 10133
> First 20 nodes: (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down c)', '(unstack c d)', '(stack e e)', '(pick-up e)', '(stack c e)', '(pick-up c)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 1737  <<<<

> Fringe size: 10135
> First 20 nodes: (D:7,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=6
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down e)']
> Next lifted action: unstack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1738  <<<<

> Fringe size: 10149
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=7
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down e)', '(unstack c d)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=15

>>>>  A* iteration 1739  <<<<

> Fringe size: 10150
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down e)', '(unstack c d)', '(stack b c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 1740  <<<<

> Fringe size: 10165
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down e)', '(unstack c d)', '(stack b c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=16

>>>>  A* iteration 1741  <<<<

> Fringe size: 10166
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down e)', '(unstack c d)', '(stack b c)', '(pick-up e)', '(stack c b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 1742  <<<<

> Fringe size: 10167
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down e)', '(unstack c d)', '(stack b c)', '(pick-up e)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 1743  <<<<

> Fringe size: 10168
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down e)', '(unstack c d)', '(stack b c)', '(pick-up e)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 1744  <<<<

> Fringe size: 10169
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down e)', '(unstack c d)', '(stack b c)', '(pick-up e)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 1745  <<<<

> Fringe size: 10170
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down e)', '(unstack c d)', '(stack b c)', '(pick-up e)', '(stack d b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 1746  <<<<

> Fringe size: 10171
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down e)', '(unstack c d)', '(stack b c)', '(pick-up e)', '(stack d c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 1747  <<<<

> Fringe size: 10172
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down e)', '(unstack c d)', '(stack b c)', '(pick-up e)', '(stack d d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 1748  <<<<

> Fringe size: 10173
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down e)', '(unstack c d)', '(stack b c)', '(pick-up e)', '(stack d e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 1749  <<<<

> Fringe size: 10174
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down e)', '(unstack c d)', '(stack b d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 1750  <<<<

> Fringe size: 10189
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down e)', '(unstack c d)', '(stack b d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=16

>>>>  A* iteration 1751  <<<<

> Fringe size: 10190
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down e)', '(unstack c d)', '(stack b d)', '(pick-up e)', '(stack c b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 1752  <<<<

> Fringe size: 10191
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down e)', '(unstack c d)', '(stack b d)', '(pick-up e)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom ontable(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom ontable(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(unstack c d)', '(unstack c e)', '(unstack e b)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom on(c, b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom on(d, b)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom on(d, c)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom on(d, d)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom on(d, e)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom on(c, b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']

>>>>  A* iteration 1753  <<<<

> Fringe size: 10192
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down e)', '(unstack c d)', '(stack b d)', '(pick-up e)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 1754  <<<<

> Fringe size: 10193
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down e)', '(unstack c d)', '(stack b d)', '(pick-up e)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 1755  <<<<

> Fringe size: 10194
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down e)', '(unstack c d)', '(stack b d)', '(pick-up e)', '(stack d b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 1756  <<<<

> Fringe size: 10195
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down e)', '(unstack c d)', '(stack b d)', '(pick-up e)', '(stack d c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 1757  <<<<

> Fringe size: 10196
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down e)', '(unstack c d)', '(stack b d)', '(pick-up e)', '(stack d d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 1758  <<<<

> Fringe size: 10197
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down e)', '(unstack c d)', '(stack b d)', '(pick-up e)', '(stack d e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 1759  <<<<

> Fringe size: 10198
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down e)', '(unstack c d)', '(stack b e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 1760  <<<<

> Fringe size: 10199
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down e)', '(unstack c d)', '(stack c b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 1761  <<<<

> Fringe size: 10213
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down e)', '(unstack c d)', '(stack c b)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=15

>>>>  A* iteration 1762  <<<<

> Fringe size: 10214
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down e)', '(unstack c d)', '(stack c b)', '(pick-up e)', '(stack b c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 1763  <<<<

> Fringe size: 10215
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down e)', '(unstack c d)', '(stack c b)', '(pick-up e)', '(stack b d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 1764  <<<<

> Fringe size: 10216
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down e)', '(unstack c d)', '(stack c b)', '(pick-up e)', '(stack b e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 1765  <<<<

> Fringe size: 10217
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down e)', '(unstack c d)', '(stack c b)', '(pick-up e)', '(stack d b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 1766  <<<<

> Fringe size: 10218
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down e)', '(unstack c d)', '(stack c b)', '(pick-up e)', '(stack d c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 1767  <<<<

> Fringe size: 10219
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down e)', '(unstack c d)', '(stack c b)', '(pick-up e)', '(stack d d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 1768  <<<<

> Fringe size: 10220
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down e)', '(unstack c d)', '(stack c b)', '(pick-up e)', '(stack d e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 1769  <<<<

> Fringe size: 10221
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down e)', '(unstack c d)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 1770  <<<<

> Fringe size: 10235
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down e)', '(unstack c d)', '(stack c c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=15

>>>>  A* iteration 1771  <<<<

> Fringe size: 10236
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down e)', '(unstack c d)', '(stack c c)', '(pick-up e)', '(stack b c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 1772  <<<<

> Fringe size: 10237
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down e)', '(unstack c d)', '(stack c c)', '(pick-up e)', '(stack b d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom on(d, b)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(d, c)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom on(d, d)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom on(d, e)>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom handempty()>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(c, b)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom on(c, b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom on(c, b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom on(c, b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom on(c, b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom on(c, b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom on(d, b)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom on(c, b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(d, c)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom on(c, b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom on(d, d)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom on(c, b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom on(d, e)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']

>>>>  A* iteration 1773  <<<<

> Fringe size: 10238
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down e)', '(unstack c d)', '(stack c c)', '(pick-up e)', '(stack b e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 1774  <<<<

> Fringe size: 10239
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down e)', '(unstack c d)', '(stack c c)', '(pick-up e)', '(stack d b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 1775  <<<<

> Fringe size: 10240
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down e)', '(unstack c d)', '(stack c c)', '(pick-up e)', '(stack d c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 1776  <<<<

> Fringe size: 10241
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down e)', '(unstack c d)', '(stack c c)', '(pick-up e)', '(stack d d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 1777  <<<<

> Fringe size: 10242
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down e)', '(unstack c d)', '(stack c c)', '(pick-up e)', '(stack d e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 1778  <<<<

> Fringe size: 10243
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down e)', '(unstack c d)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 1779  <<<<

> Fringe size: 10257
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down e)', '(unstack c d)', '(stack c d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=15

>>>>  A* iteration 1780  <<<<

> Fringe size: 10258
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down e)', '(unstack c d)', '(stack c d)', '(pick-up e)', '(stack b c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 1781  <<<<

> Fringe size: 10259
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down e)', '(unstack c d)', '(stack c d)', '(pick-up e)', '(stack b d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 1782  <<<<

> Fringe size: 10260
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down e)', '(unstack c d)', '(stack c d)', '(pick-up e)', '(stack b e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 1783  <<<<

> Fringe size: 10261
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down e)', '(unstack c d)', '(stack c d)', '(pick-up e)', '(stack d b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 1784  <<<<

> Fringe size: 10262
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down e)', '(unstack c d)', '(stack c d)', '(pick-up e)', '(stack d c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 1785  <<<<

> Fringe size: 10263
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down e)', '(unstack c d)', '(stack c d)', '(pick-up e)', '(stack d d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 1786  <<<<

> Fringe size: 10264
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down e)', '(unstack c d)', '(stack c d)', '(pick-up e)', '(stack d e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 1787  <<<<

> Fringe size: 10265
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down e)', '(unstack c d)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 1788  <<<<

> Fringe size: 10266
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down e)', '(unstack c d)', '(stack d b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 1789  <<<<

> Fringe size: 10280
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down e)', '(unstack c d)', '(stack d b)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=15

>>>>  A* iteration 1790  <<<<

> Fringe size: 10281
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down e)', '(unstack c d)', '(stack d b)', '(pick-up e)', '(stack b c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 1791  <<<<

> Fringe size: 10282
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down e)', '(unstack c d)', '(stack d b)', '(pick-up e)', '(stack b d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 1792  <<<<

> Fringe size: 10283
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down e)', '(unstack c d)', '(stack d b)', '(pick-up e)', '(stack b e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom on(d, b)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(d, c)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom on(d, d)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom on(d, e)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom handempty()>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(d, b)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom on(d, c)>, <Atom handempty()>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom on(d, d)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom holding(d)>, <Atom on(c, d)>, <Atom on(d, e)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(d, b)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom on(d, b)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom on(d, b)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom on(d, b)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom on(d, b)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom on(c, b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom on(d, b)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']

>>>>  A* iteration 1793  <<<<

> Fringe size: 10284
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down e)', '(unstack c d)', '(stack d b)', '(pick-up e)', '(stack c b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 1794  <<<<

> Fringe size: 10285
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down e)', '(unstack c d)', '(stack d b)', '(pick-up e)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 1795  <<<<

> Fringe size: 10286
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down e)', '(unstack c d)', '(stack d b)', '(pick-up e)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 1796  <<<<

> Fringe size: 10287
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down e)', '(unstack c d)', '(stack d b)', '(pick-up e)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 1797  <<<<

> Fringe size: 10288
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down e)', '(unstack c d)', '(stack d d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 1798  <<<<

> Fringe size: 10302
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down e)', '(unstack c d)', '(stack d d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=15

>>>>  A* iteration 1799  <<<<

> Fringe size: 10303
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down e)', '(unstack c d)', '(stack d d)', '(pick-up e)', '(stack b c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 1800  <<<<

> Fringe size: 10304
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down e)', '(unstack c d)', '(stack d d)', '(pick-up e)', '(stack b d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 1801  <<<<

> Fringe size: 10305
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down e)', '(unstack c d)', '(stack d d)', '(pick-up e)', '(stack b e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 1802  <<<<

> Fringe size: 10306
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down e)', '(unstack c d)', '(stack d d)', '(pick-up e)', '(stack c b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 1803  <<<<

> Fringe size: 10307
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down e)', '(unstack c d)', '(stack d d)', '(pick-up e)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 1804  <<<<

> Fringe size: 10308
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down e)', '(unstack c d)', '(stack d d)', '(pick-up e)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 1805  <<<<

> Fringe size: 10309
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down e)', '(unstack c d)', '(stack d d)', '(pick-up e)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 1806  <<<<

> Fringe size: 10310
> First 20 nodes: (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down e)', '(unstack c d)', '(stack d e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 1807  <<<<

> Fringe size: 10311
> First 20 nodes: (D:9,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down e)', '(unstack c d)', '(stack d c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 1808  <<<<

> Fringe size: 10325
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down e)', '(unstack c d)', '(stack d c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=15

>>>>  A* iteration 1809  <<<<

> Fringe size: 10326
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down e)', '(unstack c d)', '(stack d c)', '(pick-up e)', '(stack b c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 1810  <<<<

> Fringe size: 10327
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down e)', '(unstack c d)', '(stack d c)', '(pick-up e)', '(stack b d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 1811  <<<<

> Fringe size: 10328
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down e)', '(unstack c d)', '(stack d c)', '(pick-up e)', '(stack b e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 1812  <<<<

> Fringe size: 10329
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down e)', '(unstack c d)', '(stack d c)', '(pick-up e)', '(stack c b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 1813  <<<<

> Fringe size: 10330
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down e)', '(unstack c d)', '(stack d c)', '(pick-up e)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom on(d, b)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom on(d, b)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom on(d, b)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom on(d, d)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom on(d, d)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom on(d, d)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom on(d, d)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom on(d, d)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom on(c, b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom on(d, d)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom on(d, d)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom on(d, d)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom on(d, d)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom holding(d)>, <Atom on(c, d)>, <Atom on(d, e)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom on(d, c)>, <Atom handempty()>, <Atom holding(d)>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(d, c)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom on(d, c)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(d, c)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(d, c)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom on(c, b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(d, c)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(d, c)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']

>>>>  A* iteration 1814  <<<<

> Fringe size: 10331
> First 20 nodes: (D:10,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down e)', '(unstack c d)', '(stack d c)', '(pick-up e)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 1815  <<<<

> Fringe size: 10332
> First 20 nodes: (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down e)', '(unstack c d)', '(stack d c)', '(pick-up e)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 1816  <<<<

> Fringe size: 10334
> First 20 nodes: (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=4
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack e d)']
> Next lifted action: unstack
> Repair set:
unstack,(holding ?y),effPos,1
put-down,(holding ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1817  <<<<

> Fringe size: 10336
> First 20 nodes: (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=5
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack e d)', '(unstack e b)']
> Next lifted action: put-down
> Repair set:
unstack,(holding ?y),effPos,1
put-down,(holding ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1818  <<<<

> Fringe size: 10339
> First 20 nodes: (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=6
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack e d)', '(unstack e b)', '(put-down b)']
> Next lifted action: unstack
> Repair set:
unstack,(holding ?y),effPos,1
put-down,(holding ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 1819  <<<<

> Fringe size: 10357
> First 20 nodes: (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3)

> Node instance:
> Depth=7
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack e d)', '(unstack e b)', '(put-down b)', '(unstack b a)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
put-down,(holding ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=19

>>>>  A* iteration 1820  <<<<

> Fringe size: 10359
> First 20 nodes: (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=6
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack e d)', '(unstack e b)', '(put-down c)']
> Next lifted action: unstack
> Repair set:
unstack,(holding ?y),effPos,1
put-down,(holding ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1821  <<<<

> Fringe size: 10361
> First 20 nodes: (D:7,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=6
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack e d)', '(unstack e b)', '(put-down e)']
> Next lifted action: unstack
> Repair set:
unstack,(holding ?y),effPos,1
put-down,(holding ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1822  <<<<

> Fringe size: 10375
> First 20 nodes: (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=7
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack e d)', '(unstack e b)', '(put-down e)', '(unstack e d)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
put-down,(holding ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=15

>>>>  A* iteration 1823  <<<<

> Fringe size: 10377
> First 20 nodes: (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3)

> Node instance:
> Depth=5
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack e d)', '(unstack e d)']
> Next lifted action: put-down
> Repair set:
unstack,(holding ?y),effPos,1
put-down,(holding ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1824  <<<<

> Fringe size: 10379
> First 20 nodes: (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=6
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack e d)', '(unstack e d)', '(put-down c)']
> Next lifted action: unstack
> Repair set:
unstack,(holding ?y),effPos,1
put-down,(holding ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1825  <<<<

> Fringe size: 10381
> First 20 nodes: (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=6
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack e d)', '(unstack e d)', '(put-down d)']
> Next lifted action: unstack
> Repair set:
unstack,(holding ?y),effPos,1
put-down,(holding ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1826  <<<<

> Fringe size: 10383
> First 20 nodes: (D:7,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=6
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack e d)', '(unstack e d)', '(put-down e)']
> Next lifted action: unstack
> Repair set:
unstack,(holding ?y),effPos,1
put-down,(holding ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1827  <<<<

> Fringe size: 10397
> First 20 nodes: (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=7
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack e d)', '(unstack e d)', '(put-down e)', '(unstack e b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
put-down,(holding ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=15

>>>>  A* iteration 1828  <<<<

> Fringe size: 10398
> First 20 nodes: (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=4
> Ground actions: ['(unstack c e)', '(put-down a)', '(pick-up a)', '(stack c c)']
> Next lifted action: unstack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 1829  <<<<

> Fringe size: 10398
> First 20 nodes: (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=5
> Ground actions: ['(unstack c e)', '(put-down a)', '(pick-up a)', '(stack c c)', '(unstack c c)']
> Next lifted action: put-down
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=1

>>>>  A* iteration 1830  <<<<

> Fringe size: 10399
> First 20 nodes: (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=6
> Ground actions: ['(unstack c e)', '(put-down a)', '(pick-up a)', '(stack c c)', '(unstack c c)', '(put-down c)']
> Next lifted action: unstack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 1831  <<<<

> Fringe size: 10400
> First 20 nodes: (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=4
> Ground actions: ['(unstack c e)', '(put-down a)', '(pick-up d)', '(stack c d)']
> Next lifted action: unstack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 1832  <<<<

> Fringe size: 10400
> First 20 nodes: (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=5
> Ground actions: ['(unstack c e)', '(put-down a)', '(pick-up d)', '(stack c d)', '(unstack c d)']
> Next lifted action: put-down
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=1

>>>>  A* iteration 1833  <<<<

> Fringe size: 10401
> First 20 nodes: (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=6
> Ground actions: ['(unstack c e)', '(put-down a)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down c)']
> Next lifted action: unstack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 1834  <<<<

> Fringe size: 10403
> First 20 nodes: (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=4
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)']
> Next lifted action: unstack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1835  <<<<

> Fringe size: 10407
> First 20 nodes: (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3)

> Node instance:
> Depth=5
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)']
> Next lifted action: put-down
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=5
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(d, c)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(d, c)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom holding(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(unstack c e)', '(unstack e b)', '(unstack e d)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(put-down b)', '(put-down c)', '(put-down e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom ontable(b)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(unstack b a)', '(unstack c e)', '(unstack e b)', '(unstack e d)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(e, d)>]
> Possible groundings:
['(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom ontable(c)>]
> Possible groundings:
['(unstack c e)', '(unstack e b)', '(unstack e d)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(unstack c e)', '(unstack e b)', '(unstack e d)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom holding(d)>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom holding(d)>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(put-down c)', '(put-down d)', '(put-down e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom holding(d)>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom ontable(c)>]
> Possible groundings:
['(unstack c e)', '(unstack e b)', '(unstack e d)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom holding(d)>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(unstack c e)', '(unstack e b)', '(unstack e d)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom holding(d)>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(unstack c e)', '(unstack e b)', '(unstack e d)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom holding(d)>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack d b)', '(stack d c)', '(stack d d)', '(stack d e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(unstack c c)', '(unstack c e)']
> Current state:
[<Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(put-down c)']
> Current state:
[<Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>, <Atom ontable(c)>]
> Possible groundings:
['(unstack c c)', '(unstack c e)']
> Current state:
[<Atom on(e, b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(unstack c d)', '(unstack c e)']
> Current state:
[<Atom on(e, b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(put-down c)']
> Current state:
[<Atom on(e, b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>, <Atom ontable(c)>]
> Possible groundings:
['(unstack c d)', '(unstack c e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(unstack c c)', '(unstack c e)', '(unstack e b)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(put-down a)', '(put-down b)', '(put-down c)', '(put-down d)', '(put-down e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]

>>>>  A* iteration 1836  <<<<

> Fringe size: 10409
> First 20 nodes: (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3)

> Node instance:
> Depth=6
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down a)']
> Next lifted action: unstack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1837  <<<<

> Fringe size: 10416
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=7
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down a)', '(unstack e b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 1838  <<<<

> Fringe size: 10418
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down a)', '(unstack e b)', '(stack c a)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1839  <<<<

> Fringe size: 10425
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down a)', '(unstack e b)', '(stack c a)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
unstack,(clear ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 1840  <<<<

> Fringe size: 10427
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down a)', '(unstack e b)', '(stack c a)', '(pick-up e)', '(stack e c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
unstack,(clear ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1841  <<<<

> Fringe size: 10429
> First 20 nodes: (D:9,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down a)', '(unstack e b)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1842  <<<<

> Fringe size: 10436
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down a)', '(unstack e b)', '(stack c c)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 1843  <<<<

> Fringe size: 10438
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down a)', '(unstack e b)', '(stack c c)', '(pick-up a)', '(stack e a)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1844  <<<<

> Fringe size: 10445
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down a)', '(unstack e b)', '(stack c c)', '(pick-up a)', '(stack e a)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 1845  <<<<

> Fringe size: 10447
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down a)', '(unstack e b)', '(stack c c)', '(pick-up a)', '(stack e c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1846  <<<<

> Fringe size: 10454
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down a)', '(unstack e b)', '(stack c c)', '(pick-up a)', '(stack e c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 1847  <<<<

> Fringe size: 10456
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down a)', '(unstack e b)', '(stack c c)', '(pick-up a)', '(stack e d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1848  <<<<

> Fringe size: 10463
> First 20 nodes: (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down a)', '(unstack e b)', '(stack c c)', '(pick-up a)', '(stack e d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 1849  <<<<

> Fringe size: 10465
> First 20 nodes: (D:11,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down a)', '(unstack e b)', '(stack c c)', '(pick-up a)', '(stack e e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1850  <<<<

> Fringe size: 10472
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down a)', '(unstack e b)', '(stack c c)', '(pick-up a)', '(stack e e)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 1851  <<<<

> Fringe size: 10479
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down a)', '(unstack e b)', '(stack c c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
unstack,(clear ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 1852  <<<<

> Fringe size: 10481
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down a)', '(unstack e b)', '(stack c c)', '(pick-up e)', '(stack e a)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
unstack,(clear ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1853  <<<<

> Fringe size: 10483
> First 20 nodes: (D:11,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down a)', '(unstack e b)', '(stack c c)', '(pick-up e)', '(stack e c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
unstack,(clear ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1854  <<<<

> Fringe size: 10490
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down a)', '(unstack e b)', '(stack c c)', '(pick-up e)', '(stack e c)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
unstack,(clear ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 1855  <<<<

> Fringe size: 10492
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down a)', '(unstack e b)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1856  <<<<

> Fringe size: 10499
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down a)', '(unstack e b)', '(stack c d)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8
> Possible groundings:
['(unstack c c)', '(unstack c e)', '(unstack e b)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, a)>, <Atom on(e, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]

>>>>  A* iteration 1857  <<<<

> Fringe size: 10501
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down a)', '(unstack e b)', '(stack c d)', '(pick-up a)', '(stack e a)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1858  <<<<

> Fringe size: 10508
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down a)', '(unstack e b)', '(stack c d)', '(pick-up a)', '(stack e a)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 1859  <<<<

> Fringe size: 10510
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down a)', '(unstack e b)', '(stack c d)', '(pick-up a)', '(stack e c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1860  <<<<

> Fringe size: 10517
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down a)', '(unstack e b)', '(stack c d)', '(pick-up a)', '(stack e c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 1861  <<<<

> Fringe size: 10519
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down a)', '(unstack e b)', '(stack c d)', '(pick-up a)', '(stack e d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1862  <<<<

> Fringe size: 10526
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down a)', '(unstack e b)', '(stack c d)', '(pick-up a)', '(stack e d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 1863  <<<<

> Fringe size: 10528
> First 20 nodes: (D:11,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down a)', '(unstack e b)', '(stack c d)', '(pick-up a)', '(stack e e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1864  <<<<

> Fringe size: 10535
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down a)', '(unstack e b)', '(stack c d)', '(pick-up a)', '(stack e e)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 1865  <<<<

> Fringe size: 10537
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down a)', '(unstack e b)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1866  <<<<

> Fringe size: 10544
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down a)', '(unstack e b)', '(stack c e)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 1867  <<<<

> Fringe size: 10546
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down a)', '(unstack e b)', '(stack c e)', '(pick-up a)', '(stack e a)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1868  <<<<

> Fringe size: 10553
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down a)', '(unstack e b)', '(stack c e)', '(pick-up a)', '(stack e a)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 1869  <<<<

> Fringe size: 10555
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down a)', '(unstack e b)', '(stack c e)', '(pick-up a)', '(stack e c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1870  <<<<

> Fringe size: 10562
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down a)', '(unstack e b)', '(stack c e)', '(pick-up a)', '(stack e c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 1871  <<<<

> Fringe size: 10564
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down a)', '(unstack e b)', '(stack c e)', '(pick-up a)', '(stack e d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1872  <<<<

> Fringe size: 10571
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down a)', '(unstack e b)', '(stack c e)', '(pick-up a)', '(stack e d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 1873  <<<<

> Fringe size: 10573
> First 20 nodes: (D:11,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down a)', '(unstack e b)', '(stack c e)', '(pick-up a)', '(stack e e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1874  <<<<

> Fringe size: 10580
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down a)', '(unstack e b)', '(stack c e)', '(pick-up a)', '(stack e e)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 1875  <<<<

> Fringe size: 10582
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down a)', '(unstack e b)', '(stack e a)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1876  <<<<

> Fringe size: 10589
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down a)', '(unstack e b)', '(stack e a)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 1877  <<<<

> Fringe size: 10591
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down a)', '(unstack e b)', '(stack e a)', '(pick-up e)', '(stack c a)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom on(e, a)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom on(e, c)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>, <Atom on(e, d)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, a)>, <Atom on(c, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']

>>>>  A* iteration 1878  <<<<

> Fringe size: 10593
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down a)', '(unstack e b)', '(stack e a)', '(pick-up e)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1879  <<<<

> Fringe size: 10595
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down a)', '(unstack e b)', '(stack e a)', '(pick-up e)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1880  <<<<

> Fringe size: 10597
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down a)', '(unstack e b)', '(stack e a)', '(pick-up e)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1881  <<<<

> Fringe size: 10599
> First 20 nodes: (D:9,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down a)', '(unstack e b)', '(stack e c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1882  <<<<

> Fringe size: 10606
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down a)', '(unstack e b)', '(stack e c)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 1883  <<<<

> Fringe size: 10608
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down a)', '(unstack e b)', '(stack e c)', '(pick-up a)', '(stack c a)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1884  <<<<

> Fringe size: 10615
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down a)', '(unstack e b)', '(stack e c)', '(pick-up a)', '(stack c a)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 1885  <<<<

> Fringe size: 10617
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down a)', '(unstack e b)', '(stack e c)', '(pick-up a)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1886  <<<<

> Fringe size: 10624
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down a)', '(unstack e b)', '(stack e c)', '(pick-up a)', '(stack c c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 1887  <<<<

> Fringe size: 10626
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down a)', '(unstack e b)', '(stack e c)', '(pick-up a)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1888  <<<<

> Fringe size: 10633
> First 20 nodes: (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down a)', '(unstack e b)', '(stack e c)', '(pick-up a)', '(stack c d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 1889  <<<<

> Fringe size: 10635
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down a)', '(unstack e b)', '(stack e c)', '(pick-up a)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1890  <<<<

> Fringe size: 10642
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down a)', '(unstack e b)', '(stack e c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 1891  <<<<

> Fringe size: 10644
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down a)', '(unstack e b)', '(stack e c)', '(pick-up e)', '(stack c a)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1892  <<<<

> Fringe size: 10646
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down a)', '(unstack e b)', '(stack e c)', '(pick-up e)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1893  <<<<

> Fringe size: 10653
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down a)', '(unstack e b)', '(stack e c)', '(pick-up e)', '(stack c c)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 1894  <<<<

> Fringe size: 10655
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down a)', '(unstack e b)', '(stack e c)', '(pick-up e)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1895  <<<<

> Fringe size: 10662
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down a)', '(unstack e b)', '(stack e c)', '(pick-up e)', '(stack c d)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 1896  <<<<

> Fringe size: 10664
> First 20 nodes: (D:11,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down a)', '(unstack e b)', '(stack e c)', '(pick-up e)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1897  <<<<

> Fringe size: 10671
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down a)', '(unstack e b)', '(stack e c)', '(pick-up e)', '(stack c e)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 1898  <<<<

> Fringe size: 10673
> First 20 nodes: (D:9,C:2), (D:9,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down a)', '(unstack e b)', '(stack e d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, c)>, <Atom on(c, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom on(e, c)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom on(c, a)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom on(e, c)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, c)>, <Atom on(c, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom on(e, c)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']

>>>>  A* iteration 1899  <<<<

> Fringe size: 10680
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down a)', '(unstack e b)', '(stack e d)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 1900  <<<<

> Fringe size: 10682
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down a)', '(unstack e b)', '(stack e d)', '(pick-up a)', '(stack c a)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1901  <<<<

> Fringe size: 10689
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down a)', '(unstack e b)', '(stack e d)', '(pick-up a)', '(stack c a)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 1902  <<<<

> Fringe size: 10691
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down a)', '(unstack e b)', '(stack e d)', '(pick-up a)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1903  <<<<

> Fringe size: 10698
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down a)', '(unstack e b)', '(stack e d)', '(pick-up a)', '(stack c c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 1904  <<<<

> Fringe size: 10700
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down a)', '(unstack e b)', '(stack e d)', '(pick-up a)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1905  <<<<

> Fringe size: 10707
> First 20 nodes: (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down a)', '(unstack e b)', '(stack e d)', '(pick-up a)', '(stack c d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 1906  <<<<

> Fringe size: 10709
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down a)', '(unstack e b)', '(stack e d)', '(pick-up a)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1907  <<<<

> Fringe size: 10716
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down a)', '(unstack e b)', '(stack e d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 1908  <<<<

> Fringe size: 10718
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down a)', '(unstack e b)', '(stack e d)', '(pick-up e)', '(stack c a)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1909  <<<<

> Fringe size: 10720
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down a)', '(unstack e b)', '(stack e d)', '(pick-up e)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1910  <<<<

> Fringe size: 10727
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down a)', '(unstack e b)', '(stack e d)', '(pick-up e)', '(stack c c)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 1911  <<<<

> Fringe size: 10729
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down a)', '(unstack e b)', '(stack e d)', '(pick-up e)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1912  <<<<

> Fringe size: 10736
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down a)', '(unstack e b)', '(stack e d)', '(pick-up e)', '(stack c d)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 1913  <<<<

> Fringe size: 10738
> First 20 nodes: (D:11,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down a)', '(unstack e b)', '(stack e d)', '(pick-up e)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1914  <<<<

> Fringe size: 10745
> First 20 nodes: (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down a)', '(unstack e b)', '(stack e d)', '(pick-up e)', '(stack c e)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 1915  <<<<

> Fringe size: 10747
> First 20 nodes: (D:9,C:2), (D:9,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down a)', '(unstack e b)', '(stack e e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1916  <<<<

> Fringe size: 10754
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down a)', '(unstack e b)', '(stack e e)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 1917  <<<<

> Fringe size: 10756
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down a)', '(unstack e b)', '(stack e e)', '(pick-up a)', '(stack c a)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1918  <<<<

> Fringe size: 10763
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down a)', '(unstack e b)', '(stack e e)', '(pick-up a)', '(stack c a)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom on(c, a)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(e, d)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>, <Atom on(e, d)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>, <Atom on(e, d)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, e)>, <Atom on(c, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom on(c, a)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']

>>>>  A* iteration 1919  <<<<

> Fringe size: 10765
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down a)', '(unstack e b)', '(stack e e)', '(pick-up a)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1920  <<<<

> Fringe size: 10772
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down a)', '(unstack e b)', '(stack e e)', '(pick-up a)', '(stack c c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 1921  <<<<

> Fringe size: 10774
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:9,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down a)', '(unstack e b)', '(stack e e)', '(pick-up a)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1922  <<<<

> Fringe size: 10781
> First 20 nodes: (D:10,C:2), (D:9,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down a)', '(unstack e b)', '(stack e e)', '(pick-up a)', '(stack c d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 1923  <<<<

> Fringe size: 10783
> First 20 nodes: (D:9,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down a)', '(unstack e b)', '(stack e e)', '(pick-up a)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1924  <<<<

> Fringe size: 10790
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down a)', '(unstack e b)', '(stack e e)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 1925  <<<<

> Fringe size: 10792
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down a)', '(unstack e b)', '(stack e e)', '(pick-up e)', '(stack c a)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1926  <<<<

> Fringe size: 10794
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down a)', '(unstack e b)', '(stack e e)', '(pick-up e)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1927  <<<<

> Fringe size: 10801
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down a)', '(unstack e b)', '(stack e e)', '(pick-up e)', '(stack c c)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 1928  <<<<

> Fringe size: 10803
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down a)', '(unstack e b)', '(stack e e)', '(pick-up e)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1929  <<<<

> Fringe size: 10810
> First 20 nodes: (D:10,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down a)', '(unstack e b)', '(stack e e)', '(pick-up e)', '(stack c d)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 1930  <<<<

> Fringe size: 10812
> First 20 nodes: (D:11,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down a)', '(unstack e b)', '(stack e e)', '(pick-up e)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1931  <<<<

> Fringe size: 10819
> First 20 nodes: (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down a)', '(unstack e b)', '(stack e e)', '(pick-up e)', '(stack c e)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 1932  <<<<

> Fringe size: 10822
> First 20 nodes: (D:7,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3)

> Node instance:
> Depth=6
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)']
> Next lifted action: unstack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 1933  <<<<

> Fringe size: 10829
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=7
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 1934  <<<<

> Fringe size: 10831
> First 20 nodes: (D:9,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack b b)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1935  <<<<

> Fringe size: 10838
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack b b)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 1936  <<<<

> Fringe size: 10840
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack b b)', '(pick-up b)', '(stack c b)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1937  <<<<

> Fringe size: 10847
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack b b)', '(pick-up b)', '(stack c b)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 1938  <<<<

> Fringe size: 10849
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack b b)', '(pick-up b)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, e)>, <Atom on(c, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom ontable(b)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(unstack b a)', '(unstack c c)', '(unstack c e)', '(unstack e b)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom ontable(b)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom ontable(b)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom on(c, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(c, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']

>>>>  A* iteration 1939  <<<<

> Fringe size: 10856
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack b b)', '(pick-up b)', '(stack c c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 1940  <<<<

> Fringe size: 10858
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack b b)', '(pick-up b)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1941  <<<<

> Fringe size: 10865
> First 20 nodes: (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack b b)', '(pick-up b)', '(stack c d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 1942  <<<<

> Fringe size: 10867
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack b b)', '(pick-up b)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1943  <<<<

> Fringe size: 10874
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack b b)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 1944  <<<<

> Fringe size: 10876
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack b b)', '(pick-up e)', '(stack c b)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1945  <<<<

> Fringe size: 10878
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack b b)', '(pick-up e)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1946  <<<<

> Fringe size: 10885
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack b b)', '(pick-up e)', '(stack c c)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 1947  <<<<

> Fringe size: 10887
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack b b)', '(pick-up e)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1948  <<<<

> Fringe size: 10894
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack b b)', '(pick-up e)', '(stack c d)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 1949  <<<<

> Fringe size: 10896
> First 20 nodes: (D:11,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack b b)', '(pick-up e)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1950  <<<<

> Fringe size: 10903
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack b b)', '(pick-up e)', '(stack c e)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 1951  <<<<

> Fringe size: 10905
> First 20 nodes: (D:9,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack b c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1952  <<<<

> Fringe size: 10912
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack b c)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 1953  <<<<

> Fringe size: 10914
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack b c)', '(pick-up b)', '(stack c b)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1954  <<<<

> Fringe size: 10921
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack b c)', '(pick-up b)', '(stack c b)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 1955  <<<<

> Fringe size: 10923
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack b c)', '(pick-up b)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1956  <<<<

> Fringe size: 10930
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack b c)', '(pick-up b)', '(stack c c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 1957  <<<<

> Fringe size: 10932
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack b c)', '(pick-up b)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom on(c, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom ontable(b)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom on(c, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(c, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']

>>>>  A* iteration 1958  <<<<

> Fringe size: 10939
> First 20 nodes: (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack b c)', '(pick-up b)', '(stack c d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 1959  <<<<

> Fringe size: 10941
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack b c)', '(pick-up b)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1960  <<<<

> Fringe size: 10948
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack b c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 1961  <<<<

> Fringe size: 10950
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack b c)', '(pick-up e)', '(stack c b)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1962  <<<<

> Fringe size: 10952
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack b c)', '(pick-up e)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1963  <<<<

> Fringe size: 10959
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack b c)', '(pick-up e)', '(stack c c)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 1964  <<<<

> Fringe size: 10961
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack b c)', '(pick-up e)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1965  <<<<

> Fringe size: 10968
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack b c)', '(pick-up e)', '(stack c d)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 1966  <<<<

> Fringe size: 10970
> First 20 nodes: (D:11,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack b c)', '(pick-up e)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1967  <<<<

> Fringe size: 10977
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack b c)', '(pick-up e)', '(stack c e)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 1968  <<<<

> Fringe size: 10979
> First 20 nodes: (D:9,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack b d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1969  <<<<

> Fringe size: 10986
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack b d)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 1970  <<<<

> Fringe size: 10988
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack b d)', '(pick-up b)', '(stack c b)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1971  <<<<

> Fringe size: 10995
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack b d)', '(pick-up b)', '(stack c b)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 1972  <<<<

> Fringe size: 10997
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack b d)', '(pick-up b)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1973  <<<<

> Fringe size: 11004
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack b d)', '(pick-up b)', '(stack c c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 1974  <<<<

> Fringe size: 11006
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack b d)', '(pick-up b)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1975  <<<<

> Fringe size: 11013
> First 20 nodes: (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack b d)', '(pick-up b)', '(stack c d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 1976  <<<<

> Fringe size: 11015
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack b d)', '(pick-up b)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom on(c, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom ontable(b)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom on(c, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(c, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']

>>>>  A* iteration 1977  <<<<

> Fringe size: 11022
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack b d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 1978  <<<<

> Fringe size: 11024
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack b d)', '(pick-up e)', '(stack c b)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1979  <<<<

> Fringe size: 11026
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack b d)', '(pick-up e)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1980  <<<<

> Fringe size: 11033
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack b d)', '(pick-up e)', '(stack c c)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 1981  <<<<

> Fringe size: 11035
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack b d)', '(pick-up e)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1982  <<<<

> Fringe size: 11042
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack b d)', '(pick-up e)', '(stack c d)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 1983  <<<<

> Fringe size: 11044
> First 20 nodes: (D:11,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack b d)', '(pick-up e)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1984  <<<<

> Fringe size: 11051
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack b d)', '(pick-up e)', '(stack c e)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 1985  <<<<

> Fringe size: 11053
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack b e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1986  <<<<

> Fringe size: 11060
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack b e)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 1987  <<<<

> Fringe size: 11062
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack b e)', '(pick-up b)', '(stack c b)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1988  <<<<

> Fringe size: 11064
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack b e)', '(pick-up b)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1989  <<<<

> Fringe size: 11066
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack b e)', '(pick-up b)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1990  <<<<

> Fringe size: 11068
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack b e)', '(pick-up b)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1991  <<<<

> Fringe size: 11070
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack c b)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1992  <<<<

> Fringe size: 11077
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack c b)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 1993  <<<<

> Fringe size: 11079
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack c b)', '(pick-up e)', '(stack b b)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1994  <<<<

> Fringe size: 11086
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack c b)', '(pick-up e)', '(stack b b)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 1995  <<<<

> Fringe size: 11088
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack c b)', '(pick-up e)', '(stack b c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom on(c, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom ontable(b)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom on(c, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom ontable(b)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, b)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(c, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom on(c, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(c, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom on(c, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(c, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]

>>>>  A* iteration 1996  <<<<

> Fringe size: 11095
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack c b)', '(pick-up e)', '(stack b c)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 1997  <<<<

> Fringe size: 11097
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack c b)', '(pick-up e)', '(stack b d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 1998  <<<<

> Fringe size: 11104
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack c b)', '(pick-up e)', '(stack b d)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 1999  <<<<

> Fringe size: 11106
> First 20 nodes: (D:11,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack c b)', '(pick-up e)', '(stack b e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2000  <<<<

> Fringe size: 11113
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack c b)', '(pick-up e)', '(stack b e)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 2001  <<<<

> Fringe size: 11115
> First 20 nodes: (D:9,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2002  <<<<

> Fringe size: 11122
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack c c)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
unstack,(clear ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 2003  <<<<

> Fringe size: 11124
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack c c)', '(pick-up b)', '(stack b c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
unstack,(clear ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2004  <<<<

> Fringe size: 11131
> First 20 nodes: (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack c c)', '(pick-up b)', '(stack b c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
unstack,(clear ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 2005  <<<<

> Fringe size: 11133
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack c c)', '(pick-up b)', '(stack b e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
unstack,(clear ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2006  <<<<

> Fringe size: 11140
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack c c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 2007  <<<<

> Fringe size: 11142
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack c c)', '(pick-up e)', '(stack b b)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2008  <<<<

> Fringe size: 11149
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack c c)', '(pick-up e)', '(stack b b)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 2009  <<<<

> Fringe size: 11151
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack c c)', '(pick-up e)', '(stack b c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2010  <<<<

> Fringe size: 11158
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack c c)', '(pick-up e)', '(stack b c)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 2011  <<<<

> Fringe size: 11160
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack c c)', '(pick-up e)', '(stack b d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2012  <<<<

> Fringe size: 11167
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack c c)', '(pick-up e)', '(stack b d)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 2013  <<<<

> Fringe size: 11169
> First 20 nodes: (D:11,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack c c)', '(pick-up e)', '(stack b e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2014  <<<<

> Fringe size: 11176
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack c c)', '(pick-up e)', '(stack b e)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 2015  <<<<

> Fringe size: 11178
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom on(c, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(c, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom on(c, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(c, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom ontable(b)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom ontable(b)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom ontable(b)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom ontable(b)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom ontable(b)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom ontable(b)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom ontable(b)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom ontable(b)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom ontable(b)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom ontable(b)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']

>>>>  A* iteration 2016  <<<<

> Fringe size: 11185
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack c d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 2017  <<<<

> Fringe size: 11187
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack c d)', '(pick-up e)', '(stack b b)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2018  <<<<

> Fringe size: 11194
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack c d)', '(pick-up e)', '(stack b b)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 2019  <<<<

> Fringe size: 11196
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack c d)', '(pick-up e)', '(stack b c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2020  <<<<

> Fringe size: 11203
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack c d)', '(pick-up e)', '(stack b c)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 2021  <<<<

> Fringe size: 11205
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack c d)', '(pick-up e)', '(stack b d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2022  <<<<

> Fringe size: 11212
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack c d)', '(pick-up e)', '(stack b d)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 2023  <<<<

> Fringe size: 11214
> First 20 nodes: (D:11,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack c d)', '(pick-up e)', '(stack b e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2024  <<<<

> Fringe size: 11221
> First 20 nodes: (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack c d)', '(pick-up e)', '(stack b e)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 2025  <<<<

> Fringe size: 11223
> First 20 nodes: (D:9,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2026  <<<<

> Fringe size: 11230
> First 20 nodes: (D:10,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack c e)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
unstack,(clear ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 2027  <<<<

> Fringe size: 11232
> First 20 nodes: (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack c e)', '(pick-up b)', '(stack b c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
unstack,(clear ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2028  <<<<

> Fringe size: 11239
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=7
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack e b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 2029  <<<<

> Fringe size: 11241
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack e b)', '(stack c b)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2030  <<<<

> Fringe size: 11248
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack e b)', '(stack c b)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
unstack,(clear ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 2031  <<<<

> Fringe size: 11250
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack e b)', '(stack c b)', '(pick-up e)', '(stack e c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
unstack,(clear ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2032  <<<<

> Fringe size: 11252
> First 20 nodes: (D:9,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack e b)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2033  <<<<

> Fringe size: 11259
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack e b)', '(stack c c)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 2034  <<<<

> Fringe size: 11261
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack e b)', '(stack c c)', '(pick-up b)', '(stack e b)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom ontable(b)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom ontable(b)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom ontable(b)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom ontable(b)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom holding(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom ontable(b)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom holding(e)>, <Atom on(c, b)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, b)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, b)>, <Atom on(b, a)>, <Atom on(e, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom ontable(b)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom holding(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom ontable(b)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom holding(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom ontable(b)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom holding(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom ontable(b)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom holding(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]

>>>>  A* iteration 2035  <<<<

> Fringe size: 11268
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack e b)', '(stack c c)', '(pick-up b)', '(stack e b)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 2036  <<<<

> Fringe size: 11270
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack e b)', '(stack c c)', '(pick-up b)', '(stack e c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2037  <<<<

> Fringe size: 11277
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack e b)', '(stack c c)', '(pick-up b)', '(stack e c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 2038  <<<<

> Fringe size: 11279
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack e b)', '(stack c c)', '(pick-up b)', '(stack e d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2039  <<<<

> Fringe size: 11286
> First 20 nodes: (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack e b)', '(stack c c)', '(pick-up b)', '(stack e d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 2040  <<<<

> Fringe size: 11288
> First 20 nodes: (D:11,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack e b)', '(stack c c)', '(pick-up b)', '(stack e e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2041  <<<<

> Fringe size: 11295
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack e b)', '(stack c c)', '(pick-up b)', '(stack e e)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 2042  <<<<

> Fringe size: 11302
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack e b)', '(stack c c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
unstack,(clear ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 2043  <<<<

> Fringe size: 11304
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack e b)', '(stack c c)', '(pick-up e)', '(stack e b)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
unstack,(clear ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2044  <<<<

> Fringe size: 11306
> First 20 nodes: (D:11,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack e b)', '(stack c c)', '(pick-up e)', '(stack e c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
unstack,(clear ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2045  <<<<

> Fringe size: 11313
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack e b)', '(stack c c)', '(pick-up e)', '(stack e c)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
unstack,(clear ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 2046  <<<<

> Fringe size: 11315
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack e b)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2047  <<<<

> Fringe size: 11322
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack e b)', '(stack c d)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 2048  <<<<

> Fringe size: 11324
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack e b)', '(stack c d)', '(pick-up b)', '(stack e b)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2049  <<<<

> Fringe size: 11331
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack e b)', '(stack c d)', '(pick-up b)', '(stack e b)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 2050  <<<<

> Fringe size: 11333
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack e b)', '(stack c d)', '(pick-up b)', '(stack e c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2051  <<<<

> Fringe size: 11340
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack e b)', '(stack c d)', '(pick-up b)', '(stack e c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 2052  <<<<

> Fringe size: 11342
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack e b)', '(stack c d)', '(pick-up b)', '(stack e d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2053  <<<<

> Fringe size: 11349
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack e b)', '(stack c d)', '(pick-up b)', '(stack e d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 2054  <<<<

> Fringe size: 11351
> First 20 nodes: (D:11,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack e b)', '(stack c d)', '(pick-up b)', '(stack e e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3
> Possible groundings:
['(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom ontable(b)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom holding(e)>, <Atom on(e, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom ontable(b)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom holding(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(e, d)>]
> Possible groundings:
['(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom ontable(b)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom holding(e)>, <Atom on(e, e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom ontable(b)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom holding(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom ontable(b)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom holding(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom ontable(b)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom holding(e)>, <Atom on(e, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom ontable(b)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom holding(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>, <Atom on(e, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>, <Atom on(e, d)>]
> Possible groundings:
['(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']

>>>>  A* iteration 2055  <<<<

> Fringe size: 11358
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack e b)', '(stack c d)', '(pick-up b)', '(stack e e)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 2056  <<<<

> Fringe size: 11360
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack e b)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2057  <<<<

> Fringe size: 11367
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack e b)', '(stack c e)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 2058  <<<<

> Fringe size: 11369
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack e b)', '(stack c e)', '(pick-up b)', '(stack e b)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2059  <<<<

> Fringe size: 11376
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack e b)', '(stack c e)', '(pick-up b)', '(stack e b)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 2060  <<<<

> Fringe size: 11378
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack e b)', '(stack c e)', '(pick-up b)', '(stack e c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2061  <<<<

> Fringe size: 11385
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack e b)', '(stack c e)', '(pick-up b)', '(stack e c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 2062  <<<<

> Fringe size: 11387
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack e b)', '(stack c e)', '(pick-up b)', '(stack e d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2063  <<<<

> Fringe size: 11394
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack e b)', '(stack c e)', '(pick-up b)', '(stack e d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 2064  <<<<

> Fringe size: 11396
> First 20 nodes: (D:11,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack e b)', '(stack c e)', '(pick-up b)', '(stack e e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2065  <<<<

> Fringe size: 11403
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack e b)', '(stack c e)', '(pick-up b)', '(stack e e)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 2066  <<<<

> Fringe size: 11405
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack e b)', '(stack e b)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2067  <<<<

> Fringe size: 11412
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack e b)', '(stack e b)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 2068  <<<<

> Fringe size: 11414
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack e b)', '(stack e b)', '(pick-up e)', '(stack c b)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2069  <<<<

> Fringe size: 11416
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack e b)', '(stack e b)', '(pick-up e)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2070  <<<<

> Fringe size: 11418
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack e b)', '(stack e b)', '(pick-up e)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2071  <<<<

> Fringe size: 11420
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack e b)', '(stack e b)', '(pick-up e)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2072  <<<<

> Fringe size: 11422
> First 20 nodes: (D:9,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack e b)', '(stack e c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2073  <<<<

> Fringe size: 11429
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack e b)', '(stack e c)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 2074  <<<<

> Fringe size: 11431
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack e b)', '(stack e c)', '(pick-up b)', '(stack c b)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom ontable(b)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom holding(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom ontable(b)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom holding(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom ontable(b)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom holding(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom ontable(b)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom holding(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom ontable(b)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom holding(e)>, <Atom on(e, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom ontable(b)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom holding(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(e, d)>]
> Possible groundings:
['(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom ontable(b)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom holding(e)>, <Atom on(e, e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom ontable(b)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom holding(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom ontable(b)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom holding(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom ontable(b)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom holding(e)>, <Atom on(c, b)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom ontable(b)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom holding(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom ontable(b)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom holding(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom ontable(b)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom holding(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom ontable(b)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom holding(e)>, <Atom on(e, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, b)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']

>>>>  A* iteration 2075  <<<<

> Fringe size: 11438
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack e b)', '(stack e c)', '(pick-up b)', '(stack c b)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 2076  <<<<

> Fringe size: 11440
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack e b)', '(stack e c)', '(pick-up b)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2077  <<<<

> Fringe size: 11447
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack e b)', '(stack e c)', '(pick-up b)', '(stack c c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 2078  <<<<

> Fringe size: 11449
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack e b)', '(stack e c)', '(pick-up b)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2079  <<<<

> Fringe size: 11456
> First 20 nodes: (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack e b)', '(stack e c)', '(pick-up b)', '(stack c d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 2080  <<<<

> Fringe size: 11458
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack e b)', '(stack e c)', '(pick-up b)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2081  <<<<

> Fringe size: 11465
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack e b)', '(stack e c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 2082  <<<<

> Fringe size: 11467
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack e b)', '(stack e c)', '(pick-up e)', '(stack c b)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2083  <<<<

> Fringe size: 11469
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack e b)', '(stack e c)', '(pick-up e)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2084  <<<<

> Fringe size: 11476
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack e b)', '(stack e c)', '(pick-up e)', '(stack c c)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 2085  <<<<

> Fringe size: 11478
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack e b)', '(stack e c)', '(pick-up e)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2086  <<<<

> Fringe size: 11485
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack e b)', '(stack e c)', '(pick-up e)', '(stack c d)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 2087  <<<<

> Fringe size: 11487
> First 20 nodes: (D:11,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack e b)', '(stack e c)', '(pick-up e)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2088  <<<<

> Fringe size: 11494
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack e b)', '(stack e c)', '(pick-up e)', '(stack c e)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 2089  <<<<

> Fringe size: 11496
> First 20 nodes: (D:9,C:2), (D:9,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack e b)', '(stack e d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2090  <<<<

> Fringe size: 11503
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack e b)', '(stack e d)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 2091  <<<<

> Fringe size: 11505
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack e b)', '(stack e d)', '(pick-up b)', '(stack c b)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2092  <<<<

> Fringe size: 11512
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack e b)', '(stack e d)', '(pick-up b)', '(stack c b)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 2093  <<<<

> Fringe size: 11514
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack e b)', '(stack e d)', '(pick-up b)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, b)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, b)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom ontable(b)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom holding(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(e, d)>]
> Possible groundings:
['(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, b)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(e, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, b)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(e, d)>]
> Possible groundings:
['(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(e, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']

>>>>  A* iteration 2094  <<<<

> Fringe size: 11521
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack e b)', '(stack e d)', '(pick-up b)', '(stack c c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 2095  <<<<

> Fringe size: 11523
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack e b)', '(stack e d)', '(pick-up b)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2096  <<<<

> Fringe size: 11530
> First 20 nodes: (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack e b)', '(stack e d)', '(pick-up b)', '(stack c d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 2097  <<<<

> Fringe size: 11532
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack e b)', '(stack e d)', '(pick-up b)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2098  <<<<

> Fringe size: 11539
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack e b)', '(stack e d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 2099  <<<<

> Fringe size: 11541
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack e b)', '(stack e d)', '(pick-up e)', '(stack c b)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2100  <<<<

> Fringe size: 11543
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack e b)', '(stack e d)', '(pick-up e)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2101  <<<<

> Fringe size: 11550
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack e b)', '(stack e d)', '(pick-up e)', '(stack c c)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 2102  <<<<

> Fringe size: 11552
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack e b)', '(stack e d)', '(pick-up e)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2103  <<<<

> Fringe size: 11559
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack e b)', '(stack e d)', '(pick-up e)', '(stack c d)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 2104  <<<<

> Fringe size: 11561
> First 20 nodes: (D:11,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack e b)', '(stack e d)', '(pick-up e)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2105  <<<<

> Fringe size: 11568
> First 20 nodes: (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack e b)', '(stack e d)', '(pick-up e)', '(stack c e)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 2106  <<<<

> Fringe size: 11570
> First 20 nodes: (D:9,C:2), (D:9,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack e b)', '(stack e e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2107  <<<<

> Fringe size: 11577
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack e b)', '(stack e e)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 2108  <<<<

> Fringe size: 11579
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack e b)', '(stack e e)', '(pick-up b)', '(stack c b)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2109  <<<<

> Fringe size: 11586
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack e b)', '(stack e e)', '(pick-up b)', '(stack c b)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 2110  <<<<

> Fringe size: 11588
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack e b)', '(stack e e)', '(pick-up b)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2111  <<<<

> Fringe size: 11595
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack e b)', '(stack e e)', '(pick-up b)', '(stack c c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 2112  <<<<

> Fringe size: 11597
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:9,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack e b)', '(stack e e)', '(pick-up b)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(e, d)>]
> Possible groundings:
['(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>, <Atom on(e, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>, <Atom on(e, d)>]
> Possible groundings:
['(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(e, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(e, d)>]
> Possible groundings:
['(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, b)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(e, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(e, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(e, d)>]
> Possible groundings:
['(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>, <Atom on(e, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>, <Atom on(e, d)>]
> Possible groundings:
['(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(e, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(e, d)>]
> Possible groundings:
['(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom ontable(b)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom holding(e)>, <Atom on(e, e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, b)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, b)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']

>>>>  A* iteration 2113  <<<<

> Fringe size: 11604
> First 20 nodes: (D:10,C:2), (D:9,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack e b)', '(stack e e)', '(pick-up b)', '(stack c d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 2114  <<<<

> Fringe size: 11606
> First 20 nodes: (D:9,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack e b)', '(stack e e)', '(pick-up b)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2115  <<<<

> Fringe size: 11613
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack e b)', '(stack e e)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 2116  <<<<

> Fringe size: 11615
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack e b)', '(stack e e)', '(pick-up e)', '(stack c b)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2117  <<<<

> Fringe size: 11617
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack e b)', '(stack e e)', '(pick-up e)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2118  <<<<

> Fringe size: 11624
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack e b)', '(stack e e)', '(pick-up e)', '(stack c c)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 2119  <<<<

> Fringe size: 11626
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack e b)', '(stack e e)', '(pick-up e)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2120  <<<<

> Fringe size: 11633
> First 20 nodes: (D:10,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack e b)', '(stack e e)', '(pick-up e)', '(stack c d)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 2121  <<<<

> Fringe size: 11635
> First 20 nodes: (D:11,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack e b)', '(stack e e)', '(pick-up e)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2122  <<<<

> Fringe size: 11642
> First 20 nodes: (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack e b)', '(stack e e)', '(pick-up e)', '(stack c e)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 2123  <<<<

> Fringe size: 11644
> First 20 nodes: (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=6
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down c)']
> Next lifted action: unstack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2124  <<<<

> Fringe size: 11654
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=7
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down c)', '(unstack e b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=11

>>>>  A* iteration 2125  <<<<

> Fringe size: 11656
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down c)', '(unstack e b)', '(stack b c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2126  <<<<

> Fringe size: 11667
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down c)', '(unstack e b)', '(stack b c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
unstack,(clear ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=12

>>>>  A* iteration 2127  <<<<

> Fringe size: 11669
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down c)', '(unstack e b)', '(stack b c)', '(pick-up e)', '(stack e b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
unstack,(clear ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2128  <<<<

> Fringe size: 11671
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down c)', '(unstack e b)', '(stack b d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2129  <<<<

> Fringe size: 11682
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down c)', '(unstack e b)', '(stack b d)', '(pick-up c)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=12

>>>>  A* iteration 2130  <<<<

> Fringe size: 11684
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down c)', '(unstack e b)', '(stack b d)', '(pick-up c)', '(stack e b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2131  <<<<

> Fringe size: 11695
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down c)', '(unstack e b)', '(stack b d)', '(pick-up c)', '(stack e b)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=12
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, b)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom ontable(c)>]
> Possible groundings:
['(unstack c c)', '(unstack c e)', '(unstack e b)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom ontable(c)>]
> Possible groundings:
['(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom ontable(c)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom ontable(c)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom ontable(c)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']

>>>>  A* iteration 2132  <<<<

> Fringe size: 11697
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down c)', '(unstack e b)', '(stack b d)', '(pick-up c)', '(stack e c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2133  <<<<

> Fringe size: 11708
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down c)', '(unstack e b)', '(stack b d)', '(pick-up c)', '(stack e c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=12

>>>>  A* iteration 2134  <<<<

> Fringe size: 11710
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down c)', '(unstack e b)', '(stack b d)', '(pick-up c)', '(stack e d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2135  <<<<

> Fringe size: 11721
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down c)', '(unstack e b)', '(stack b d)', '(pick-up c)', '(stack e d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=12

>>>>  A* iteration 2136  <<<<

> Fringe size: 11723
> First 20 nodes: (D:11,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down c)', '(unstack e b)', '(stack b d)', '(pick-up c)', '(stack e e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2137  <<<<

> Fringe size: 11734
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down c)', '(unstack e b)', '(stack b d)', '(pick-up c)', '(stack e e)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=12

>>>>  A* iteration 2138  <<<<

> Fringe size: 11736
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down c)', '(unstack e b)', '(stack b e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2139  <<<<

> Fringe size: 11747
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down c)', '(unstack e b)', '(stack b e)', '(pick-up c)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=12

>>>>  A* iteration 2140  <<<<

> Fringe size: 11749
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down c)', '(unstack e b)', '(stack b e)', '(pick-up c)', '(stack e b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2141  <<<<

> Fringe size: 11760
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down c)', '(unstack e b)', '(stack b e)', '(pick-up c)', '(stack e b)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=12

>>>>  A* iteration 2142  <<<<

> Fringe size: 11762
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down c)', '(unstack e b)', '(stack b e)', '(pick-up c)', '(stack e c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2143  <<<<

> Fringe size: 11773
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down c)', '(unstack e b)', '(stack b e)', '(pick-up c)', '(stack e c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=12

>>>>  A* iteration 2144  <<<<

> Fringe size: 11775
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down c)', '(unstack e b)', '(stack b e)', '(pick-up c)', '(stack e d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2145  <<<<

> Fringe size: 11786
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down c)', '(unstack e b)', '(stack b e)', '(pick-up c)', '(stack e d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=12

>>>>  A* iteration 2146  <<<<

> Fringe size: 11788
> First 20 nodes: (D:11,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down c)', '(unstack e b)', '(stack b e)', '(pick-up c)', '(stack e e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2147  <<<<

> Fringe size: 11799
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down c)', '(unstack e b)', '(stack b e)', '(pick-up c)', '(stack e e)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=12

>>>>  A* iteration 2148  <<<<

> Fringe size: 11801
> First 20 nodes: (D:9,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down c)', '(unstack e b)', '(stack e b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom on(e, c)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom on(e, c)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom ontable(c)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(e, d)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(e, d)>, <Atom ontable(c)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom ontable(c)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom ontable(c)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom ontable(c)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom on(e, c)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom on(e, c)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom ontable(c)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom on(e, d)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom on(e, d)>, <Atom ontable(c)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom ontable(c)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']

>>>>  A* iteration 2149  <<<<

> Fringe size: 11811
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down c)', '(unstack e b)', '(stack e b)', '(pick-up c)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=11

>>>>  A* iteration 2150  <<<<

> Fringe size: 11813
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down c)', '(unstack e b)', '(stack e b)', '(pick-up c)', '(stack b c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2151  <<<<

> Fringe size: 11824
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down c)', '(unstack e b)', '(stack e b)', '(pick-up c)', '(stack b c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=12

>>>>  A* iteration 2152  <<<<

> Fringe size: 11826
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down c)', '(unstack e b)', '(stack e b)', '(pick-up c)', '(stack b d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2153  <<<<

> Fringe size: 11837
> First 20 nodes: (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down c)', '(unstack e b)', '(stack e b)', '(pick-up c)', '(stack b d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=12

>>>>  A* iteration 2154  <<<<

> Fringe size: 11839
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down c)', '(unstack e b)', '(stack e b)', '(pick-up c)', '(stack b e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2155  <<<<

> Fringe size: 11849
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down c)', '(unstack e b)', '(stack e b)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=11

>>>>  A* iteration 2156  <<<<

> Fringe size: 11851
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down c)', '(unstack e b)', '(stack e b)', '(pick-up e)', '(stack b c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2157  <<<<

> Fringe size: 11853
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down c)', '(unstack e b)', '(stack e b)', '(pick-up e)', '(stack b d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2158  <<<<

> Fringe size: 11864
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down c)', '(unstack e b)', '(stack e b)', '(pick-up e)', '(stack b d)', '(pick-up c)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=12

>>>>  A* iteration 2159  <<<<

> Fringe size: 11866
> First 20 nodes: (D:11,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down c)', '(unstack e b)', '(stack e b)', '(pick-up e)', '(stack b e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2160  <<<<

> Fringe size: 11877
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down c)', '(unstack e b)', '(stack e b)', '(pick-up e)', '(stack b e)', '(pick-up c)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=12

>>>>  A* iteration 2161  <<<<

> Fringe size: 11879
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down c)', '(unstack e b)', '(stack e c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2162  <<<<

> Fringe size: 11889
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down c)', '(unstack e b)', '(stack e c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=11

>>>>  A* iteration 2163  <<<<

> Fringe size: 11891
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down c)', '(unstack e b)', '(stack e c)', '(pick-up e)', '(stack b c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2164  <<<<

> Fringe size: 11893
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down c)', '(unstack e b)', '(stack e c)', '(pick-up e)', '(stack b d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2165  <<<<

> Fringe size: 11895
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down c)', '(unstack e b)', '(stack e c)', '(pick-up e)', '(stack b e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2166  <<<<

> Fringe size: 11897
> First 20 nodes: (D:9,C:2), (D:9,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down c)', '(unstack e b)', '(stack e d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom ontable(c)>]
> Possible groundings:
['(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom ontable(c)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom ontable(c)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom ontable(c)>]
> Possible groundings:
['(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom ontable(c)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom ontable(c)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom on(e, c)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom ontable(c)>]
> Possible groundings:
['(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom on(e, c)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom on(e, c)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom on(e, c)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']

>>>>  A* iteration 2167  <<<<

> Fringe size: 11907
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down c)', '(unstack e b)', '(stack e d)', '(pick-up c)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=11

>>>>  A* iteration 2168  <<<<

> Fringe size: 11909
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down c)', '(unstack e b)', '(stack e d)', '(pick-up c)', '(stack b c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2169  <<<<

> Fringe size: 11920
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down c)', '(unstack e b)', '(stack e d)', '(pick-up c)', '(stack b c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=12

>>>>  A* iteration 2170  <<<<

> Fringe size: 11922
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down c)', '(unstack e b)', '(stack e d)', '(pick-up c)', '(stack b d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2171  <<<<

> Fringe size: 11933
> First 20 nodes: (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down c)', '(unstack e b)', '(stack e d)', '(pick-up c)', '(stack b d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=12

>>>>  A* iteration 2172  <<<<

> Fringe size: 11935
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down c)', '(unstack e b)', '(stack e d)', '(pick-up c)', '(stack b e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2173  <<<<

> Fringe size: 11945
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down c)', '(unstack e b)', '(stack e d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=11

>>>>  A* iteration 2174  <<<<

> Fringe size: 11947
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down c)', '(unstack e b)', '(stack e d)', '(pick-up e)', '(stack b c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2175  <<<<

> Fringe size: 11949
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down c)', '(unstack e b)', '(stack e d)', '(pick-up e)', '(stack b d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2176  <<<<

> Fringe size: 11960
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down c)', '(unstack e b)', '(stack e d)', '(pick-up e)', '(stack b d)', '(pick-up c)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=12

>>>>  A* iteration 2177  <<<<

> Fringe size: 11962
> First 20 nodes: (D:11,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down c)', '(unstack e b)', '(stack e d)', '(pick-up e)', '(stack b e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2178  <<<<

> Fringe size: 11973
> First 20 nodes: (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down c)', '(unstack e b)', '(stack e d)', '(pick-up e)', '(stack b e)', '(pick-up c)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=12

>>>>  A* iteration 2179  <<<<

> Fringe size: 11975
> First 20 nodes: (D:9,C:2), (D:9,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down c)', '(unstack e b)', '(stack e e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2180  <<<<

> Fringe size: 11985
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down c)', '(unstack e b)', '(stack e e)', '(pick-up c)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=11

>>>>  A* iteration 2181  <<<<

> Fringe size: 11987
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down c)', '(unstack e b)', '(stack e e)', '(pick-up c)', '(stack b c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2182  <<<<

> Fringe size: 11998
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down c)', '(unstack e b)', '(stack e e)', '(pick-up c)', '(stack b c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=12

>>>>  A* iteration 2183  <<<<

> Fringe size: 12000
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:9,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down c)', '(unstack e b)', '(stack e e)', '(pick-up c)', '(stack b d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(e, d)>, <Atom ontable(c)>]
> Possible groundings:
['(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(e, d)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(e, d)>, <Atom ontable(c)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(e, d)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(e, d)>, <Atom ontable(c)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom on(e, d)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(e, d)>, <Atom ontable(c)>]
> Possible groundings:
['(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(e, d)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(e, d)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(e, d)>, <Atom ontable(c)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom on(e, d)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom on(e, d)>, <Atom ontable(c)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom ontable(c)>]
> Possible groundings:
['(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom ontable(c)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']

>>>>  A* iteration 2184  <<<<

> Fringe size: 12011
> First 20 nodes: (D:10,C:2), (D:9,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down c)', '(unstack e b)', '(stack e e)', '(pick-up c)', '(stack b d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=12

>>>>  A* iteration 2185  <<<<

> Fringe size: 12013
> First 20 nodes: (D:9,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down c)', '(unstack e b)', '(stack e e)', '(pick-up c)', '(stack b e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2186  <<<<

> Fringe size: 12023
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down c)', '(unstack e b)', '(stack e e)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=11

>>>>  A* iteration 2187  <<<<

> Fringe size: 12025
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down c)', '(unstack e b)', '(stack e e)', '(pick-up e)', '(stack b c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2188  <<<<

> Fringe size: 12027
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down c)', '(unstack e b)', '(stack e e)', '(pick-up e)', '(stack b d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2189  <<<<

> Fringe size: 12038
> First 20 nodes: (D:10,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down c)', '(unstack e b)', '(stack e e)', '(pick-up e)', '(stack b d)', '(pick-up c)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=12

>>>>  A* iteration 2190  <<<<

> Fringe size: 12040
> First 20 nodes: (D:11,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down c)', '(unstack e b)', '(stack e e)', '(pick-up e)', '(stack b e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2191  <<<<

> Fringe size: 12051
> First 20 nodes: (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down c)', '(unstack e b)', '(stack e e)', '(pick-up e)', '(stack b e)', '(pick-up c)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=12

>>>>  A* iteration 2192  <<<<

> Fringe size: 12053
> First 20 nodes: (D:7,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=6
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down d)']
> Next lifted action: unstack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2193  <<<<

> Fringe size: 12058
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=7
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down d)', '(unstack e b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 2194  <<<<

> Fringe size: 12059
> First 20 nodes: (D:9,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down d)', '(unstack e b)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 2195  <<<<

> Fringe size: 12064
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down d)', '(unstack e b)', '(stack c c)', '(pick-up d)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 2196  <<<<

> Fringe size: 12065
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down d)', '(unstack e b)', '(stack c c)', '(pick-up d)', '(stack e c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 2197  <<<<

> Fringe size: 12070
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down d)', '(unstack e b)', '(stack c c)', '(pick-up d)', '(stack e c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 2198  <<<<

> Fringe size: 12071
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down d)', '(unstack e b)', '(stack c c)', '(pick-up d)', '(stack e d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 2199  <<<<

> Fringe size: 12076
> First 20 nodes: (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down d)', '(unstack e b)', '(stack c c)', '(pick-up d)', '(stack e d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 2200  <<<<

> Fringe size: 12077
> First 20 nodes: (D:11,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down d)', '(unstack e b)', '(stack c c)', '(pick-up d)', '(stack e e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 2201  <<<<

> Fringe size: 12082
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down d)', '(unstack e b)', '(stack c c)', '(pick-up d)', '(stack e e)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 2202  <<<<

> Fringe size: 12087
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down d)', '(unstack e b)', '(stack c c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
unstack,(clear ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 2203  <<<<

> Fringe size: 12088
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down d)', '(unstack e b)', '(stack c c)', '(pick-up e)', '(stack e c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
unstack,(clear ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom ontable(c)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom ontable(c)>]
> Possible groundings:
['(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom ontable(c)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom ontable(c)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(unstack c c)', '(unstack c e)', '(unstack e b)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
>>>>  A* iteration 2204  <<<<

> Fringe size: 12093
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down d)', '(unstack e b)', '(stack c c)', '(pick-up e)', '(stack e c)', '(pick-up d)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
unstack,(clear ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 2205  <<<<

> Fringe size: 12094
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down d)', '(unstack e b)', '(stack c c)', '(pick-up e)', '(stack e d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
unstack,(clear ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 2206  <<<<

> Fringe size: 12095
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down d)', '(unstack e b)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 2207  <<<<

> Fringe size: 12100
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down d)', '(unstack e b)', '(stack c d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
unstack,(clear ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 2208  <<<<

> Fringe size: 12101
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down d)', '(unstack e b)', '(stack c d)', '(pick-up e)', '(stack e c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
unstack,(clear ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 2209  <<<<

> Fringe size: 12102
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down d)', '(unstack e b)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 2210  <<<<

> Fringe size: 12107
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down d)', '(unstack e b)', '(stack c e)', '(pick-up d)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 2211  <<<<

> Fringe size: 12108
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down d)', '(unstack e b)', '(stack c e)', '(pick-up d)', '(stack e c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 2212  <<<<

> Fringe size: 12113
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down d)', '(unstack e b)', '(stack c e)', '(pick-up d)', '(stack e c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 2213  <<<<

> Fringe size: 12114
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down d)', '(unstack e b)', '(stack c e)', '(pick-up d)', '(stack e d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 2214  <<<<

> Fringe size: 12119
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down d)', '(unstack e b)', '(stack c e)', '(pick-up d)', '(stack e d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 2215  <<<<

> Fringe size: 12120
> First 20 nodes: (D:11,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down d)', '(unstack e b)', '(stack c e)', '(pick-up d)', '(stack e e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 2216  <<<<

> Fringe size: 12125
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down d)', '(unstack e b)', '(stack c e)', '(pick-up d)', '(stack e e)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 2217  <<<<

> Fringe size: 12126
> First 20 nodes: (D:9,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down d)', '(unstack e b)', '(stack e c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 2218  <<<<

> Fringe size: 12131
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down d)', '(unstack e b)', '(stack e c)', '(pick-up d)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 2219  <<<<

> Fringe size: 12132
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down d)', '(unstack e b)', '(stack e c)', '(pick-up d)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 2220  <<<<

> Fringe size: 12137
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down d)', '(unstack e b)', '(stack e c)', '(pick-up d)', '(stack c c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 2221  <<<<

> Fringe size: 12138
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down d)', '(unstack e b)', '(stack e c)', '(pick-up d)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 2222  <<<<

> Fringe size: 12143
> First 20 nodes: (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down d)', '(unstack e b)', '(stack e c)', '(pick-up d)', '(stack c d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 2223  <<<<

> Fringe size: 12144
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down d)', '(unstack e b)', '(stack e c)', '(pick-up d)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 2224  <<<<

> Fringe size: 12149
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down d)', '(unstack e b)', '(stack e c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 2225  <<<<

> Fringe size: 12150
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down d)', '(unstack e b)', '(stack e c)', '(pick-up e)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 2226  <<<<

> Fringe size: 12155
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down d)', '(unstack e b)', '(stack e c)', '(pick-up e)', '(stack c c)', '(pick-up d)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 2227  <<<<

> Fringe size: 12156
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down d)', '(unstack e b)', '(stack e c)', '(pick-up e)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']

>>>>  A* iteration 2228  <<<<

> Fringe size: 12157
> First 20 nodes: (D:11,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down d)', '(unstack e b)', '(stack e c)', '(pick-up e)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 2229  <<<<

> Fringe size: 12162
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down d)', '(unstack e b)', '(stack e c)', '(pick-up e)', '(stack c e)', '(pick-up d)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 2230  <<<<

> Fringe size: 12163
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down d)', '(unstack e b)', '(stack e d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 2231  <<<<

> Fringe size: 12168
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down d)', '(unstack e b)', '(stack e d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 2232  <<<<

> Fringe size: 12169
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down d)', '(unstack e b)', '(stack e d)', '(pick-up e)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 2233  <<<<

> Fringe size: 12170
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down d)', '(unstack e b)', '(stack e d)', '(pick-up e)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 2234  <<<<

> Fringe size: 12171
> First 20 nodes: (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down d)', '(unstack e b)', '(stack e d)', '(pick-up e)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 2235  <<<<

> Fringe size: 12172
> First 20 nodes: (D:9,C:2), (D:9,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down d)', '(unstack e b)', '(stack e e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 2236  <<<<

> Fringe size: 12177
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down d)', '(unstack e b)', '(stack e e)', '(pick-up d)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 2237  <<<<

> Fringe size: 12178
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down d)', '(unstack e b)', '(stack e e)', '(pick-up d)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 2238  <<<<

> Fringe size: 12183
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down d)', '(unstack e b)', '(stack e e)', '(pick-up d)', '(stack c c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 2239  <<<<

> Fringe size: 12184
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:9,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down d)', '(unstack e b)', '(stack e e)', '(pick-up d)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 2240  <<<<

> Fringe size: 12189
> First 20 nodes: (D:10,C:2), (D:9,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down d)', '(unstack e b)', '(stack e e)', '(pick-up d)', '(stack c d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 2241  <<<<

> Fringe size: 12190
> First 20 nodes: (D:9,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down d)', '(unstack e b)', '(stack e e)', '(pick-up d)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 2242  <<<<

> Fringe size: 12195
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down d)', '(unstack e b)', '(stack e e)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 2243  <<<<

> Fringe size: 12196
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down d)', '(unstack e b)', '(stack e e)', '(pick-up e)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 2244  <<<<

> Fringe size: 12201
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down d)', '(unstack e b)', '(stack e e)', '(pick-up e)', '(stack c c)', '(pick-up d)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 2245  <<<<

> Fringe size: 12202
> First 20 nodes: (D:10,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down d)', '(unstack e b)', '(stack e e)', '(pick-up e)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 2246  <<<<

> Fringe size: 12203
> First 20 nodes: (D:11,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down d)', '(unstack e b)', '(stack e e)', '(pick-up e)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 2247  <<<<

> Fringe size: 12208
> First 20 nodes: (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down d)', '(unstack e b)', '(stack e e)', '(pick-up e)', '(stack c e)', '(pick-up d)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 2248  <<<<

> Fringe size: 12210
> First 20 nodes: (D:7,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=6
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down e)']
> Next lifted action: unstack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2249  <<<<

> Fringe size: 12215
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=7
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down e)', '(unstack e b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 2250  <<<<

> Fringe size: 12216
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down e)', '(unstack e b)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(unstack c c)', '(unstack c e)', '(unstack e b)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']

>>>>  A* iteration 2251  <<<<

> Fringe size: 12221
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down e)', '(unstack e b)', '(stack c c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
unstack,(clear ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 2252  <<<<

> Fringe size: 12222
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down e)', '(unstack e b)', '(stack c c)', '(pick-up e)', '(stack e c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
unstack,(clear ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 2253  <<<<

> Fringe size: 12223
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down e)', '(unstack e b)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 2254  <<<<

> Fringe size: 12224
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down e)', '(unstack e b)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 2255  <<<<

> Fringe size: 12225
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down e)', '(unstack e b)', '(stack e c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 2256  <<<<

> Fringe size: 12230
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down e)', '(unstack e b)', '(stack e c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 2257  <<<<

> Fringe size: 12231
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down e)', '(unstack e b)', '(stack e c)', '(pick-up e)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 2258  <<<<

> Fringe size: 12232
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down e)', '(unstack e b)', '(stack e c)', '(pick-up e)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 2259  <<<<

> Fringe size: 12233
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down e)', '(unstack e b)', '(stack e c)', '(pick-up e)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 2260  <<<<

> Fringe size: 12234
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down e)', '(unstack e b)', '(stack e d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 2261  <<<<

> Fringe size: 12239
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down e)', '(unstack e b)', '(stack e d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 2262  <<<<

> Fringe size: 12240
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down e)', '(unstack e b)', '(stack e d)', '(pick-up e)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 2263  <<<<

> Fringe size: 12241
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down e)', '(unstack e b)', '(stack e d)', '(pick-up e)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 2264  <<<<

> Fringe size: 12242
> First 20 nodes: (D:8,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down e)', '(unstack e b)', '(stack e d)', '(pick-up e)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 2265  <<<<

> Fringe size: 12243
> First 20 nodes: (D:9,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down e)', '(unstack e b)', '(stack e e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 2266  <<<<

> Fringe size: 12248
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down e)', '(unstack e b)', '(stack e e)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 2267  <<<<

> Fringe size: 12249
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down e)', '(unstack e b)', '(stack e e)', '(pick-up e)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 2268  <<<<

> Fringe size: 12250
> First 20 nodes: (D:10,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down e)', '(unstack e b)', '(stack e e)', '(pick-up e)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 2269  <<<<

> Fringe size: 12251
> First 20 nodes: (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down e)', '(unstack e b)', '(stack e e)', '(pick-up e)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 2270  <<<<

> Fringe size: 12255
> First 20 nodes: (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=5
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)']
> Next lifted action: put-down
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=5

>>>>  A* iteration 2271  <<<<

> Fringe size: 12257
> First 20 nodes: (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=6
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down a)']
> Next lifted action: unstack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2272  <<<<

> Fringe size: 12264
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=7
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down a)', '(unstack c c)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 2273  <<<<

> Fringe size: 12266
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down a)', '(unstack c c)', '(stack c a)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(put-down a)', '(put-down b)', '(put-down c)', '(put-down d)', '(put-down e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(unstack c c)', '(unstack c e)', '(unstack e b)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]

>>>>  A* iteration 2274  <<<<

> Fringe size: 12273
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down a)', '(unstack c c)', '(stack c a)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
unstack,(clear ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 2275  <<<<

> Fringe size: 12275
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down a)', '(unstack c c)', '(stack c a)', '(pick-up e)', '(stack e c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
unstack,(clear ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2276  <<<<

> Fringe size: 12277
> First 20 nodes: (D:9,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down a)', '(unstack c c)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2277  <<<<

> Fringe size: 12284
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down a)', '(unstack c c)', '(stack c c)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 2278  <<<<

> Fringe size: 12286
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down a)', '(unstack c c)', '(stack c c)', '(pick-up a)', '(stack e a)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2279  <<<<

> Fringe size: 12293
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down a)', '(unstack c c)', '(stack c c)', '(pick-up a)', '(stack e a)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 2280  <<<<

> Fringe size: 12295
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down a)', '(unstack c c)', '(stack c c)', '(pick-up a)', '(stack e c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2281  <<<<

> Fringe size: 12302
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down a)', '(unstack c c)', '(stack c c)', '(pick-up a)', '(stack e c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 2282  <<<<

> Fringe size: 12304
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down a)', '(unstack c c)', '(stack c c)', '(pick-up a)', '(stack e d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2283  <<<<

> Fringe size: 12311
> First 20 nodes: (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down a)', '(unstack c c)', '(stack c c)', '(pick-up a)', '(stack e d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 2284  <<<<

> Fringe size: 12313
> First 20 nodes: (D:11,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down a)', '(unstack c c)', '(stack c c)', '(pick-up a)', '(stack e e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2285  <<<<

> Fringe size: 12320
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down a)', '(unstack c c)', '(stack c c)', '(pick-up a)', '(stack e e)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 2286  <<<<

> Fringe size: 12327
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down a)', '(unstack c c)', '(stack c c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
unstack,(clear ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 2287  <<<<

> Fringe size: 12329
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down a)', '(unstack c c)', '(stack c c)', '(pick-up e)', '(stack e a)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
unstack,(clear ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2288  <<<<

> Fringe size: 12331
> First 20 nodes: (D:11,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down a)', '(unstack c c)', '(stack c c)', '(pick-up e)', '(stack e c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
unstack,(clear ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2289  <<<<

> Fringe size: 12338
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down a)', '(unstack c c)', '(stack c c)', '(pick-up e)', '(stack e c)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
unstack,(clear ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 2290  <<<<

> Fringe size: 12340
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down a)', '(unstack c c)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2291  <<<<

> Fringe size: 12347
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down a)', '(unstack c c)', '(stack c d)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 2292  <<<<

> Fringe size: 12349
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down a)', '(unstack c c)', '(stack c d)', '(pick-up a)', '(stack e a)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2293  <<<<

> Fringe size: 12356
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down a)', '(unstack c c)', '(stack c d)', '(pick-up a)', '(stack e a)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 2294  <<<<

> Fringe size: 12358
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down a)', '(unstack c c)', '(stack c d)', '(pick-up a)', '(stack e c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, a)>, <Atom on(e, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom on(e, a)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']

>>>>  A* iteration 2295  <<<<

> Fringe size: 12365
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down a)', '(unstack c c)', '(stack c d)', '(pick-up a)', '(stack e c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 2296  <<<<

> Fringe size: 12367
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down a)', '(unstack c c)', '(stack c d)', '(pick-up a)', '(stack e d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2297  <<<<

> Fringe size: 12374
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down a)', '(unstack c c)', '(stack c d)', '(pick-up a)', '(stack e d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 2298  <<<<

> Fringe size: 12376
> First 20 nodes: (D:11,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down a)', '(unstack c c)', '(stack c d)', '(pick-up a)', '(stack e e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2299  <<<<

> Fringe size: 12383
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down a)', '(unstack c c)', '(stack c d)', '(pick-up a)', '(stack e e)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 2300  <<<<

> Fringe size: 12385
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down a)', '(unstack c c)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2301  <<<<

> Fringe size: 12392
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down a)', '(unstack c c)', '(stack c e)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 2302  <<<<

> Fringe size: 12394
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down a)', '(unstack c c)', '(stack c e)', '(pick-up a)', '(stack e a)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2303  <<<<

> Fringe size: 12401
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down a)', '(unstack c c)', '(stack c e)', '(pick-up a)', '(stack e a)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 2304  <<<<

> Fringe size: 12403
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down a)', '(unstack c c)', '(stack c e)', '(pick-up a)', '(stack e c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2305  <<<<

> Fringe size: 12410
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down a)', '(unstack c c)', '(stack c e)', '(pick-up a)', '(stack e c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 2306  <<<<

> Fringe size: 12412
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down a)', '(unstack c c)', '(stack c e)', '(pick-up a)', '(stack e d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2307  <<<<

> Fringe size: 12419
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down a)', '(unstack c c)', '(stack c e)', '(pick-up a)', '(stack e d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 2308  <<<<

> Fringe size: 12421
> First 20 nodes: (D:11,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down a)', '(unstack c c)', '(stack c e)', '(pick-up a)', '(stack e e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2309  <<<<

> Fringe size: 12428
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down a)', '(unstack c c)', '(stack c e)', '(pick-up a)', '(stack e e)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 2310  <<<<

> Fringe size: 12430
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down a)', '(unstack c c)', '(stack e a)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2311  <<<<

> Fringe size: 12437
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down a)', '(unstack c c)', '(stack e a)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 2312  <<<<

> Fringe size: 12439
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down a)', '(unstack c c)', '(stack e a)', '(pick-up e)', '(stack c a)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2313  <<<<

> Fringe size: 12441
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down a)', '(unstack c c)', '(stack e a)', '(pick-up e)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2314  <<<<

> Fringe size: 12443
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down a)', '(unstack c c)', '(stack e a)', '(pick-up e)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom on(e, c)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>, <Atom on(e, d)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, a)>, <Atom on(c, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]

>>>>  A* iteration 2315  <<<<

> Fringe size: 12445
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down a)', '(unstack c c)', '(stack e a)', '(pick-up e)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2316  <<<<

> Fringe size: 12447
> First 20 nodes: (D:9,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down a)', '(unstack c c)', '(stack e c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2317  <<<<

> Fringe size: 12454
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down a)', '(unstack c c)', '(stack e c)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 2318  <<<<

> Fringe size: 12456
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down a)', '(unstack c c)', '(stack e c)', '(pick-up a)', '(stack c a)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2319  <<<<

> Fringe size: 12463
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down a)', '(unstack c c)', '(stack e c)', '(pick-up a)', '(stack c a)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 2320  <<<<

> Fringe size: 12465
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down a)', '(unstack c c)', '(stack e c)', '(pick-up a)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2321  <<<<

> Fringe size: 12472
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down a)', '(unstack c c)', '(stack e c)', '(pick-up a)', '(stack c c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 2322  <<<<

> Fringe size: 12474
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down a)', '(unstack c c)', '(stack e c)', '(pick-up a)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2323  <<<<

> Fringe size: 12481
> First 20 nodes: (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down a)', '(unstack c c)', '(stack e c)', '(pick-up a)', '(stack c d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 2324  <<<<

> Fringe size: 12483
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down a)', '(unstack c c)', '(stack e c)', '(pick-up a)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2325  <<<<

> Fringe size: 12490
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down a)', '(unstack c c)', '(stack e c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 2326  <<<<

> Fringe size: 12492
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down a)', '(unstack c c)', '(stack e c)', '(pick-up e)', '(stack c a)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2327  <<<<

> Fringe size: 12494
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down a)', '(unstack c c)', '(stack e c)', '(pick-up e)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2328  <<<<

> Fringe size: 12501
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down a)', '(unstack c c)', '(stack e c)', '(pick-up e)', '(stack c c)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 2329  <<<<

> Fringe size: 12503
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down a)', '(unstack c c)', '(stack e c)', '(pick-up e)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2330  <<<<

> Fringe size: 12510
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down a)', '(unstack c c)', '(stack e c)', '(pick-up e)', '(stack c d)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 2331  <<<<

> Fringe size: 12512
> First 20 nodes: (D:11,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down a)', '(unstack c c)', '(stack e c)', '(pick-up e)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2332  <<<<

> Fringe size: 12519
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down a)', '(unstack c c)', '(stack e c)', '(pick-up e)', '(stack c e)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 2333  <<<<

> Fringe size: 12521
> First 20 nodes: (D:9,C:2), (D:9,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down a)', '(unstack c c)', '(stack e d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2334  <<<<

> Fringe size: 12528
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down a)', '(unstack c c)', '(stack e d)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 2335  <<<<

> Fringe size: 12530
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down a)', '(unstack c c)', '(stack e d)', '(pick-up a)', '(stack c a)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, c)>, <Atom on(c, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom on(e, c)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom on(c, a)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom on(e, c)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, c)>, <Atom on(c, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom on(e, c)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']

>>>>  A* iteration 2336  <<<<

> Fringe size: 12537
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down a)', '(unstack c c)', '(stack e d)', '(pick-up a)', '(stack c a)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 2337  <<<<

> Fringe size: 12539
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down a)', '(unstack c c)', '(stack e d)', '(pick-up a)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2338  <<<<

> Fringe size: 12546
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down a)', '(unstack c c)', '(stack e d)', '(pick-up a)', '(stack c c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 2339  <<<<

> Fringe size: 12548
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down a)', '(unstack c c)', '(stack e d)', '(pick-up a)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2340  <<<<

> Fringe size: 12555
> First 20 nodes: (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down a)', '(unstack c c)', '(stack e d)', '(pick-up a)', '(stack c d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 2341  <<<<

> Fringe size: 12557
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down a)', '(unstack c c)', '(stack e d)', '(pick-up a)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2342  <<<<

> Fringe size: 12564
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down a)', '(unstack c c)', '(stack e d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 2343  <<<<

> Fringe size: 12566
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down a)', '(unstack c c)', '(stack e d)', '(pick-up e)', '(stack c a)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2344  <<<<

> Fringe size: 12568
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down a)', '(unstack c c)', '(stack e d)', '(pick-up e)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2345  <<<<

> Fringe size: 12575
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down a)', '(unstack c c)', '(stack e d)', '(pick-up e)', '(stack c c)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 2346  <<<<

> Fringe size: 12577
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down a)', '(unstack c c)', '(stack e d)', '(pick-up e)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2347  <<<<

> Fringe size: 12584
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down a)', '(unstack c c)', '(stack e d)', '(pick-up e)', '(stack c d)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 2348  <<<<

> Fringe size: 12586
> First 20 nodes: (D:11,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down a)', '(unstack c c)', '(stack e d)', '(pick-up e)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2349  <<<<

> Fringe size: 12593
> First 20 nodes: (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down a)', '(unstack c c)', '(stack e d)', '(pick-up e)', '(stack c e)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 2350  <<<<

> Fringe size: 12595
> First 20 nodes: (D:9,C:2), (D:9,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down a)', '(unstack c c)', '(stack e e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2351  <<<<

> Fringe size: 12602
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down a)', '(unstack c c)', '(stack e e)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 2352  <<<<

> Fringe size: 12604
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down a)', '(unstack c c)', '(stack e e)', '(pick-up a)', '(stack c a)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2353  <<<<

> Fringe size: 12611
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down a)', '(unstack c c)', '(stack e e)', '(pick-up a)', '(stack c a)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 2354  <<<<

> Fringe size: 12613
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down a)', '(unstack c c)', '(stack e e)', '(pick-up a)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2355  <<<<

> Fringe size: 12620
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down a)', '(unstack c c)', '(stack e e)', '(pick-up a)', '(stack c c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom on(c, a)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(e, d)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>, <Atom on(e, d)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>, <Atom on(e, d)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, e)>, <Atom on(c, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom on(c, a)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']

>>>>  A* iteration 2356  <<<<

> Fringe size: 12622
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:9,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down a)', '(unstack c c)', '(stack e e)', '(pick-up a)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2357  <<<<

> Fringe size: 12629
> First 20 nodes: (D:10,C:2), (D:9,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down a)', '(unstack c c)', '(stack e e)', '(pick-up a)', '(stack c d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 2358  <<<<

> Fringe size: 12631
> First 20 nodes: (D:9,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down a)', '(unstack c c)', '(stack e e)', '(pick-up a)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2359  <<<<

> Fringe size: 12638
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down a)', '(unstack c c)', '(stack e e)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 2360  <<<<

> Fringe size: 12640
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down a)', '(unstack c c)', '(stack e e)', '(pick-up e)', '(stack c a)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2361  <<<<

> Fringe size: 12642
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down a)', '(unstack c c)', '(stack e e)', '(pick-up e)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2362  <<<<

> Fringe size: 12649
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down a)', '(unstack c c)', '(stack e e)', '(pick-up e)', '(stack c c)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 2363  <<<<

> Fringe size: 12651
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down a)', '(unstack c c)', '(stack e e)', '(pick-up e)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2364  <<<<

> Fringe size: 12658
> First 20 nodes: (D:10,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down a)', '(unstack c c)', '(stack e e)', '(pick-up e)', '(stack c d)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 2365  <<<<

> Fringe size: 12660
> First 20 nodes: (D:11,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down a)', '(unstack c c)', '(stack e e)', '(pick-up e)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2366  <<<<

> Fringe size: 12667
> First 20 nodes: (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down a)', '(unstack c c)', '(stack e e)', '(pick-up e)', '(stack c e)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 2367  <<<<

> Fringe size: 12670
> First 20 nodes: (D:7,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=6
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)']
> Next lifted action: unstack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 2368  <<<<

> Fringe size: 12688
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=7
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=19

>>>>  A* iteration 2369  <<<<

> Fringe size: 12691
> First 20 nodes: (D:9,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 2370  <<<<

> Fringe size: 12710
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a b)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 2371  <<<<

> Fringe size: 12713
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a b)', '(pick-up a)', '(stack b a)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 2372  <<<<

> Fringe size: 12732
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a b)', '(pick-up a)', '(stack b a)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 2373  <<<<

> Fringe size: 12735
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a b)', '(pick-up a)', '(stack b b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, e)>, <Atom on(c, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(pick-up a)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(stack c a)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom ontable(b)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(unstack b a)', '(unstack c c)', '(unstack c e)', '(unstack e b)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(a, b)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(a, b)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(a, b)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(a, b)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(a, b)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']

>>>>  A* iteration 2374  <<<<

> Fringe size: 12754
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a b)', '(pick-up a)', '(stack b b)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 2375  <<<<

> Fringe size: 12757
> First 20 nodes: (D:11,C:2), (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a b)', '(pick-up a)', '(stack b c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 2376  <<<<

> Fringe size: 12776
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a b)', '(pick-up a)', '(stack b c)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 2377  <<<<

> Fringe size: 12795
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a b)', '(pick-up a)', '(stack b c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
unstack,(clear ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 2378  <<<<

> Fringe size: 12798
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a b)', '(pick-up a)', '(stack b d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 2379  <<<<

> Fringe size: 12817
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a b)', '(pick-up a)', '(stack b d)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 2380  <<<<

> Fringe size: 12820
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a b)', '(pick-up a)', '(stack b e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 2381  <<<<

> Fringe size: 12839
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a b)', '(pick-up a)', '(stack b e)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 2382  <<<<

> Fringe size: 12842
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a b)', '(pick-up a)', '(stack e a)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 2383  <<<<

> Fringe size: 12861
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a b)', '(pick-up a)', '(stack e a)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 2384  <<<<

> Fringe size: 12864
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a b)', '(pick-up a)', '(stack e b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 2385  <<<<

> Fringe size: 12883
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a b)', '(pick-up a)', '(stack e b)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 2386  <<<<

> Fringe size: 12886
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a b)', '(pick-up a)', '(stack e c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(a, b)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(a, b)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(a, b)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(a, b)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(a, b)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(a, b)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(a, b)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(a, b)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(a, b)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom on(e, a)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(a, b)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom on(e, a)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(a, b)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(a, b)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(a, b)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(a, b)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]

>>>>  A* iteration 2387  <<<<

> Fringe size: 12905
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a b)', '(pick-up a)', '(stack e c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 2388  <<<<

> Fringe size: 12908
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a b)', '(pick-up a)', '(stack e d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 2389  <<<<

> Fringe size: 12927
> First 20 nodes: (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a b)', '(pick-up a)', '(stack e d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 2390  <<<<

> Fringe size: 12930
> First 20 nodes: (D:11,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a b)', '(pick-up a)', '(stack e e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 2391  <<<<

> Fringe size: 12949
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a b)', '(pick-up a)', '(stack e e)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 2392  <<<<

> Fringe size: 12968
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a b)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
unstack,(clear ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 2393  <<<<

> Fringe size: 12971
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a b)', '(pick-up e)', '(stack b a)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
unstack,(clear ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 2394  <<<<

> Fringe size: 12990
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a b)', '(pick-up e)', '(stack b a)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
unstack,(clear ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 2395  <<<<

> Fringe size: 12993
> First 20 nodes: (D:11,C:2), (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a b)', '(pick-up e)', '(stack b c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
unstack,(clear ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 2396  <<<<

> Fringe size: 13012
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a b)', '(pick-up e)', '(stack b c)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
unstack,(clear ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 2397  <<<<

> Fringe size: 13031
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a b)', '(pick-up e)', '(stack b c)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
unstack,(clear ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 2398  <<<<

> Fringe size: 13034
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a b)', '(pick-up e)', '(stack e a)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
unstack,(clear ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 2399  <<<<

> Fringe size: 13037
> First 20 nodes: (D:11,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a b)', '(pick-up e)', '(stack e c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
unstack,(clear ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 2400  <<<<

> Fringe size: 13056
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a b)', '(pick-up e)', '(stack e c)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
unstack,(clear ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(a, b)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(e, d)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(a, b)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(e, d)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(a, b)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(a, b)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(a, b)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(a, b)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(a, b)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(a, b)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(a, b)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(a, b)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(a, b)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom on(e, a)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(a, b)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(a, b)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']

>>>>  A* iteration 2401  <<<<

> Fringe size: 13059
> First 20 nodes: (D:9,C:2), (D:9,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 2402  <<<<

> Fringe size: 13078
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a c)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 2403  <<<<

> Fringe size: 13081
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a c)', '(pick-up a)', '(stack b a)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 2404  <<<<

> Fringe size: 13100
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a c)', '(pick-up a)', '(stack b a)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 2405  <<<<

> Fringe size: 13103
> First 20 nodes: (D:11,C:2), (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a c)', '(pick-up a)', '(stack b b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 2406  <<<<

> Fringe size: 13122
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a c)', '(pick-up a)', '(stack b b)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 2407  <<<<

> Fringe size: 13141
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a c)', '(pick-up a)', '(stack b b)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
unstack,(clear ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 2408  <<<<

> Fringe size: 13144
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a c)', '(pick-up a)', '(stack b c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 2409  <<<<

> Fringe size: 13163
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a c)', '(pick-up a)', '(stack b c)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 2410  <<<<

> Fringe size: 13166
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a c)', '(pick-up a)', '(stack b d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 2411  <<<<

> Fringe size: 13185
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a c)', '(pick-up a)', '(stack b d)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 2412  <<<<

> Fringe size: 13188
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a c)', '(pick-up a)', '(stack b e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 2413  <<<<

> Fringe size: 13207
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a c)', '(pick-up a)', '(stack b e)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 2414  <<<<

> Fringe size: 13210
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a c)', '(pick-up a)', '(stack e a)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom on(a, c)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom on(a, c)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom on(a, c)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom on(a, c)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom handempty()>, <Atom on(a, c)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom handempty()>, <Atom on(a, c)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom handempty()>, <Atom on(a, c)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom on(a, c)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom on(a, c)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom on(a, c)>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom on(a, c)>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom on(a, c)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom on(a, c)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom on(a, c)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom on(e, a)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']

>>>>  A* iteration 2415  <<<<

> Fringe size: 13229
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a c)', '(pick-up a)', '(stack e a)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 2416  <<<<

> Fringe size: 13232
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a c)', '(pick-up a)', '(stack e b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 2417  <<<<

> Fringe size: 13251
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a c)', '(pick-up a)', '(stack e b)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 2418  <<<<

> Fringe size: 13254
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a c)', '(pick-up a)', '(stack e c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 2419  <<<<

> Fringe size: 13273
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a c)', '(pick-up a)', '(stack e c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 2420  <<<<

> Fringe size: 13276
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:9,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a c)', '(pick-up a)', '(stack e d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 2421  <<<<

> Fringe size: 13295
> First 20 nodes: (D:10,C:2), (D:9,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a c)', '(pick-up a)', '(stack e d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 2422  <<<<

> Fringe size: 13298
> First 20 nodes: (D:11,C:2), (D:11,C:2), (D:9,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a c)', '(pick-up a)', '(stack e e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 2423  <<<<

> Fringe size: 13317
> First 20 nodes: (D:11,C:2), (D:9,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a c)', '(pick-up a)', '(stack e e)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
unstack,(clear ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 2424  <<<<

> Fringe size: 13336
> First 20 nodes: (D:9,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a c)', '(pick-up a)', '(stack e e)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 2425  <<<<

> Fringe size: 13355
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a c)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
unstack,(clear ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 2426  <<<<

> Fringe size: 13358
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a c)', '(pick-up b)', '(stack b a)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
unstack,(clear ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 2427  <<<<

> Fringe size: 13377
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a c)', '(pick-up b)', '(stack b a)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
unstack,(clear ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom on(a, c)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom on(e, a)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom on(a, c)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom on(a, c)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom on(a, c)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom on(a, c)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom on(a, c)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(e, d)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom on(a, c)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(e, d)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom on(a, c)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom on(a, c)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom on(a, c)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom on(a, c)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom on(a, c)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom on(a, c)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']

>>>>  A* iteration 2428  <<<<

> Fringe size: 13380
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a c)', '(pick-up b)', '(stack b e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
unstack,(clear ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 2429  <<<<

> Fringe size: 13399
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a c)', '(pick-up b)', '(stack b e)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
unstack,(clear ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 2430  <<<<

> Fringe size: 13402
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a c)', '(pick-up b)', '(stack e a)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
unstack,(clear ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 2431  <<<<

> Fringe size: 13421
> First 20 nodes: (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a c)', '(pick-up b)', '(stack e a)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
unstack,(clear ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 2432  <<<<

> Fringe size: 13424
> First 20 nodes: (D:11,C:2), (D:11,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a c)', '(pick-up b)', '(stack e e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
unstack,(clear ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 2433  <<<<

> Fringe size: 13443
> First 20 nodes: (D:11,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a c)', '(pick-up b)', '(stack e e)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
unstack,(clear ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 2434  <<<<

> Fringe size: 13462
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a c)', '(pick-up b)', '(stack e e)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
unstack,(clear ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 2435  <<<<

> Fringe size: 13481
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
unstack,(clear ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 2436  <<<<

> Fringe size: 13484
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a c)', '(pick-up e)', '(stack b a)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
unstack,(clear ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 2437  <<<<

> Fringe size: 13503
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a c)', '(pick-up e)', '(stack b a)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
unstack,(clear ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 2438  <<<<

> Fringe size: 13506
> First 20 nodes: (D:11,C:2), (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a c)', '(pick-up e)', '(stack b b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
unstack,(clear ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 2439  <<<<

> Fringe size: 13525
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a c)', '(pick-up e)', '(stack b b)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
unstack,(clear ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 2440  <<<<

> Fringe size: 13544
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a c)', '(pick-up e)', '(stack b b)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
unstack,(clear ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom on(a, c)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom on(a, c)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom on(a, c)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom on(e, a)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom on(a, c)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom on(e, a)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom on(a, c)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom on(a, c)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom on(a, c)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom on(a, c)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom on(a, c)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom on(a, c)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom handempty()>, <Atom on(a, c)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom handempty()>, <Atom on(a, c)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom handempty()>, <Atom on(a, c)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']

>>>>  A* iteration 2441  <<<<

> Fringe size: 13547
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a c)', '(pick-up e)', '(stack e a)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
unstack,(clear ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 2442  <<<<

> Fringe size: 13566
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a c)', '(pick-up e)', '(stack e a)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
unstack,(clear ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 2443  <<<<

> Fringe size: 13569
> First 20 nodes: (D:11,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a c)', '(pick-up e)', '(stack e b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
unstack,(clear ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 2444  <<<<

> Fringe size: 13588
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a c)', '(pick-up e)', '(stack e b)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
unstack,(clear ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 2445  <<<<

> Fringe size: 13591
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 2446  <<<<

> Fringe size: 13610
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a d)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 2447  <<<<

> Fringe size: 13613
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a d)', '(pick-up a)', '(stack b a)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 2448  <<<<

> Fringe size: 13632
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a d)', '(pick-up a)', '(stack b a)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 2449  <<<<

> Fringe size: 13635
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a d)', '(pick-up a)', '(stack b b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 2450  <<<<

> Fringe size: 13654
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a d)', '(pick-up a)', '(stack b b)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 2451  <<<<

> Fringe size: 13657
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a d)', '(pick-up a)', '(stack b c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 2452  <<<<

> Fringe size: 13676
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a d)', '(pick-up a)', '(stack b c)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 2453  <<<<

> Fringe size: 13679
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a d)', '(pick-up a)', '(stack b d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 2454  <<<<

> Fringe size: 13698
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a d)', '(pick-up a)', '(stack b d)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom on(a, c)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom on(e, a)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom on(a, c)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom on(e, a)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom on(a, c)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom on(a, c)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(a, d)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(a, d)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(a, d)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(a, d)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(a, d)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(a, d)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(a, d)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(a, d)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(a, d)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(a, d)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']

>>>>  A* iteration 2455  <<<<

> Fringe size: 13701
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a d)', '(pick-up a)', '(stack b e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 2456  <<<<

> Fringe size: 13720
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a d)', '(pick-up a)', '(stack b e)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 2457  <<<<

> Fringe size: 13723
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a d)', '(pick-up a)', '(stack e a)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 2458  <<<<

> Fringe size: 13742
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a d)', '(pick-up a)', '(stack e a)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 2459  <<<<

> Fringe size: 13745
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a d)', '(pick-up a)', '(stack e b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 2460  <<<<

> Fringe size: 13764
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a d)', '(pick-up a)', '(stack e b)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 2461  <<<<

> Fringe size: 13767
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a d)', '(pick-up a)', '(stack e c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 2462  <<<<

> Fringe size: 13786
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a d)', '(pick-up a)', '(stack e c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 2463  <<<<

> Fringe size: 13789
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a d)', '(pick-up a)', '(stack e d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 2464  <<<<

> Fringe size: 13808
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a d)', '(pick-up a)', '(stack e d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 2465  <<<<

> Fringe size: 13811
> First 20 nodes: (D:11,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a d)', '(pick-up a)', '(stack e e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 2466  <<<<

> Fringe size: 13830
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a d)', '(pick-up a)', '(stack e e)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 2467  <<<<

> Fringe size: 13833
> First 20 nodes: (D:9,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 2468  <<<<

> Fringe size: 13852
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a e)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(a, d)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(a, d)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(a, d)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom on(e, a)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(a, d)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom on(e, a)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(a, d)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(a, d)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(a, d)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(a, d)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(a, d)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(e, d)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(a, d)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(e, d)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(a, d)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(a, d)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(a, e)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(a, e)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']

>>>>  A* iteration 2469  <<<<

> Fringe size: 13855
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a e)', '(pick-up a)', '(stack b a)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 2470  <<<<

> Fringe size: 13874
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a e)', '(pick-up a)', '(stack b a)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 2471  <<<<

> Fringe size: 13877
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a e)', '(pick-up a)', '(stack b b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 2472  <<<<

> Fringe size: 13896
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a e)', '(pick-up a)', '(stack b b)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 2473  <<<<

> Fringe size: 13899
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a e)', '(pick-up a)', '(stack b c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 2474  <<<<

> Fringe size: 13918
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a e)', '(pick-up a)', '(stack b c)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 2475  <<<<

> Fringe size: 13921
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a e)', '(pick-up a)', '(stack b d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 2476  <<<<

> Fringe size: 13940
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a e)', '(pick-up a)', '(stack b d)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 2477  <<<<

> Fringe size: 13943
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a e)', '(pick-up a)', '(stack b e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 2478  <<<<

> Fringe size: 13962
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a e)', '(pick-up a)', '(stack b e)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 2479  <<<<

> Fringe size: 13965
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a e)', '(pick-up a)', '(stack e a)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 2480  <<<<

> Fringe size: 13984
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a e)', '(pick-up a)', '(stack e a)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 2481  <<<<

> Fringe size: 13987
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a e)', '(pick-up a)', '(stack e b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 2482  <<<<

> Fringe size: 14006
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a e)', '(pick-up a)', '(stack e b)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(a, e)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(a, e)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(a, e)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(a, e)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(a, e)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(a, e)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(a, e)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(a, e)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom on(a, e)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom on(a, e)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom on(e, a)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(a, e)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom on(e, a)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(a, e)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(a, e)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(a, e)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']

>>>>  A* iteration 2483  <<<<

> Fringe size: 14009
> First 20 nodes: (D:11,C:2), (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a e)', '(pick-up a)', '(stack e c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 2484  <<<<

> Fringe size: 14028
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a e)', '(pick-up a)', '(stack e c)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
unstack,(clear ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 2485  <<<<

> Fringe size: 14047
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a e)', '(pick-up a)', '(stack e c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 2486  <<<<

> Fringe size: 14050
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a e)', '(pick-up a)', '(stack e d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 2487  <<<<

> Fringe size: 14069
> First 20 nodes: (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a e)', '(pick-up a)', '(stack e d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 2488  <<<<

> Fringe size: 14072
> First 20 nodes: (D:11,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a e)', '(pick-up a)', '(stack e e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 2489  <<<<

> Fringe size: 14091
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a e)', '(pick-up a)', '(stack e e)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 2490  <<<<

> Fringe size: 14110
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a e)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
unstack,(clear ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 2491  <<<<

> Fringe size: 14113
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a e)', '(pick-up b)', '(stack b a)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
unstack,(clear ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 2492  <<<<

> Fringe size: 14116
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a e)', '(pick-up b)', '(stack b c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
unstack,(clear ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 2493  <<<<

> Fringe size: 14135
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a e)', '(pick-up b)', '(stack b c)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
unstack,(clear ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 2494  <<<<

> Fringe size: 14138
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a e)', '(pick-up b)', '(stack e a)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
unstack,(clear ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 2495  <<<<

> Fringe size: 14157
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a e)', '(pick-up b)', '(stack e a)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
unstack,(clear ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 2496  <<<<

> Fringe size: 14160
> First 20 nodes: (D:11,C:2), (D:11,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a e)', '(pick-up b)', '(stack e c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
unstack,(clear ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(a, e)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(a, e)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(a, e)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(e, d)>, <Atom on(a, e)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(e, d)>, <Atom on(a, e)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(a, e)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(a, e)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(a, e)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(a, e)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(a, e)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(a, e)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom on(e, a)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(a, e)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom on(e, a)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(a, e)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(a, e)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']

>>>>  A* iteration 2497  <<<<

> Fringe size: 14179
> First 20 nodes: (D:11,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a e)', '(pick-up b)', '(stack e c)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
unstack,(clear ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 2498  <<<<

> Fringe size: 14198
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a e)', '(pick-up b)', '(stack e c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
unstack,(clear ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 2499  <<<<

> Fringe size: 14200
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b a)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2500  <<<<

> Fringe size: 14218
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b a)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=19

>>>>  A* iteration 2501  <<<<

> Fringe size: 14221
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b a)', '(pick-up b)', '(stack a b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 2502  <<<<

> Fringe size: 14240
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b a)', '(pick-up b)', '(stack a b)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 2503  <<<<

> Fringe size: 14243
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b a)', '(pick-up b)', '(stack a c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 2504  <<<<

> Fringe size: 14262
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b a)', '(pick-up b)', '(stack a c)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 2505  <<<<

> Fringe size: 14265
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b a)', '(pick-up b)', '(stack a d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 2506  <<<<

> Fringe size: 14284
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b a)', '(pick-up b)', '(stack a d)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 2507  <<<<

> Fringe size: 14287
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b a)', '(pick-up b)', '(stack a e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 2508  <<<<

> Fringe size: 14306
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b a)', '(pick-up b)', '(stack a e)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 2509  <<<<

> Fringe size: 14308
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b a)', '(pick-up b)', '(stack e a)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2510  <<<<

> Fringe size: 14326
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b a)', '(pick-up b)', '(stack e a)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=19
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(a, e)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(a, e)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(a, b)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(a, b)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom on(a, c)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom on(a, c)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(a, d)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(a, d)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(a, e)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(a, e)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom on(e, a)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom on(e, a)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']

>>>>  A* iteration 2511  <<<<

> Fringe size: 14328
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b a)', '(pick-up b)', '(stack e b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2512  <<<<

> Fringe size: 14346
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b a)', '(pick-up b)', '(stack e b)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=19

>>>>  A* iteration 2513  <<<<

> Fringe size: 14348
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b a)', '(pick-up b)', '(stack e c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2514  <<<<

> Fringe size: 14366
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b a)', '(pick-up b)', '(stack e c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=19

>>>>  A* iteration 2515  <<<<

> Fringe size: 14368
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b a)', '(pick-up b)', '(stack e d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2516  <<<<

> Fringe size: 14386
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b a)', '(pick-up b)', '(stack e d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=19

>>>>  A* iteration 2517  <<<<

> Fringe size: 14388
> First 20 nodes: (D:11,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b a)', '(pick-up b)', '(stack e e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2518  <<<<

> Fringe size: 14406
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b a)', '(pick-up b)', '(stack e e)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=19

>>>>  A* iteration 2519  <<<<

> Fringe size: 14408
> First 20 nodes: (D:9,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2520  <<<<

> Fringe size: 14426
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b b)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=19

>>>>  A* iteration 2521  <<<<

> Fringe size: 14429
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b b)', '(pick-up b)', '(stack a b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 2522  <<<<

> Fringe size: 14448
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b b)', '(pick-up b)', '(stack a b)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 2523  <<<<

> Fringe size: 14451
> First 20 nodes: (D:11,C:2), (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b b)', '(pick-up b)', '(stack a c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 2524  <<<<

> Fringe size: 14470
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b b)', '(pick-up b)', '(stack a c)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(e, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(e, d)>]
> Possible groundings:
['(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(a, b)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(a, b)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom handempty()>, <Atom on(a, c)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom handempty()>, <Atom on(a, c)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom handempty()>, <Atom on(a, c)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]

>>>>  A* iteration 2525  <<<<

> Fringe size: 14489
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b b)', '(pick-up b)', '(stack a c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
unstack,(clear ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 2526  <<<<

> Fringe size: 14492
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b b)', '(pick-up b)', '(stack a d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 2527  <<<<

> Fringe size: 14511
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b b)', '(pick-up b)', '(stack a d)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 2528  <<<<

> Fringe size: 14514
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b b)', '(pick-up b)', '(stack a e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 2529  <<<<

> Fringe size: 14533
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b b)', '(pick-up b)', '(stack a e)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 2530  <<<<

> Fringe size: 14535
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b b)', '(pick-up b)', '(stack e a)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2531  <<<<

> Fringe size: 14553
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b b)', '(pick-up b)', '(stack e a)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=19

>>>>  A* iteration 2532  <<<<

> Fringe size: 14555
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b b)', '(pick-up b)', '(stack e b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2533  <<<<

> Fringe size: 14573
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b b)', '(pick-up b)', '(stack e b)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=19

>>>>  A* iteration 2534  <<<<

> Fringe size: 14575
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b b)', '(pick-up b)', '(stack e c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2535  <<<<

> Fringe size: 14593
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b b)', '(pick-up b)', '(stack e c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=19

>>>>  A* iteration 2536  <<<<

> Fringe size: 14595
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b b)', '(pick-up b)', '(stack e d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2537  <<<<

> Fringe size: 14613
> First 20 nodes: (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b b)', '(pick-up b)', '(stack e d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=19

>>>>  A* iteration 2538  <<<<

> Fringe size: 14615
> First 20 nodes: (D:11,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b b)', '(pick-up b)', '(stack e e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2539  <<<<

> Fringe size: 14633
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b b)', '(pick-up b)', '(stack e e)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=19
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(a, d)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(a, d)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(a, e)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(a, e)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom on(e, a)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom on(e, a)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(e, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(e, d)>]
> Possible groundings:
['(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']

>>>>  A* iteration 2540  <<<<

> Fringe size: 14651
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b b)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
unstack,(clear ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=19

>>>>  A* iteration 2541  <<<<

> Fringe size: 14654
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b b)', '(pick-up e)', '(stack a b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
unstack,(clear ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 2542  <<<<

> Fringe size: 14673
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b b)', '(pick-up e)', '(stack a b)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
unstack,(clear ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 2543  <<<<

> Fringe size: 14676
> First 20 nodes: (D:11,C:2), (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b b)', '(pick-up e)', '(stack a c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
unstack,(clear ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 2544  <<<<

> Fringe size: 14695
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b b)', '(pick-up e)', '(stack a c)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
unstack,(clear ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 2545  <<<<

> Fringe size: 14714
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b b)', '(pick-up e)', '(stack a c)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
unstack,(clear ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 2546  <<<<

> Fringe size: 14716
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b b)', '(pick-up e)', '(stack e b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
unstack,(clear ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2547  <<<<

> Fringe size: 14718
> First 20 nodes: (D:11,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b b)', '(pick-up e)', '(stack e c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
unstack,(clear ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2548  <<<<

> Fringe size: 14736
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b b)', '(pick-up e)', '(stack e c)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
unstack,(clear ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=19

>>>>  A* iteration 2549  <<<<

> Fringe size: 14738
> First 20 nodes: (D:9,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2550  <<<<

> Fringe size: 14756
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b c)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=19

>>>>  A* iteration 2551  <<<<

> Fringe size: 14759
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b c)', '(pick-up b)', '(stack a b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 2552  <<<<

> Fringe size: 14778
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b c)', '(pick-up b)', '(stack a b)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 2553  <<<<

> Fringe size: 14781
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b c)', '(pick-up b)', '(stack a c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(a, b)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(a, b)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom handempty()>, <Atom on(a, c)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom handempty()>, <Atom on(a, c)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom handempty()>, <Atom on(a, c)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(a, b)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(a, b)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom on(a, c)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']

>>>>  A* iteration 2554  <<<<

> Fringe size: 14800
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b c)', '(pick-up b)', '(stack a c)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 2555  <<<<

> Fringe size: 14803
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b c)', '(pick-up b)', '(stack a d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 2556  <<<<

> Fringe size: 14822
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b c)', '(pick-up b)', '(stack a d)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 2557  <<<<

> Fringe size: 14825
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b c)', '(pick-up b)', '(stack a e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 2558  <<<<

> Fringe size: 14844
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b c)', '(pick-up b)', '(stack a e)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 2559  <<<<

> Fringe size: 14846
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b c)', '(pick-up b)', '(stack e a)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2560  <<<<

> Fringe size: 14864
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b c)', '(pick-up b)', '(stack e a)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=19

>>>>  A* iteration 2561  <<<<

> Fringe size: 14866
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b c)', '(pick-up b)', '(stack e b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2562  <<<<

> Fringe size: 14884
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b c)', '(pick-up b)', '(stack e b)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=19

>>>>  A* iteration 2563  <<<<

> Fringe size: 14886
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b c)', '(pick-up b)', '(stack e c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2564  <<<<

> Fringe size: 14904
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b c)', '(pick-up b)', '(stack e c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=19

>>>>  A* iteration 2565  <<<<

> Fringe size: 14906
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b c)', '(pick-up b)', '(stack e d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2566  <<<<

> Fringe size: 14924
> First 20 nodes: (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b c)', '(pick-up b)', '(stack e d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=19

>>>>  A* iteration 2567  <<<<

> Fringe size: 14926
> First 20 nodes: (D:11,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b c)', '(pick-up b)', '(stack e e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom on(a, c)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(a, d)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(a, d)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(a, e)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(a, e)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom on(e, a)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom on(e, a)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(e, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(e, d)>]
> Possible groundings:
['(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]

>>>>  A* iteration 2568  <<<<

> Fringe size: 14944
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b c)', '(pick-up b)', '(stack e e)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=19

>>>>  A* iteration 2569  <<<<

> Fringe size: 14962
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
unstack,(clear ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=19

>>>>  A* iteration 2570  <<<<

> Fringe size: 14965
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b c)', '(pick-up e)', '(stack a b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
unstack,(clear ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 2571  <<<<

> Fringe size: 14984
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b c)', '(pick-up e)', '(stack a b)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
unstack,(clear ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 2572  <<<<

> Fringe size: 14986
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b c)', '(pick-up e)', '(stack e b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
unstack,(clear ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2573  <<<<

> Fringe size: 14988
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2574  <<<<

> Fringe size: 15006
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b d)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=19

>>>>  A* iteration 2575  <<<<

> Fringe size: 15009
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b d)', '(pick-up b)', '(stack a b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 2576  <<<<

> Fringe size: 15028
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b d)', '(pick-up b)', '(stack a b)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 2577  <<<<

> Fringe size: 15031
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b d)', '(pick-up b)', '(stack a c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 2578  <<<<

> Fringe size: 15050
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b d)', '(pick-up b)', '(stack a c)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 2579  <<<<

> Fringe size: 15053
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b d)', '(pick-up b)', '(stack a d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 2580  <<<<

> Fringe size: 15072
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b d)', '(pick-up b)', '(stack a d)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 2581  <<<<

> Fringe size: 15075
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b d)', '(pick-up b)', '(stack a e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4
> Possible groundings:
['(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(a, b)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(a, b)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(a, b)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(a, b)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom on(a, c)>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom on(a, c)>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(a, d)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(a, d)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(a, e)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(a, e)>]

>>>>  A* iteration 2582  <<<<

> Fringe size: 15094
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b d)', '(pick-up b)', '(stack a e)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 2583  <<<<

> Fringe size: 15096
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b d)', '(pick-up b)', '(stack e a)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2584  <<<<

> Fringe size: 15114
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b d)', '(pick-up b)', '(stack e a)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=19

>>>>  A* iteration 2585  <<<<

> Fringe size: 15116
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b d)', '(pick-up b)', '(stack e b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2586  <<<<

> Fringe size: 15134
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b d)', '(pick-up b)', '(stack e b)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=19

>>>>  A* iteration 2587  <<<<

> Fringe size: 15136
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b d)', '(pick-up b)', '(stack e c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2588  <<<<

> Fringe size: 15154
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b d)', '(pick-up b)', '(stack e c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=19

>>>>  A* iteration 2589  <<<<

> Fringe size: 15156
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b d)', '(pick-up b)', '(stack e d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2590  <<<<

> Fringe size: 15174
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b d)', '(pick-up b)', '(stack e d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=19

>>>>  A* iteration 2591  <<<<

> Fringe size: 15176
> First 20 nodes: (D:11,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b d)', '(pick-up b)', '(stack e e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2592  <<<<

> Fringe size: 15194
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b d)', '(pick-up b)', '(stack e e)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=19

>>>>  A* iteration 2593  <<<<

> Fringe size: 15196
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2594  <<<<

> Fringe size: 15214
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b e)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=19

>>>>  A* iteration 2595  <<<<

> Fringe size: 15217
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b e)', '(pick-up b)', '(stack a b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 2596  <<<<

> Fringe size: 15236
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b e)', '(pick-up b)', '(stack a b)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom on(e, a)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom on(e, a)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(e, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(e, d)>]
> Possible groundings:
['(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>]
> Possible groundings:
['(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(a, b)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(a, b)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']

>>>>  A* iteration 2597  <<<<

> Fringe size: 15239
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b e)', '(pick-up b)', '(stack a c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 2598  <<<<

> Fringe size: 15258
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b e)', '(pick-up b)', '(stack a c)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 2599  <<<<

> Fringe size: 15261
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b e)', '(pick-up b)', '(stack a d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 2600  <<<<

> Fringe size: 15280
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b e)', '(pick-up b)', '(stack a d)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 2601  <<<<

> Fringe size: 15283
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b e)', '(pick-up b)', '(stack a e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 2602  <<<<

> Fringe size: 15302
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b e)', '(pick-up b)', '(stack a e)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 2603  <<<<

> Fringe size: 15304
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b e)', '(pick-up b)', '(stack e a)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2604  <<<<

> Fringe size: 15322
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b e)', '(pick-up b)', '(stack e a)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=19

>>>>  A* iteration 2605  <<<<

> Fringe size: 15324
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b e)', '(pick-up b)', '(stack e b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2606  <<<<

> Fringe size: 15342
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b e)', '(pick-up b)', '(stack e b)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=19

>>>>  A* iteration 2607  <<<<

> Fringe size: 15344
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b e)', '(pick-up b)', '(stack e c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2608  <<<<

> Fringe size: 15362
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b e)', '(pick-up b)', '(stack e c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=19

>>>>  A* iteration 2609  <<<<

> Fringe size: 15364
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b e)', '(pick-up b)', '(stack e d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2610  <<<<

> Fringe size: 15382
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b e)', '(pick-up b)', '(stack e d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=19
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom on(a, c)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom on(a, c)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(a, d)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(a, d)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom on(a, e)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom on(a, e)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom on(e, a)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom on(e, a)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>]
> Possible groundings:
['(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>]
> Possible groundings:
['(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>]
> Possible groundings:
['(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom on(e, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom on(e, d)>]
> Possible groundings:
['(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']

>>>>  A* iteration 2611  <<<<

> Fringe size: 15384
> First 20 nodes: (D:11,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b e)', '(pick-up b)', '(stack e e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2612  <<<<

> Fringe size: 15402
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack b e)', '(pick-up b)', '(stack e e)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=19

>>>>  A* iteration 2613  <<<<

> Fringe size: 15404
> First 20 nodes: (D:9,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2614  <<<<

> Fringe size: 15422
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e e)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
unstack,(clear ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=19

>>>>  A* iteration 2615  <<<<

> Fringe size: 15425
> First 20 nodes: (D:11,C:2), (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e e)', '(pick-up b)', '(stack a c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
unstack,(clear ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 2616  <<<<

> Fringe size: 15444
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e e)', '(pick-up b)', '(stack a c)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
unstack,(clear ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 2617  <<<<

> Fringe size: 15463
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e e)', '(pick-up b)', '(stack a c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
unstack,(clear ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 2618  <<<<

> Fringe size: 15466
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e e)', '(pick-up b)', '(stack a e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
unstack,(clear ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 2619  <<<<

> Fringe size: 15485
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e e)', '(pick-up b)', '(stack a e)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
unstack,(clear ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 2620  <<<<

> Fringe size: 15487
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e e)', '(pick-up b)', '(stack b c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
unstack,(clear ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2621  <<<<

> Fringe size: 15505
> First 20 nodes: (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e e)', '(pick-up b)', '(stack b c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
unstack,(clear ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=19

>>>>  A* iteration 2622  <<<<

> Fringe size: 15507
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e e)', '(pick-up b)', '(stack b e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
unstack,(clear ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2623  <<<<

> Fringe size: 15525
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e e)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=19

>>>>  A* iteration 2624  <<<<

> Fringe size: 15528
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e e)', '(pick-up e)', '(stack a b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>]
> Possible groundings:
['(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom on(a, c)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom on(a, c)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom on(a, c)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(a, e)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(a, e)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(a, b)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']

>>>>  A* iteration 2625  <<<<

> Fringe size: 15547
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e e)', '(pick-up e)', '(stack a b)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 2626  <<<<

> Fringe size: 15550
> First 20 nodes: (D:11,C:2), (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e e)', '(pick-up e)', '(stack a c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 2627  <<<<

> Fringe size: 15569
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e e)', '(pick-up e)', '(stack a c)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 2628  <<<<

> Fringe size: 15588
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e e)', '(pick-up e)', '(stack a c)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
unstack,(clear ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 2629  <<<<

> Fringe size: 15591
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e e)', '(pick-up e)', '(stack a d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 2630  <<<<

> Fringe size: 15610
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e e)', '(pick-up e)', '(stack a d)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 2631  <<<<

> Fringe size: 15613
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e e)', '(pick-up e)', '(stack a e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 2632  <<<<

> Fringe size: 15632
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e e)', '(pick-up e)', '(stack a e)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 2633  <<<<

> Fringe size: 15634
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e e)', '(pick-up e)', '(stack b a)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2634  <<<<

> Fringe size: 15652
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e e)', '(pick-up e)', '(stack b a)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=19

>>>>  A* iteration 2635  <<<<

> Fringe size: 15654
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e e)', '(pick-up e)', '(stack b b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2636  <<<<

> Fringe size: 15672
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e e)', '(pick-up e)', '(stack b b)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=19

>>>>  A* iteration 2637  <<<<

> Fringe size: 15674
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e e)', '(pick-up e)', '(stack b c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2638  <<<<

> Fringe size: 15692
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e e)', '(pick-up e)', '(stack b c)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=19
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(a, b)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom on(a, c)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom on(a, c)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom on(a, c)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(a, d)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(a, d)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(a, e)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(a, e)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']

>>>>  A* iteration 2639  <<<<

> Fringe size: 15694
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e e)', '(pick-up e)', '(stack b d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2640  <<<<

> Fringe size: 15712
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e e)', '(pick-up e)', '(stack b d)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=19

>>>>  A* iteration 2641  <<<<

> Fringe size: 15714
> First 20 nodes: (D:11,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e e)', '(pick-up e)', '(stack b e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2642  <<<<

> Fringe size: 15732
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e e)', '(pick-up e)', '(stack b e)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=19

>>>>  A* iteration 2643  <<<<

> Fringe size: 15734
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e a)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2644  <<<<

> Fringe size: 15752
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e a)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=19

>>>>  A* iteration 2645  <<<<

> Fringe size: 15755
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e a)', '(pick-up e)', '(stack a b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 2646  <<<<

> Fringe size: 15774
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e a)', '(pick-up e)', '(stack a b)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 2647  <<<<

> Fringe size: 15777
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e a)', '(pick-up e)', '(stack a c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 2648  <<<<

> Fringe size: 15796
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e a)', '(pick-up e)', '(stack a c)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 2649  <<<<

> Fringe size: 15799
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e a)', '(pick-up e)', '(stack a d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 2650  <<<<

> Fringe size: 15818
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e a)', '(pick-up e)', '(stack a d)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 2651  <<<<

> Fringe size: 15821
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e a)', '(pick-up e)', '(stack a e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 2652  <<<<

> Fringe size: 15840
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e a)', '(pick-up e)', '(stack a e)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>]
> Possible groundings:
['(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom on(e, a)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom on(e, a)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(a, b)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom on(e, a)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(a, b)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom on(e, a)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom on(a, c)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom on(e, a)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom on(a, c)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom on(e, a)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(a, d)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom on(e, a)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(a, d)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom on(e, a)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom on(e, a)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(a, e)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom on(e, a)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(a, e)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']

>>>>  A* iteration 2653  <<<<

> Fringe size: 15842
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e a)', '(pick-up e)', '(stack b a)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2654  <<<<

> Fringe size: 15860
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e a)', '(pick-up e)', '(stack b a)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=19

>>>>  A* iteration 2655  <<<<

> Fringe size: 15862
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e a)', '(pick-up e)', '(stack b b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2656  <<<<

> Fringe size: 15880
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e a)', '(pick-up e)', '(stack b b)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=19

>>>>  A* iteration 2657  <<<<

> Fringe size: 15882
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e a)', '(pick-up e)', '(stack b c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2658  <<<<

> Fringe size: 15900
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e a)', '(pick-up e)', '(stack b c)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=19

>>>>  A* iteration 2659  <<<<

> Fringe size: 15902
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e a)', '(pick-up e)', '(stack b d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2660  <<<<

> Fringe size: 15920
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e a)', '(pick-up e)', '(stack b d)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=19

>>>>  A* iteration 2661  <<<<

> Fringe size: 15922
> First 20 nodes: (D:11,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e a)', '(pick-up e)', '(stack b e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2662  <<<<

> Fringe size: 15940
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e a)', '(pick-up e)', '(stack b e)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=19

>>>>  A* iteration 2663  <<<<

> Fringe size: 15942
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2664  <<<<

> Fringe size: 15960
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e b)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=19

>>>>  A* iteration 2665  <<<<

> Fringe size: 15963
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e b)', '(pick-up e)', '(stack a b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 2666  <<<<

> Fringe size: 15982
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e b)', '(pick-up e)', '(stack a b)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 2667  <<<<

> Fringe size: 15985
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e b)', '(pick-up e)', '(stack a c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom on(e, a)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom on(e, a)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom on(e, a)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom on(e, a)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom on(e, a)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom on(e, a)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom on(e, a)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom on(e, a)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom on(e, a)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom on(e, a)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>]
> Possible groundings:
['(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(a, b)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(a, b)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom on(a, c)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']

>>>>  A* iteration 2668  <<<<

> Fringe size: 16004
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e b)', '(pick-up e)', '(stack a c)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 2669  <<<<

> Fringe size: 16007
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e b)', '(pick-up e)', '(stack a d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 2670  <<<<

> Fringe size: 16026
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e b)', '(pick-up e)', '(stack a d)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 2671  <<<<

> Fringe size: 16029
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e b)', '(pick-up e)', '(stack a e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 2672  <<<<

> Fringe size: 16048
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e b)', '(pick-up e)', '(stack a e)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 2673  <<<<

> Fringe size: 16050
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e b)', '(pick-up e)', '(stack b a)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2674  <<<<

> Fringe size: 16068
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e b)', '(pick-up e)', '(stack b a)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=19

>>>>  A* iteration 2675  <<<<

> Fringe size: 16070
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e b)', '(pick-up e)', '(stack b b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2676  <<<<

> Fringe size: 16088
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e b)', '(pick-up e)', '(stack b b)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=19

>>>>  A* iteration 2677  <<<<

> Fringe size: 16090
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e b)', '(pick-up e)', '(stack b c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2678  <<<<

> Fringe size: 16108
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e b)', '(pick-up e)', '(stack b c)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=19

>>>>  A* iteration 2679  <<<<

> Fringe size: 16110
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e b)', '(pick-up e)', '(stack b d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2680  <<<<

> Fringe size: 16128
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e b)', '(pick-up e)', '(stack b d)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=19

>>>>  A* iteration 2681  <<<<

> Fringe size: 16130
> First 20 nodes: (D:11,C:2), (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e b)', '(pick-up e)', '(stack b e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom on(a, c)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(a, d)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(a, d)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(a, e)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(a, e)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>]

>>>>  A* iteration 2682  <<<<

> Fringe size: 16148
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e b)', '(pick-up e)', '(stack b e)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=19

>>>>  A* iteration 2683  <<<<

> Fringe size: 16150
> First 20 nodes: (D:9,C:2), (D:9,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2684  <<<<

> Fringe size: 16168
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e c)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
unstack,(clear ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=19

>>>>  A* iteration 2685  <<<<

> Fringe size: 16171
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e c)', '(pick-up b)', '(stack a e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
unstack,(clear ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 2686  <<<<

> Fringe size: 16190
> First 20 nodes: (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e c)', '(pick-up b)', '(stack a e)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
unstack,(clear ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 2687  <<<<

> Fringe size: 16192
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e c)', '(pick-up b)', '(stack b e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
unstack,(clear ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2688  <<<<

> Fringe size: 16210
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=19

>>>>  A* iteration 2689  <<<<

> Fringe size: 16213
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e c)', '(pick-up e)', '(stack a b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 2690  <<<<

> Fringe size: 16232
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e c)', '(pick-up e)', '(stack a b)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 2691  <<<<

> Fringe size: 16235
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e c)', '(pick-up e)', '(stack a c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 2692  <<<<

> Fringe size: 16254
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e c)', '(pick-up e)', '(stack a c)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 2693  <<<<

> Fringe size: 16257
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e c)', '(pick-up e)', '(stack a d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 2694  <<<<

> Fringe size: 16276
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e c)', '(pick-up e)', '(stack a d)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 2695  <<<<

> Fringe size: 16279
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e c)', '(pick-up e)', '(stack a e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4
> Possible groundings:
['(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(a, e)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(a, e)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(a, b)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(a, b)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom on(a, c)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom on(a, c)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(a, d)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(a, d)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(a, e)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(a, e)>]

>>>>  A* iteration 2696  <<<<

> Fringe size: 16298
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e c)', '(pick-up e)', '(stack a e)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 2697  <<<<

> Fringe size: 16300
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e c)', '(pick-up e)', '(stack b a)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2698  <<<<

> Fringe size: 16318
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e c)', '(pick-up e)', '(stack b a)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=19

>>>>  A* iteration 2699  <<<<

> Fringe size: 16320
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e c)', '(pick-up e)', '(stack b b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2700  <<<<

> Fringe size: 16338
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e c)', '(pick-up e)', '(stack b b)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=19

>>>>  A* iteration 2701  <<<<

> Fringe size: 16340
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e c)', '(pick-up e)', '(stack b c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2702  <<<<

> Fringe size: 16358
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e c)', '(pick-up e)', '(stack b c)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=19

>>>>  A* iteration 2703  <<<<

> Fringe size: 16360
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e c)', '(pick-up e)', '(stack b d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2704  <<<<

> Fringe size: 16378
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e c)', '(pick-up e)', '(stack b d)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=19

>>>>  A* iteration 2705  <<<<

> Fringe size: 16380
> First 20 nodes: (D:11,C:2), (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e c)', '(pick-up e)', '(stack b e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2706  <<<<

> Fringe size: 16398
> First 20 nodes: (D:8,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e c)', '(pick-up e)', '(stack b e)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=19

>>>>  A* iteration 2707  <<<<

> Fringe size: 16400
> First 20 nodes: (D:9,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2708  <<<<

> Fringe size: 16418
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=19

>>>>  A* iteration 2709  <<<<

> Fringe size: 16421
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e d)', '(pick-up e)', '(stack a b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 2710  <<<<

> Fringe size: 16440
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e d)', '(pick-up e)', '(stack a b)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>]
> Possible groundings:
['(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(e, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(e, d)>]
> Possible groundings:
['(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(a, b)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(e, d)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(a, b)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(e, d)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']

>>>>  A* iteration 2711  <<<<

> Fringe size: 16443
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e d)', '(pick-up e)', '(stack a c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 2712  <<<<

> Fringe size: 16462
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e d)', '(pick-up e)', '(stack a c)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 2713  <<<<

> Fringe size: 16465
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e d)', '(pick-up e)', '(stack a d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 2714  <<<<

> Fringe size: 16484
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e d)', '(pick-up e)', '(stack a d)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 2715  <<<<

> Fringe size: 16487
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e d)', '(pick-up e)', '(stack a e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 2716  <<<<

> Fringe size: 16506
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e d)', '(pick-up e)', '(stack a e)', '(pick-up a)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=20

>>>>  A* iteration 2717  <<<<

> Fringe size: 16508
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e d)', '(pick-up e)', '(stack b a)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2718  <<<<

> Fringe size: 16526
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e d)', '(pick-up e)', '(stack b a)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=19

>>>>  A* iteration 2719  <<<<

> Fringe size: 16528
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e d)', '(pick-up e)', '(stack b b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2720  <<<<

> Fringe size: 16546
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e d)', '(pick-up e)', '(stack b b)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=19

>>>>  A* iteration 2721  <<<<

> Fringe size: 16548
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e d)', '(pick-up e)', '(stack b c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2722  <<<<

> Fringe size: 16566
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e d)', '(pick-up e)', '(stack b c)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=19

>>>>  A* iteration 2723  <<<<

> Fringe size: 16568
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e d)', '(pick-up e)', '(stack b d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2724  <<<<

> Fringe size: 16586
> First 20 nodes: (D:10,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e d)', '(pick-up e)', '(stack b d)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=19
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom on(a, c)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(e, d)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom on(a, c)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(e, d)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(a, d)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(e, d)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(a, d)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(e, d)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(e, d)>, <Atom on(a, e)>]
> Possible groundings:
['(pick-up a)', '(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom clear(a)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(e, d)>, <Atom on(a, e)>]
> Possible groundings:
['(stack a a)', '(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(e, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(e, d)>]
> Possible groundings:
['(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(e, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(e, d)>]
> Possible groundings:
['(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(e, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(e, d)>]
> Possible groundings:
['(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(e, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(e, d)>]
> Possible groundings:
['(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']

>>>>  A* iteration 2725  <<<<

> Fringe size: 16588
> First 20 nodes: (D:11,C:2), (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e d)', '(pick-up e)', '(stack b e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2726  <<<<

> Fringe size: 16606
> First 20 nodes: (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack e d)', '(pick-up e)', '(stack b e)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=19

>>>>  A* iteration 2727  <<<<

> Fringe size: 16617
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=7
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack c c)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=12

>>>>  A* iteration 2728  <<<<

> Fringe size: 16619
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack c c)', '(stack c b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2729  <<<<

> Fringe size: 16630
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack c c)', '(stack c b)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
unstack,(clear ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=12

>>>>  A* iteration 2730  <<<<

> Fringe size: 16632
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack c c)', '(stack c b)', '(pick-up e)', '(stack e c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
unstack,(clear ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2731  <<<<

> Fringe size: 16634
> First 20 nodes: (D:9,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack c c)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2732  <<<<

> Fringe size: 16645
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack c c)', '(stack c c)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=12

>>>>  A* iteration 2733  <<<<

> Fringe size: 16647
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack c c)', '(stack c c)', '(pick-up b)', '(stack e b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2734  <<<<

> Fringe size: 16658
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack c c)', '(stack c c)', '(pick-up b)', '(stack e b)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=12

>>>>  A* iteration 2735  <<<<

> Fringe size: 16660
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack c c)', '(stack c c)', '(pick-up b)', '(stack e c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2736  <<<<

> Fringe size: 16671
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack c c)', '(stack c c)', '(pick-up b)', '(stack e c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=12

>>>>  A* iteration 2737  <<<<

> Fringe size: 16673
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack c c)', '(stack c c)', '(pick-up b)', '(stack e d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2738  <<<<

> Fringe size: 16684
> First 20 nodes: (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack c c)', '(stack c c)', '(pick-up b)', '(stack e d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=12

>>>>  A* iteration 2739  <<<<

> Fringe size: 16686
> First 20 nodes: (D:11,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack c c)', '(stack c c)', '(pick-up b)', '(stack e e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2740  <<<<

> Fringe size: 16697
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack c c)', '(stack c c)', '(pick-up b)', '(stack e e)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=12

>>>>  A* iteration 2741  <<<<

> Fringe size: 16708
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack c c)', '(stack c c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
unstack,(clear ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=12
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom on(e, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom on(e, d)>]
> Possible groundings:
['(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, b)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, b)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, b)>, <Atom on(b, a)>, <Atom on(e, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(e, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(e, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']

>>>>  A* iteration 2742  <<<<

> Fringe size: 16710
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack c c)', '(stack c c)', '(pick-up e)', '(stack e b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
unstack,(clear ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2743  <<<<

> Fringe size: 16712
> First 20 nodes: (D:11,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack c c)', '(stack c c)', '(pick-up e)', '(stack e c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
unstack,(clear ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2744  <<<<

> Fringe size: 16723
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack c c)', '(stack c c)', '(pick-up e)', '(stack e c)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
unstack,(clear ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=12

>>>>  A* iteration 2745  <<<<

> Fringe size: 16725
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack c c)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2746  <<<<

> Fringe size: 16736
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack c c)', '(stack c d)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=12

>>>>  A* iteration 2747  <<<<

> Fringe size: 16738
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack c c)', '(stack c d)', '(pick-up b)', '(stack e b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2748  <<<<

> Fringe size: 16749
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack c c)', '(stack c d)', '(pick-up b)', '(stack e b)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=12

>>>>  A* iteration 2749  <<<<

> Fringe size: 16751
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack c c)', '(stack c d)', '(pick-up b)', '(stack e c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2750  <<<<

> Fringe size: 16762
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack c c)', '(stack c d)', '(pick-up b)', '(stack e c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=12

>>>>  A* iteration 2751  <<<<

> Fringe size: 16764
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack c c)', '(stack c d)', '(pick-up b)', '(stack e d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2752  <<<<

> Fringe size: 16775
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack c c)', '(stack c d)', '(pick-up b)', '(stack e d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=12

>>>>  A* iteration 2753  <<<<

> Fringe size: 16777
> First 20 nodes: (D:11,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack c c)', '(stack c d)', '(pick-up b)', '(stack e e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2754  <<<<

> Fringe size: 16788
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack c c)', '(stack c d)', '(pick-up b)', '(stack e e)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=12

>>>>  A* iteration 2755  <<<<

> Fringe size: 16790
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack c c)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2756  <<<<

> Fringe size: 16801
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack c c)', '(stack c e)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=12

>>>>  A* iteration 2757  <<<<

> Fringe size: 16803
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack c c)', '(stack c e)', '(pick-up b)', '(stack e b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2758  <<<<

> Fringe size: 16814
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack c c)', '(stack c e)', '(pick-up b)', '(stack e b)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=12

>>>>  A* iteration 2759  <<<<

> Fringe size: 16816
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack c c)', '(stack c e)', '(pick-up b)', '(stack e c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>, <Atom on(e, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>, <Atom on(e, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']

>>>>  A* iteration 2760  <<<<

> Fringe size: 16827
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack c c)', '(stack c e)', '(pick-up b)', '(stack e c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=12

>>>>  A* iteration 2761  <<<<

> Fringe size: 16829
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack c c)', '(stack c e)', '(pick-up b)', '(stack e d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2762  <<<<

> Fringe size: 16840
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack c c)', '(stack c e)', '(pick-up b)', '(stack e d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=12

>>>>  A* iteration 2763  <<<<

> Fringe size: 16842
> First 20 nodes: (D:11,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack c c)', '(stack c e)', '(pick-up b)', '(stack e e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2764  <<<<

> Fringe size: 16853
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack c c)', '(stack c e)', '(pick-up b)', '(stack e e)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=12

>>>>  A* iteration 2765  <<<<

> Fringe size: 16855
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack c c)', '(stack e b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2766  <<<<

> Fringe size: 16866
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack c c)', '(stack e b)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=12

>>>>  A* iteration 2767  <<<<

> Fringe size: 16868
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack c c)', '(stack e b)', '(pick-up e)', '(stack c b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2768  <<<<

> Fringe size: 16870
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack c c)', '(stack e b)', '(pick-up e)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2769  <<<<

> Fringe size: 16872
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack c c)', '(stack e b)', '(pick-up e)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2770  <<<<

> Fringe size: 16874
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack c c)', '(stack e b)', '(pick-up e)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2771  <<<<

> Fringe size: 16876
> First 20 nodes: (D:9,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack c c)', '(stack e c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2772  <<<<

> Fringe size: 16887
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack c c)', '(stack e c)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=12

>>>>  A* iteration 2773  <<<<

> Fringe size: 16889
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack c c)', '(stack e c)', '(pick-up b)', '(stack c b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2774  <<<<

> Fringe size: 16900
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack c c)', '(stack e c)', '(pick-up b)', '(stack c b)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=12

>>>>  A* iteration 2775  <<<<

> Fringe size: 16902
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack c c)', '(stack e c)', '(pick-up b)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2776  <<<<

> Fringe size: 16913
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack c c)', '(stack e c)', '(pick-up b)', '(stack c c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=12

>>>>  A* iteration 2777  <<<<

> Fringe size: 16915
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack c c)', '(stack e c)', '(pick-up b)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(e, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(e, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, b)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, b)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, b)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']

>>>>  A* iteration 2778  <<<<

> Fringe size: 16926
> First 20 nodes: (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack c c)', '(stack e c)', '(pick-up b)', '(stack c d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=12

>>>>  A* iteration 2779  <<<<

> Fringe size: 16928
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack c c)', '(stack e c)', '(pick-up b)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2780  <<<<

> Fringe size: 16939
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack c c)', '(stack e c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=12

>>>>  A* iteration 2781  <<<<

> Fringe size: 16941
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack c c)', '(stack e c)', '(pick-up e)', '(stack c b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2782  <<<<

> Fringe size: 16943
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack c c)', '(stack e c)', '(pick-up e)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2783  <<<<

> Fringe size: 16954
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack c c)', '(stack e c)', '(pick-up e)', '(stack c c)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=12

>>>>  A* iteration 2784  <<<<

> Fringe size: 16956
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack c c)', '(stack e c)', '(pick-up e)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2785  <<<<

> Fringe size: 16967
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack c c)', '(stack e c)', '(pick-up e)', '(stack c d)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=12

>>>>  A* iteration 2786  <<<<

> Fringe size: 16969
> First 20 nodes: (D:11,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack c c)', '(stack e c)', '(pick-up e)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2787  <<<<

> Fringe size: 16980
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack c c)', '(stack e c)', '(pick-up e)', '(stack c e)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=12

>>>>  A* iteration 2788  <<<<

> Fringe size: 16982
> First 20 nodes: (D:9,C:2), (D:9,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack c c)', '(stack e d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2789  <<<<

> Fringe size: 16993
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack c c)', '(stack e d)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=12

>>>>  A* iteration 2790  <<<<

> Fringe size: 16995
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack c c)', '(stack e d)', '(pick-up b)', '(stack c b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2791  <<<<

> Fringe size: 17006
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack c c)', '(stack e d)', '(pick-up b)', '(stack c b)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=12

>>>>  A* iteration 2792  <<<<

> Fringe size: 17008
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack c c)', '(stack e d)', '(pick-up b)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2793  <<<<

> Fringe size: 17019
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack c c)', '(stack e d)', '(pick-up b)', '(stack c c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=12

>>>>  A* iteration 2794  <<<<

> Fringe size: 17021
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack c c)', '(stack e d)', '(pick-up b)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, b)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(e, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(e, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, b)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(e, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, b)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(e, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(e, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(e, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>, <Atom on(e, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']

>>>>  A* iteration 2795  <<<<

> Fringe size: 17032
> First 20 nodes: (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack c c)', '(stack e d)', '(pick-up b)', '(stack c d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=12

>>>>  A* iteration 2796  <<<<

> Fringe size: 17034
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack c c)', '(stack e d)', '(pick-up b)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2797  <<<<

> Fringe size: 17045
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack c c)', '(stack e d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=12

>>>>  A* iteration 2798  <<<<

> Fringe size: 17047
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack c c)', '(stack e d)', '(pick-up e)', '(stack c b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2799  <<<<

> Fringe size: 17049
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack c c)', '(stack e d)', '(pick-up e)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2800  <<<<

> Fringe size: 17060
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack c c)', '(stack e d)', '(pick-up e)', '(stack c c)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=12

>>>>  A* iteration 2801  <<<<

> Fringe size: 17062
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack c c)', '(stack e d)', '(pick-up e)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2802  <<<<

> Fringe size: 17073
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack c c)', '(stack e d)', '(pick-up e)', '(stack c d)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=12

>>>>  A* iteration 2803  <<<<

> Fringe size: 17075
> First 20 nodes: (D:11,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack c c)', '(stack e d)', '(pick-up e)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2804  <<<<

> Fringe size: 17086
> First 20 nodes: (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack c c)', '(stack e d)', '(pick-up e)', '(stack c e)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=12

>>>>  A* iteration 2805  <<<<

> Fringe size: 17088
> First 20 nodes: (D:9,C:2), (D:9,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack c c)', '(stack e e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2806  <<<<

> Fringe size: 17099
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack c c)', '(stack e e)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=12

>>>>  A* iteration 2807  <<<<

> Fringe size: 17101
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack c c)', '(stack e e)', '(pick-up b)', '(stack c b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2808  <<<<

> Fringe size: 17112
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack c c)', '(stack e e)', '(pick-up b)', '(stack c b)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=12

>>>>  A* iteration 2809  <<<<

> Fringe size: 17114
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack c c)', '(stack e e)', '(pick-up b)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2810  <<<<

> Fringe size: 17125
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack c c)', '(stack e e)', '(pick-up b)', '(stack c c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=12

>>>>  A* iteration 2811  <<<<

> Fringe size: 17127
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:9,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack c c)', '(stack e e)', '(pick-up b)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>, <Atom on(e, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(e, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(e, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, b)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(e, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(e, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(e, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>, <Atom on(e, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>, <Atom on(e, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(e, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(e, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, b)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, b)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']

>>>>  A* iteration 2812  <<<<

> Fringe size: 17138
> First 20 nodes: (D:10,C:2), (D:9,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack c c)', '(stack e e)', '(pick-up b)', '(stack c d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=12

>>>>  A* iteration 2813  <<<<

> Fringe size: 17140
> First 20 nodes: (D:9,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack c c)', '(stack e e)', '(pick-up b)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2814  <<<<

> Fringe size: 17151
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack c c)', '(stack e e)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=12

>>>>  A* iteration 2815  <<<<

> Fringe size: 17153
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack c c)', '(stack e e)', '(pick-up e)', '(stack c b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2816  <<<<

> Fringe size: 17155
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack c c)', '(stack e e)', '(pick-up e)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2817  <<<<

> Fringe size: 17166
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack c c)', '(stack e e)', '(pick-up e)', '(stack c c)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=12

>>>>  A* iteration 2818  <<<<

> Fringe size: 17168
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack c c)', '(stack e e)', '(pick-up e)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2819  <<<<

> Fringe size: 17179
> First 20 nodes: (D:10,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack c c)', '(stack e e)', '(pick-up e)', '(stack c d)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=12

>>>>  A* iteration 2820  <<<<

> Fringe size: 17181
> First 20 nodes: (D:11,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack c c)', '(stack e e)', '(pick-up e)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2821  <<<<

> Fringe size: 17192
> First 20 nodes: (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down b)', '(unstack c c)', '(stack e e)', '(pick-up e)', '(stack c e)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=12

>>>>  A* iteration 2822  <<<<

> Fringe size: 17194
> First 20 nodes: (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=6
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down c)']
> Next lifted action: unstack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2823  <<<<

> Fringe size: 17199
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=7
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down c)', '(unstack c c)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 2824  <<<<

> Fringe size: 17201
> First 20 nodes: (D:9,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down c)', '(unstack c c)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2825  <<<<

> Fringe size: 17206
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down c)', '(unstack c c)', '(stack c c)', '(pick-up c)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 2826  <<<<

> Fringe size: 17208
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down c)', '(unstack c c)', '(stack c c)', '(pick-up c)', '(stack e c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2827  <<<<

> Fringe size: 17213
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down c)', '(unstack c c)', '(stack c c)', '(pick-up c)', '(stack e c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 2828  <<<<

> Fringe size: 17215
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down c)', '(unstack c c)', '(stack c c)', '(pick-up c)', '(stack e d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2829  <<<<

> Fringe size: 17220
> First 20 nodes: (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down c)', '(unstack c c)', '(stack c c)', '(pick-up c)', '(stack e d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 2830  <<<<

> Fringe size: 17222
> First 20 nodes: (D:11,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down c)', '(unstack c c)', '(stack c c)', '(pick-up c)', '(stack e e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, b)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom ontable(c)>]
> Possible groundings:
['(unstack c c)', '(unstack c e)', '(unstack e b)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom ontable(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom ontable(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom ontable(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom ontable(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']

>>>>  A* iteration 2831  <<<<

> Fringe size: 17227
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down c)', '(unstack c c)', '(stack c c)', '(pick-up c)', '(stack e e)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 2832  <<<<

> Fringe size: 17232
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down c)', '(unstack c c)', '(stack c c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
unstack,(clear ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 2833  <<<<

> Fringe size: 17234
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down c)', '(unstack c c)', '(stack c c)', '(pick-up e)', '(stack e c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
unstack,(clear ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2834  <<<<

> Fringe size: 17236
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down c)', '(unstack c c)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2835  <<<<

> Fringe size: 17241
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down c)', '(unstack c c)', '(stack c d)', '(pick-up c)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 2836  <<<<

> Fringe size: 17243
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down c)', '(unstack c c)', '(stack c d)', '(pick-up c)', '(stack e c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2837  <<<<

> Fringe size: 17248
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down c)', '(unstack c c)', '(stack c d)', '(pick-up c)', '(stack e c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 2838  <<<<

> Fringe size: 17250
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down c)', '(unstack c c)', '(stack c d)', '(pick-up c)', '(stack e d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2839  <<<<

> Fringe size: 17255
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down c)', '(unstack c c)', '(stack c d)', '(pick-up c)', '(stack e d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 2840  <<<<

> Fringe size: 17257
> First 20 nodes: (D:11,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down c)', '(unstack c c)', '(stack c d)', '(pick-up c)', '(stack e e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2841  <<<<

> Fringe size: 17262
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down c)', '(unstack c c)', '(stack c d)', '(pick-up c)', '(stack e e)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 2842  <<<<

> Fringe size: 17264
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down c)', '(unstack c c)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2843  <<<<

> Fringe size: 17269
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down c)', '(unstack c c)', '(stack c e)', '(pick-up c)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 2844  <<<<

> Fringe size: 17271
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down c)', '(unstack c c)', '(stack c e)', '(pick-up c)', '(stack e c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2845  <<<<

> Fringe size: 17276
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down c)', '(unstack c c)', '(stack c e)', '(pick-up c)', '(stack e c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 2846  <<<<

> Fringe size: 17278
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down c)', '(unstack c c)', '(stack c e)', '(pick-up c)', '(stack e d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2847  <<<<

> Fringe size: 17283
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down c)', '(unstack c c)', '(stack c e)', '(pick-up c)', '(stack e d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 2848  <<<<

> Fringe size: 17285
> First 20 nodes: (D:11,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down c)', '(unstack c c)', '(stack c e)', '(pick-up c)', '(stack e e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2849  <<<<

> Fringe size: 17290
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down c)', '(unstack c c)', '(stack c e)', '(pick-up c)', '(stack e e)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 2850  <<<<

> Fringe size: 17292
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down c)', '(unstack c c)', '(stack e c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2851  <<<<

> Fringe size: 17297
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down c)', '(unstack c c)', '(stack e c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom ontable(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom ontable(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom ontable(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom on(e, c)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>, <Atom ontable(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>, <Atom on(e, d)>, <Atom ontable(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>, <Atom ontable(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom ontable(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom ontable(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom ontable(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom ontable(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom ontable(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']

>>>>  A* iteration 2852  <<<<

> Fringe size: 17299
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down c)', '(unstack c c)', '(stack e c)', '(pick-up e)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2853  <<<<

> Fringe size: 17304
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down c)', '(unstack c c)', '(stack e c)', '(pick-up e)', '(stack c c)', '(pick-up c)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 2854  <<<<

> Fringe size: 17306
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down c)', '(unstack c c)', '(stack e c)', '(pick-up e)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2855  <<<<

> Fringe size: 17311
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down c)', '(unstack c c)', '(stack e c)', '(pick-up e)', '(stack c d)', '(pick-up c)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 2856  <<<<

> Fringe size: 17313
> First 20 nodes: (D:11,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down c)', '(unstack c c)', '(stack e c)', '(pick-up e)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2857  <<<<

> Fringe size: 17318
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down c)', '(unstack c c)', '(stack e c)', '(pick-up e)', '(stack c e)', '(pick-up c)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 2858  <<<<

> Fringe size: 17320
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down c)', '(unstack c c)', '(stack e d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2859  <<<<

> Fringe size: 17325
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down c)', '(unstack c c)', '(stack e d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 2860  <<<<

> Fringe size: 17327
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down c)', '(unstack c c)', '(stack e d)', '(pick-up e)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2861  <<<<

> Fringe size: 17332
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down c)', '(unstack c c)', '(stack e d)', '(pick-up e)', '(stack c c)', '(pick-up c)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 2862  <<<<

> Fringe size: 17334
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down c)', '(unstack c c)', '(stack e d)', '(pick-up e)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2863  <<<<

> Fringe size: 17339
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down c)', '(unstack c c)', '(stack e d)', '(pick-up e)', '(stack c d)', '(pick-up c)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 2864  <<<<

> Fringe size: 17341
> First 20 nodes: (D:11,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down c)', '(unstack c c)', '(stack e d)', '(pick-up e)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2865  <<<<

> Fringe size: 17346
> First 20 nodes: (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down c)', '(unstack c c)', '(stack e d)', '(pick-up e)', '(stack c e)', '(pick-up c)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 2866  <<<<

> Fringe size: 17348
> First 20 nodes: (D:9,C:2), (D:9,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down c)', '(unstack c c)', '(stack e e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2867  <<<<

> Fringe size: 17353
> First 20 nodes: (D:10,C:2), (D:9,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down c)', '(unstack c c)', '(stack e e)', '(pick-up c)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
unstack,(clear ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 2868  <<<<

> Fringe size: 17355
> First 20 nodes: (D:9,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down c)', '(unstack c c)', '(stack e e)', '(pick-up c)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
unstack,(clear ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2869  <<<<

> Fringe size: 17360
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down c)', '(unstack c c)', '(stack e e)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 2870  <<<<

> Fringe size: 17362
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down c)', '(unstack c c)', '(stack e e)', '(pick-up e)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2871  <<<<

> Fringe size: 17367
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down c)', '(unstack c c)', '(stack e e)', '(pick-up e)', '(stack c c)', '(pick-up c)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 2872  <<<<

> Fringe size: 17369
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down c)', '(unstack c c)', '(stack e e)', '(pick-up e)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom ontable(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom on(e, c)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>, <Atom ontable(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom ontable(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom ontable(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom ontable(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>, <Atom on(e, d)>, <Atom ontable(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom ontable(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom ontable(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom ontable(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom ontable(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']

>>>>  A* iteration 2873  <<<<

> Fringe size: 17374
> First 20 nodes: (D:10,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down c)', '(unstack c c)', '(stack e e)', '(pick-up e)', '(stack c d)', '(pick-up c)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 2874  <<<<

> Fringe size: 17376
> First 20 nodes: (D:11,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down c)', '(unstack c c)', '(stack e e)', '(pick-up e)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2875  <<<<

> Fringe size: 17381
> First 20 nodes: (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down c)', '(unstack c c)', '(stack e e)', '(pick-up e)', '(stack c e)', '(pick-up c)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 2876  <<<<

> Fringe size: 17383
> First 20 nodes: (D:7,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=6
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down e)']
> Next lifted action: unstack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2877  <<<<

> Fringe size: 17393
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=7
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down e)', '(unstack c c)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=11

>>>>  A* iteration 2878  <<<<

> Fringe size: 17394
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down e)', '(unstack c c)', '(stack b c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 2879  <<<<

> Fringe size: 17405
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down e)', '(unstack c c)', '(stack b c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=12

>>>>  A* iteration 2880  <<<<

> Fringe size: 17406
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down e)', '(unstack c c)', '(stack b c)', '(pick-up e)', '(stack c b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 2881  <<<<

> Fringe size: 17407
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down e)', '(unstack c c)', '(stack b c)', '(pick-up e)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 2882  <<<<

> Fringe size: 17408
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down e)', '(unstack c c)', '(stack b c)', '(pick-up e)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 2883  <<<<

> Fringe size: 17409
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down e)', '(unstack c c)', '(stack b c)', '(pick-up e)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 2884  <<<<

> Fringe size: 17410
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down e)', '(unstack c c)', '(stack b d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 2885  <<<<

> Fringe size: 17421
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down e)', '(unstack c c)', '(stack b d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=12

>>>>  A* iteration 2886  <<<<

> Fringe size: 17422
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down e)', '(unstack c c)', '(stack b d)', '(pick-up e)', '(stack c b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 2887  <<<<

> Fringe size: 17423
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down e)', '(unstack c c)', '(stack b d)', '(pick-up e)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 2888  <<<<

> Fringe size: 17424
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down e)', '(unstack c c)', '(stack b d)', '(pick-up e)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 2889  <<<<

> Fringe size: 17425
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down e)', '(unstack c c)', '(stack b d)', '(pick-up e)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 2890  <<<<

> Fringe size: 17426
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down e)', '(unstack c c)', '(stack b e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 2891  <<<<

> Fringe size: 17427
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down e)', '(unstack c c)', '(stack c b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 2892  <<<<

> Fringe size: 17437
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down e)', '(unstack c c)', '(stack c b)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=11
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>, <Atom ontable(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up c)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom ontable(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(unstack c c)', '(unstack c e)', '(unstack e b)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom on(c, b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom on(c, b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, b)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, b)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, b)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]

>>>>  A* iteration 2893  <<<<

> Fringe size: 17438
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down e)', '(unstack c c)', '(stack c b)', '(pick-up e)', '(stack b c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 2894  <<<<

> Fringe size: 17439
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down e)', '(unstack c c)', '(stack c b)', '(pick-up e)', '(stack b d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 2895  <<<<

> Fringe size: 17440
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down e)', '(unstack c c)', '(stack c b)', '(pick-up e)', '(stack b e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 2896  <<<<

> Fringe size: 17441
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down e)', '(unstack c c)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 2897  <<<<

> Fringe size: 17451
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down e)', '(unstack c c)', '(stack c c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=11

>>>>  A* iteration 2898  <<<<

> Fringe size: 17452
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down e)', '(unstack c c)', '(stack c c)', '(pick-up e)', '(stack b c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 2899  <<<<

> Fringe size: 17453
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down e)', '(unstack c c)', '(stack c c)', '(pick-up e)', '(stack b d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 2900  <<<<

> Fringe size: 17454
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down e)', '(unstack c c)', '(stack c c)', '(pick-up e)', '(stack b e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 2901  <<<<

> Fringe size: 17455
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down e)', '(unstack c c)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 2902  <<<<

> Fringe size: 17465
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down e)', '(unstack c c)', '(stack c d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=11

>>>>  A* iteration 2903  <<<<

> Fringe size: 17466
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down e)', '(unstack c c)', '(stack c d)', '(pick-up e)', '(stack b c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 2904  <<<<

> Fringe size: 17467
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down e)', '(unstack c c)', '(stack c d)', '(pick-up e)', '(stack b d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 2905  <<<<

> Fringe size: 17468
> First 20 nodes: (D:8,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down e)', '(unstack c c)', '(stack c d)', '(pick-up e)', '(stack b e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 2906  <<<<

> Fringe size: 17469
> First 20 nodes: (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down e)', '(unstack c c)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 2907  <<<<

> Fringe size: 17471
> First 20 nodes: (D:7,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=6
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down d)']
> Next lifted action: unstack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2908  <<<<

> Fringe size: 17476
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3)

> Node instance:
> Depth=7
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down d)', '(unstack c c)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 2909  <<<<

> Fringe size: 17477
> First 20 nodes: (D:9,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down d)', '(unstack c c)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 2910  <<<<

> Fringe size: 17482
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down d)', '(unstack c c)', '(stack c c)', '(pick-up d)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 2911  <<<<

> Fringe size: 17483
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down d)', '(unstack c c)', '(stack c c)', '(pick-up d)', '(stack e c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 2912  <<<<

> Fringe size: 17488
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down d)', '(unstack c c)', '(stack c c)', '(pick-up d)', '(stack e c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 2913  <<<<

> Fringe size: 17489
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down d)', '(unstack c c)', '(stack c c)', '(pick-up d)', '(stack e d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 2914  <<<<

> Fringe size: 17494
> First 20 nodes: (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down d)', '(unstack c c)', '(stack c c)', '(pick-up d)', '(stack e d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 2915  <<<<

> Fringe size: 17495
> First 20 nodes: (D:11,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down d)', '(unstack c c)', '(stack c c)', '(pick-up d)', '(stack e e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, b)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, b)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(unstack c c)', '(unstack c e)', '(unstack e b)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']

>>>>  A* iteration 2916  <<<<

> Fringe size: 17500
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down d)', '(unstack c c)', '(stack c c)', '(pick-up d)', '(stack e e)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 2917  <<<<

> Fringe size: 17505
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down d)', '(unstack c c)', '(stack c c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
unstack,(clear ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 2918  <<<<

> Fringe size: 17506
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down d)', '(unstack c c)', '(stack c c)', '(pick-up e)', '(stack e c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
unstack,(clear ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 2919  <<<<

> Fringe size: 17511
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down d)', '(unstack c c)', '(stack c c)', '(pick-up e)', '(stack e c)', '(pick-up d)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
unstack,(clear ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 2920  <<<<

> Fringe size: 17512
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down d)', '(unstack c c)', '(stack c c)', '(pick-up e)', '(stack e d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
unstack,(clear ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 2921  <<<<

> Fringe size: 17513
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down d)', '(unstack c c)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 2922  <<<<

> Fringe size: 17518
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down d)', '(unstack c c)', '(stack c d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
unstack,(clear ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 2923  <<<<

> Fringe size: 17519
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down d)', '(unstack c c)', '(stack c d)', '(pick-up e)', '(stack e c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
unstack,(clear ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 2924  <<<<

> Fringe size: 17520
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down d)', '(unstack c c)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 2925  <<<<

> Fringe size: 17525
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down d)', '(unstack c c)', '(stack c e)', '(pick-up d)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 2926  <<<<

> Fringe size: 17526
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down d)', '(unstack c c)', '(stack c e)', '(pick-up d)', '(stack e c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 2927  <<<<

> Fringe size: 17531
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down d)', '(unstack c c)', '(stack c e)', '(pick-up d)', '(stack e c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 2928  <<<<

> Fringe size: 17532
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down d)', '(unstack c c)', '(stack c e)', '(pick-up d)', '(stack e d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 2929  <<<<

> Fringe size: 17537
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down d)', '(unstack c c)', '(stack c e)', '(pick-up d)', '(stack e d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 2930  <<<<

> Fringe size: 17538
> First 20 nodes: (D:11,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down d)', '(unstack c c)', '(stack c e)', '(pick-up d)', '(stack e e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 2931  <<<<

> Fringe size: 17543
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down d)', '(unstack c c)', '(stack c e)', '(pick-up d)', '(stack e e)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 2932  <<<<

> Fringe size: 17544
> First 20 nodes: (D:9,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down d)', '(unstack c c)', '(stack e c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 2933  <<<<

> Fringe size: 17549
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down d)', '(unstack c c)', '(stack e c)', '(pick-up d)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 2934  <<<<

> Fringe size: 17550
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down d)', '(unstack c c)', '(stack e c)', '(pick-up d)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 2935  <<<<

> Fringe size: 17555
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down d)', '(unstack c c)', '(stack e c)', '(pick-up d)', '(stack c c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 2936  <<<<

> Fringe size: 17556
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down d)', '(unstack c c)', '(stack e c)', '(pick-up d)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 2937  <<<<

> Fringe size: 17561
> First 20 nodes: (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down d)', '(unstack c c)', '(stack e c)', '(pick-up d)', '(stack c d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 2938  <<<<

> Fringe size: 17562
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down d)', '(unstack c c)', '(stack e c)', '(pick-up d)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']

>>>>  A* iteration 2939  <<<<

> Fringe size: 17567
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down d)', '(unstack c c)', '(stack e c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 2940  <<<<

> Fringe size: 17568
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down d)', '(unstack c c)', '(stack e c)', '(pick-up e)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 2941  <<<<

> Fringe size: 17573
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down d)', '(unstack c c)', '(stack e c)', '(pick-up e)', '(stack c c)', '(pick-up d)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 2942  <<<<

> Fringe size: 17574
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down d)', '(unstack c c)', '(stack e c)', '(pick-up e)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 2943  <<<<

> Fringe size: 17575
> First 20 nodes: (D:11,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down d)', '(unstack c c)', '(stack e c)', '(pick-up e)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 2944  <<<<

> Fringe size: 17580
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down d)', '(unstack c c)', '(stack e c)', '(pick-up e)', '(stack c e)', '(pick-up d)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 2945  <<<<

> Fringe size: 17581
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down d)', '(unstack c c)', '(stack e d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 2946  <<<<

> Fringe size: 17586
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down d)', '(unstack c c)', '(stack e d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 2947  <<<<

> Fringe size: 17587
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down d)', '(unstack c c)', '(stack e d)', '(pick-up e)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 2948  <<<<

> Fringe size: 17588
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down d)', '(unstack c c)', '(stack e d)', '(pick-up e)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 2949  <<<<

> Fringe size: 17589
> First 20 nodes: (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down d)', '(unstack c c)', '(stack e d)', '(pick-up e)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 2950  <<<<

> Fringe size: 17590
> First 20 nodes: (D:9,C:2), (D:9,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down d)', '(unstack c c)', '(stack e e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 2951  <<<<

> Fringe size: 17595
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down d)', '(unstack c c)', '(stack e e)', '(pick-up d)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 2952  <<<<

> Fringe size: 17596
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down d)', '(unstack c c)', '(stack e e)', '(pick-up d)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 2953  <<<<

> Fringe size: 17601
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down d)', '(unstack c c)', '(stack e e)', '(pick-up d)', '(stack c c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 2954  <<<<

> Fringe size: 17602
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:9,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down d)', '(unstack c c)', '(stack e e)', '(pick-up d)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 2955  <<<<

> Fringe size: 17607
> First 20 nodes: (D:10,C:2), (D:9,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down d)', '(unstack c c)', '(stack e e)', '(pick-up d)', '(stack c d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 2956  <<<<

> Fringe size: 17608
> First 20 nodes: (D:9,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down d)', '(unstack c c)', '(stack e e)', '(pick-up d)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 2957  <<<<

> Fringe size: 17613
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down d)', '(unstack c c)', '(stack e e)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 2958  <<<<

> Fringe size: 17614
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down d)', '(unstack c c)', '(stack e e)', '(pick-up e)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 2959  <<<<

> Fringe size: 17619
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down d)', '(unstack c c)', '(stack e e)', '(pick-up e)', '(stack c c)', '(pick-up d)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 2960  <<<<

> Fringe size: 17620
> First 20 nodes: (D:10,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down d)', '(unstack c c)', '(stack e e)', '(pick-up e)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 2961  <<<<

> Fringe size: 17621
> First 20 nodes: (D:11,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down d)', '(unstack c c)', '(stack e e)', '(pick-up e)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']

>>>>  A* iteration 2962  <<<<

> Fringe size: 17626
> First 20 nodes: (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c c)', '(unstack e b)', '(put-down d)', '(unstack c c)', '(stack e e)', '(pick-up e)', '(stack c e)', '(pick-up d)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 2963  <<<<

> Fringe size: 17627
> First 20 nodes: (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3)

> Node instance:
> Depth=4
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)']
> Next lifted action: unstack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 2964  <<<<

> Fringe size: 17631
> First 20 nodes: (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=5
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)']
> Next lifted action: put-down
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=5

>>>>  A* iteration 2965  <<<<

> Fringe size: 17632
> First 20 nodes: (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=6
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down a)']
> Next lifted action: unstack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 2966  <<<<

> Fringe size: 17634
> First 20 nodes: (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=6
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down b)']
> Next lifted action: unstack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2967  <<<<

> Fringe size: 17641
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=7
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down b)', '(unstack b a)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 2968  <<<<

> Fringe size: 17643
> First 20 nodes: (D:9,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down b)', '(unstack b a)', '(stack b b)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2969  <<<<

> Fringe size: 17650
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down b)', '(unstack b a)', '(stack b b)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 2970  <<<<

> Fringe size: 17652
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down b)', '(unstack b a)', '(stack b b)', '(pick-up b)', '(stack c b)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2971  <<<<

> Fringe size: 17659
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down b)', '(unstack b a)', '(stack b b)', '(pick-up b)', '(stack c b)', '(pick-up d)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 2972  <<<<

> Fringe size: 17661
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down b)', '(unstack b a)', '(stack b b)', '(pick-up b)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2973  <<<<

> Fringe size: 17668
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down b)', '(unstack b a)', '(stack b b)', '(pick-up b)', '(stack c c)', '(pick-up d)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 2974  <<<<

> Fringe size: 17670
> First 20 nodes: (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down b)', '(unstack b a)', '(stack b b)', '(pick-up b)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2975  <<<<

> Fringe size: 17672
> First 20 nodes: (D:11,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down b)', '(unstack b a)', '(stack b b)', '(pick-up b)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2976  <<<<

> Fringe size: 17679
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down b)', '(unstack b a)', '(stack b b)', '(pick-up b)', '(stack c e)', '(pick-up d)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 2977  <<<<

> Fringe size: 17686
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down b)', '(unstack b a)', '(stack b b)', '(pick-up d)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 2978  <<<<

> Fringe size: 17688
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down b)', '(unstack b a)', '(stack b b)', '(pick-up d)', '(stack c b)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2979  <<<<

> Fringe size: 17690
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down b)', '(unstack b a)', '(stack b b)', '(pick-up d)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2980  <<<<

> Fringe size: 17697
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down b)', '(unstack b a)', '(stack b b)', '(pick-up d)', '(stack c c)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 2981  <<<<

> Fringe size: 17699
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down b)', '(unstack b a)', '(stack b b)', '(pick-up d)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2982  <<<<

> Fringe size: 17706
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down b)', '(unstack b a)', '(stack b b)', '(pick-up d)', '(stack c d)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(unstack c e)', '(unstack e b)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(put-down a)', '(put-down b)', '(put-down c)', '(put-down d)', '(put-down e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(unstack c e)', '(unstack e b)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(unstack b a)', '(unstack c e)', '(unstack e b)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, b)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(c, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, b)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']

>>>>  A* iteration 2983  <<<<

> Fringe size: 17708
> First 20 nodes: (D:11,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down b)', '(unstack b a)', '(stack b b)', '(pick-up d)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2984  <<<<

> Fringe size: 17715
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down b)', '(unstack b a)', '(stack b b)', '(pick-up d)', '(stack c e)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 2985  <<<<

> Fringe size: 17717
> First 20 nodes: (D:9,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down b)', '(unstack b a)', '(stack b c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2986  <<<<

> Fringe size: 17724
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down b)', '(unstack b a)', '(stack b c)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 2987  <<<<

> Fringe size: 17726
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down b)', '(unstack b a)', '(stack b c)', '(pick-up b)', '(stack c b)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2988  <<<<

> Fringe size: 17733
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down b)', '(unstack b a)', '(stack b c)', '(pick-up b)', '(stack c b)', '(pick-up d)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 2989  <<<<

> Fringe size: 17735
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down b)', '(unstack b a)', '(stack b c)', '(pick-up b)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2990  <<<<

> Fringe size: 17742
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down b)', '(unstack b a)', '(stack b c)', '(pick-up b)', '(stack c c)', '(pick-up d)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 2991  <<<<

> Fringe size: 17744
> First 20 nodes: (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down b)', '(unstack b a)', '(stack b c)', '(pick-up b)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2992  <<<<

> Fringe size: 17746
> First 20 nodes: (D:11,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down b)', '(unstack b a)', '(stack b c)', '(pick-up b)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2993  <<<<

> Fringe size: 17753
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down b)', '(unstack b a)', '(stack b c)', '(pick-up b)', '(stack c e)', '(pick-up d)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 2994  <<<<

> Fringe size: 17760
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down b)', '(unstack b a)', '(stack b c)', '(pick-up d)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 2995  <<<<

> Fringe size: 17762
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down b)', '(unstack b a)', '(stack b c)', '(pick-up d)', '(stack c b)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2996  <<<<

> Fringe size: 17764
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down b)', '(unstack b a)', '(stack b c)', '(pick-up d)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2997  <<<<

> Fringe size: 17771
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down b)', '(unstack b a)', '(stack b c)', '(pick-up d)', '(stack c c)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 2998  <<<<

> Fringe size: 17773
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down b)', '(unstack b a)', '(stack b c)', '(pick-up d)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 2999  <<<<

> Fringe size: 17780
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down b)', '(unstack b a)', '(stack b c)', '(pick-up d)', '(stack c d)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 3000  <<<<

> Fringe size: 17782
> First 20 nodes: (D:11,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down b)', '(unstack b a)', '(stack b c)', '(pick-up d)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 3001  <<<<

> Fringe size: 17789
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down b)', '(unstack b a)', '(stack b c)', '(pick-up d)', '(stack c e)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 3002  <<<<

> Fringe size: 17791
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down b)', '(unstack b a)', '(stack b d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, b)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(c, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, b)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']

>>>>  A* iteration 3003  <<<<

> Fringe size: 17798
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down b)', '(unstack b a)', '(stack b d)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 3004  <<<<

> Fringe size: 17800
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down b)', '(unstack b a)', '(stack b d)', '(pick-up b)', '(stack c b)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 3005  <<<<

> Fringe size: 17802
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down b)', '(unstack b a)', '(stack b d)', '(pick-up b)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 3006  <<<<

> Fringe size: 17804
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down b)', '(unstack b a)', '(stack b d)', '(pick-up b)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 3007  <<<<

> Fringe size: 17806
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down b)', '(unstack b a)', '(stack b d)', '(pick-up b)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 3008  <<<<

> Fringe size: 17808
> First 20 nodes: (D:9,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down b)', '(unstack b a)', '(stack b e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 3009  <<<<

> Fringe size: 17815
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down b)', '(unstack b a)', '(stack b e)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 3010  <<<<

> Fringe size: 17817
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down b)', '(unstack b a)', '(stack b e)', '(pick-up b)', '(stack c b)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 3011  <<<<

> Fringe size: 17824
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down b)', '(unstack b a)', '(stack b e)', '(pick-up b)', '(stack c b)', '(pick-up d)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 3012  <<<<

> Fringe size: 17826
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down b)', '(unstack b a)', '(stack b e)', '(pick-up b)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 3013  <<<<

> Fringe size: 17833
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down b)', '(unstack b a)', '(stack b e)', '(pick-up b)', '(stack c c)', '(pick-up d)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 3014  <<<<

> Fringe size: 17835
> First 20 nodes: (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down b)', '(unstack b a)', '(stack b e)', '(pick-up b)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 3015  <<<<

> Fringe size: 17837
> First 20 nodes: (D:11,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down b)', '(unstack b a)', '(stack b e)', '(pick-up b)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 3016  <<<<

> Fringe size: 17844
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down b)', '(unstack b a)', '(stack b e)', '(pick-up b)', '(stack c e)', '(pick-up d)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 3017  <<<<

> Fringe size: 17851
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down b)', '(unstack b a)', '(stack b e)', '(pick-up d)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 3018  <<<<

> Fringe size: 17853
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down b)', '(unstack b a)', '(stack b e)', '(pick-up d)', '(stack c b)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 3019  <<<<

> Fringe size: 17855
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down b)', '(unstack b a)', '(stack b e)', '(pick-up d)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 3020  <<<<

> Fringe size: 17862
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down b)', '(unstack b a)', '(stack b e)', '(pick-up d)', '(stack c c)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 3021  <<<<

> Fringe size: 17864
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down b)', '(unstack b a)', '(stack b e)', '(pick-up d)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 3022  <<<<

> Fringe size: 17871
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down b)', '(unstack b a)', '(stack b e)', '(pick-up d)', '(stack c d)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, b)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, b)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(c, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, b)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']

>>>>  A* iteration 3023  <<<<

> Fringe size: 17873
> First 20 nodes: (D:11,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down b)', '(unstack b a)', '(stack b e)', '(pick-up d)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 3024  <<<<

> Fringe size: 17880
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down b)', '(unstack b a)', '(stack b e)', '(pick-up d)', '(stack c e)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 3025  <<<<

> Fringe size: 17882
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down b)', '(unstack b a)', '(stack c b)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 3026  <<<<

> Fringe size: 17889
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down b)', '(unstack b a)', '(stack c b)', '(pick-up d)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 3027  <<<<

> Fringe size: 17891
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down b)', '(unstack b a)', '(stack c b)', '(pick-up d)', '(stack b b)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 3028  <<<<

> Fringe size: 17898
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down b)', '(unstack b a)', '(stack c b)', '(pick-up d)', '(stack b b)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 3029  <<<<

> Fringe size: 17900
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down b)', '(unstack b a)', '(stack c b)', '(pick-up d)', '(stack b c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 3030  <<<<

> Fringe size: 17907
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down b)', '(unstack b a)', '(stack c b)', '(pick-up d)', '(stack b c)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 3031  <<<<

> Fringe size: 17909
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down b)', '(unstack b a)', '(stack c b)', '(pick-up d)', '(stack b d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 3032  <<<<

> Fringe size: 17916
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down b)', '(unstack b a)', '(stack c b)', '(pick-up d)', '(stack b d)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 3033  <<<<

> Fringe size: 17918
> First 20 nodes: (D:11,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down b)', '(unstack b a)', '(stack c b)', '(pick-up d)', '(stack b e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 3034  <<<<

> Fringe size: 17925
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down b)', '(unstack b a)', '(stack c b)', '(pick-up d)', '(stack b e)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 3035  <<<<

> Fringe size: 17927
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down b)', '(unstack b a)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 3036  <<<<

> Fringe size: 17934
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down b)', '(unstack b a)', '(stack c c)', '(pick-up d)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 3037  <<<<

> Fringe size: 17936
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down b)', '(unstack b a)', '(stack c c)', '(pick-up d)', '(stack b b)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 3038  <<<<

> Fringe size: 17943
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down b)', '(unstack b a)', '(stack c c)', '(pick-up d)', '(stack b b)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 3039  <<<<

> Fringe size: 17945
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down b)', '(unstack b a)', '(stack c c)', '(pick-up d)', '(stack b c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 3040  <<<<

> Fringe size: 17952
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down b)', '(unstack b a)', '(stack c c)', '(pick-up d)', '(stack b c)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 3041  <<<<

> Fringe size: 17954
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down b)', '(unstack b a)', '(stack c c)', '(pick-up d)', '(stack b d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 3042  <<<<

> Fringe size: 17961
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down b)', '(unstack b a)', '(stack c c)', '(pick-up d)', '(stack b d)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, b)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, b)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, b)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(c, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, b)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(c, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, b)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(c, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, b)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(c, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']

>>>>  A* iteration 3043  <<<<

> Fringe size: 17963
> First 20 nodes: (D:11,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down b)', '(unstack b a)', '(stack c c)', '(pick-up d)', '(stack b e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 3044  <<<<

> Fringe size: 17970
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down b)', '(unstack b a)', '(stack c c)', '(pick-up d)', '(stack b e)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 3045  <<<<

> Fringe size: 17972
> First 20 nodes: (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down b)', '(unstack b a)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 3046  <<<<

> Fringe size: 17974
> First 20 nodes: (D:9,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down b)', '(unstack b a)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 3047  <<<<

> Fringe size: 17981
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down b)', '(unstack b a)', '(stack c e)', '(pick-up d)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 3048  <<<<

> Fringe size: 17983
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down b)', '(unstack b a)', '(stack c e)', '(pick-up d)', '(stack b b)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 3049  <<<<

> Fringe size: 17990
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down b)', '(unstack b a)', '(stack c e)', '(pick-up d)', '(stack b b)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 3050  <<<<

> Fringe size: 17992
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down b)', '(unstack b a)', '(stack c e)', '(pick-up d)', '(stack b c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 3051  <<<<

> Fringe size: 17999
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down b)', '(unstack b a)', '(stack c e)', '(pick-up d)', '(stack b c)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 3052  <<<<

> Fringe size: 18001
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down b)', '(unstack b a)', '(stack c e)', '(pick-up d)', '(stack b d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 3053  <<<<

> Fringe size: 18008
> First 20 nodes: (D:10,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down b)', '(unstack b a)', '(stack c e)', '(pick-up d)', '(stack b d)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 3054  <<<<

> Fringe size: 18010
> First 20 nodes: (D:11,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down b)', '(unstack b a)', '(stack c e)', '(pick-up d)', '(stack b e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 3055  <<<<

> Fringe size: 18017
> First 20 nodes: (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down b)', '(unstack b a)', '(stack c e)', '(pick-up d)', '(stack b e)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 3056  <<<<

> Fringe size: 18018
> First 20 nodes: (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=6
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down c)']
> Next lifted action: unstack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 3057  <<<<

> Fringe size: 18019
> First 20 nodes: (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3)

> Node instance:
> Depth=6
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down d)']
> Next lifted action: unstack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 3058  <<<<

> Fringe size: 18020
> First 20 nodes: (D:7,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3)

> Node instance:
> Depth=6
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down e)']
> Next lifted action: unstack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 3059  <<<<

> Fringe size: 18030
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=7
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=11

>>>>  A* iteration 3060  <<<<

> Fringe size: 18031
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack b c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 3061  <<<<

> Fringe size: 18042
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack b c)', '(pick-up d)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=12

>>>>  A* iteration 3062  <<<<

> Fringe size: 18043
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack b c)', '(pick-up d)', '(stack c b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 3063  <<<<

> Fringe size: 18044
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack b c)', '(pick-up d)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom ontable(c)>]
> Possible groundings:
['(unstack c e)', '(unstack e b)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(unstack c e)', '(unstack e b)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(unstack c e)', '(unstack e b)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(c, b)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']

>>>>  A* iteration 3064  <<<<

> Fringe size: 18045
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack b c)', '(pick-up d)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 3065  <<<<

> Fringe size: 18046
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack b c)', '(pick-up d)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 3066  <<<<

> Fringe size: 18047
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack b c)', '(pick-up d)', '(stack e b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 3067  <<<<

> Fringe size: 18058
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack b c)', '(pick-up d)', '(stack e b)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=12

>>>>  A* iteration 3068  <<<<

> Fringe size: 18059
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack b c)', '(pick-up d)', '(stack e c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 3069  <<<<

> Fringe size: 18070
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack b c)', '(pick-up d)', '(stack e c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=12

>>>>  A* iteration 3070  <<<<

> Fringe size: 18071
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack b c)', '(pick-up d)', '(stack e d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 3071  <<<<

> Fringe size: 18082
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack b c)', '(pick-up d)', '(stack e d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=12

>>>>  A* iteration 3072  <<<<

> Fringe size: 18083
> First 20 nodes: (D:11,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack b c)', '(pick-up d)', '(stack e e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 3073  <<<<

> Fringe size: 18094
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack b c)', '(pick-up d)', '(stack e e)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=12

>>>>  A* iteration 3074  <<<<

> Fringe size: 18095
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack b d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 3075  <<<<

> Fringe size: 18096
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack b e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 3076  <<<<

> Fringe size: 18107
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack b e)', '(pick-up d)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=12

>>>>  A* iteration 3077  <<<<

> Fringe size: 18108
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack b e)', '(pick-up d)', '(stack c b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 3078  <<<<

> Fringe size: 18109
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack b e)', '(pick-up d)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 3079  <<<<

> Fringe size: 18110
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack b e)', '(pick-up d)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 3080  <<<<

> Fringe size: 18111
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack b e)', '(pick-up d)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 3081  <<<<

> Fringe size: 18112
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack b e)', '(pick-up d)', '(stack e b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 3082  <<<<

> Fringe size: 18123
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack b e)', '(pick-up d)', '(stack e b)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=12

>>>>  A* iteration 3083  <<<<

> Fringe size: 18124
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack b e)', '(pick-up d)', '(stack e c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom on(e, c)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(e, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(c, b)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']

>>>>  A* iteration 3084  <<<<

> Fringe size: 18135
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack b e)', '(pick-up d)', '(stack e c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=12

>>>>  A* iteration 3085  <<<<

> Fringe size: 18136
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack b e)', '(pick-up d)', '(stack e d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 3086  <<<<

> Fringe size: 18147
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack b e)', '(pick-up d)', '(stack e d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=12

>>>>  A* iteration 3087  <<<<

> Fringe size: 18148
> First 20 nodes: (D:11,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack b e)', '(pick-up d)', '(stack e e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 3088  <<<<

> Fringe size: 18159
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack b e)', '(pick-up d)', '(stack e e)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=12

>>>>  A* iteration 3089  <<<<

> Fringe size: 18160
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack c b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 3090  <<<<

> Fringe size: 18170
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack c b)', '(pick-up d)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=11

>>>>  A* iteration 3091  <<<<

> Fringe size: 18171
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack c b)', '(pick-up d)', '(stack b c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 3092  <<<<

> Fringe size: 18172
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack c b)', '(pick-up d)', '(stack b d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 3093  <<<<

> Fringe size: 18173
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack c b)', '(pick-up d)', '(stack b e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 3094  <<<<

> Fringe size: 18174
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack c b)', '(pick-up d)', '(stack e b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 3095  <<<<

> Fringe size: 18184
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack c b)', '(pick-up d)', '(stack e b)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=11

>>>>  A* iteration 3096  <<<<

> Fringe size: 18185
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack c b)', '(pick-up d)', '(stack e c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 3097  <<<<

> Fringe size: 18195
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack c b)', '(pick-up d)', '(stack e c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=11

>>>>  A* iteration 3098  <<<<

> Fringe size: 18196
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack c b)', '(pick-up d)', '(stack e d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 3099  <<<<

> Fringe size: 18206
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack c b)', '(pick-up d)', '(stack e d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=11

>>>>  A* iteration 3100  <<<<

> Fringe size: 18207
> First 20 nodes: (D:11,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack c b)', '(pick-up d)', '(stack e e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 3101  <<<<

> Fringe size: 18217
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack c b)', '(pick-up d)', '(stack e e)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=11

>>>>  A* iteration 3102  <<<<

> Fringe size: 18218
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 3103  <<<<

> Fringe size: 18228
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack c c)', '(pick-up d)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=11
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom on(e, c)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom handempty()>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom on(e, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(c, b)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(c, b)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(c, b)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(c, b)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(c, b)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(c, b)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(c, b)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(c, b)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(c, b)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(c, b)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(c, b)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(c, b)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(c, b)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']

>>>>  A* iteration 3104  <<<<

> Fringe size: 18229
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack c c)', '(pick-up d)', '(stack b c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 3105  <<<<

> Fringe size: 18230
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack c c)', '(pick-up d)', '(stack b d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 3106  <<<<

> Fringe size: 18231
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack c c)', '(pick-up d)', '(stack b e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 3107  <<<<

> Fringe size: 18232
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack c c)', '(pick-up d)', '(stack e b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 3108  <<<<

> Fringe size: 18242
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack c c)', '(pick-up d)', '(stack e b)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=11

>>>>  A* iteration 3109  <<<<

> Fringe size: 18243
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack c c)', '(pick-up d)', '(stack e c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 3110  <<<<

> Fringe size: 18253
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack c c)', '(pick-up d)', '(stack e c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=11

>>>>  A* iteration 3111  <<<<

> Fringe size: 18254
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack c c)', '(pick-up d)', '(stack e d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 3112  <<<<

> Fringe size: 18264
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack c c)', '(pick-up d)', '(stack e d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=11

>>>>  A* iteration 3113  <<<<

> Fringe size: 18265
> First 20 nodes: (D:11,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack c c)', '(pick-up d)', '(stack e e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 3114  <<<<

> Fringe size: 18275
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack c c)', '(pick-up d)', '(stack e e)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=11

>>>>  A* iteration 3115  <<<<

> Fringe size: 18276
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 3116  <<<<

> Fringe size: 18277
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 3117  <<<<

> Fringe size: 18287
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack c e)', '(pick-up d)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=11

>>>>  A* iteration 3118  <<<<

> Fringe size: 18288
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack c e)', '(pick-up d)', '(stack b c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 3119  <<<<

> Fringe size: 18289
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack c e)', '(pick-up d)', '(stack b d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 3120  <<<<

> Fringe size: 18290
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack c e)', '(pick-up d)', '(stack b e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 3121  <<<<

> Fringe size: 18291
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack c e)', '(pick-up d)', '(stack e b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 3122  <<<<

> Fringe size: 18301
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack c e)', '(pick-up d)', '(stack e b)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=11

>>>>  A* iteration 3123  <<<<

> Fringe size: 18302
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack c e)', '(pick-up d)', '(stack e c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 3124  <<<<

> Fringe size: 18312
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack c e)', '(pick-up d)', '(stack e c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=11
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']

>>>>  A* iteration 3125  <<<<

> Fringe size: 18313
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack c e)', '(pick-up d)', '(stack e d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 3126  <<<<

> Fringe size: 18323
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack c e)', '(pick-up d)', '(stack e d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=11

>>>>  A* iteration 3127  <<<<

> Fringe size: 18324
> First 20 nodes: (D:11,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack c e)', '(pick-up d)', '(stack e e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 3128  <<<<

> Fringe size: 18334
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack c e)', '(pick-up d)', '(stack e e)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=11

>>>>  A* iteration 3129  <<<<

> Fringe size: 18335
> First 20 nodes: (D:9,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack e b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 3130  <<<<

> Fringe size: 18345
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack e b)', '(pick-up d)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=11

>>>>  A* iteration 3131  <<<<

> Fringe size: 18346
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack e b)', '(pick-up d)', '(stack b c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 3132  <<<<

> Fringe size: 18357
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack e b)', '(pick-up d)', '(stack b c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=12

>>>>  A* iteration 3133  <<<<

> Fringe size: 18358
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack e b)', '(pick-up d)', '(stack b d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 3134  <<<<

> Fringe size: 18369
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack e b)', '(pick-up d)', '(stack b d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=12

>>>>  A* iteration 3135  <<<<

> Fringe size: 18370
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack e b)', '(pick-up d)', '(stack b e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 3136  <<<<

> Fringe size: 18371
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack e b)', '(pick-up d)', '(stack c b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 3137  <<<<

> Fringe size: 18381
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack e b)', '(pick-up d)', '(stack c b)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=11

>>>>  A* iteration 3138  <<<<

> Fringe size: 18382
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack e b)', '(pick-up d)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 3139  <<<<

> Fringe size: 18392
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack e b)', '(pick-up d)', '(stack c c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=11

>>>>  A* iteration 3140  <<<<

> Fringe size: 18393
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack e b)', '(pick-up d)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 3141  <<<<

> Fringe size: 18403
> First 20 nodes: (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack e b)', '(pick-up d)', '(stack c d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=11

>>>>  A* iteration 3142  <<<<

> Fringe size: 18404
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack e b)', '(pick-up d)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 3143  <<<<

> Fringe size: 18414
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack e b)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=11

>>>>  A* iteration 3144  <<<<

> Fringe size: 18415
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack e b)', '(pick-up e)', '(stack b c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(c, b)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(c, b)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]

>>>>  A* iteration 3145  <<<<

> Fringe size: 18426
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack e b)', '(pick-up e)', '(stack b c)', '(pick-up d)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=12

>>>>  A* iteration 3146  <<<<

> Fringe size: 18427
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack e b)', '(pick-up e)', '(stack b d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 3147  <<<<

> Fringe size: 18428
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack e b)', '(pick-up e)', '(stack b e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 3148  <<<<

> Fringe size: 18439
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack e b)', '(pick-up e)', '(stack b e)', '(pick-up d)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=12

>>>>  A* iteration 3149  <<<<

> Fringe size: 18440
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack e b)', '(pick-up e)', '(stack c b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 3150  <<<<

> Fringe size: 18450
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack e b)', '(pick-up e)', '(stack c b)', '(pick-up d)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=11

>>>>  A* iteration 3151  <<<<

> Fringe size: 18451
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack e b)', '(pick-up e)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 3152  <<<<

> Fringe size: 18461
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack e b)', '(pick-up e)', '(stack c c)', '(pick-up d)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=11

>>>>  A* iteration 3153  <<<<

> Fringe size: 18462
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack e b)', '(pick-up e)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 3154  <<<<

> Fringe size: 18463
> First 20 nodes: (D:11,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack e b)', '(pick-up e)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 3155  <<<<

> Fringe size: 18473
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack e b)', '(pick-up e)', '(stack c e)', '(pick-up d)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=11

>>>>  A* iteration 3156  <<<<

> Fringe size: 18474
> First 20 nodes: (D:9,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack e c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 3157  <<<<

> Fringe size: 18484
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack e c)', '(pick-up d)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=11

>>>>  A* iteration 3158  <<<<

> Fringe size: 18485
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack e c)', '(pick-up d)', '(stack b c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 3159  <<<<

> Fringe size: 18496
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack e c)', '(pick-up d)', '(stack b c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=12

>>>>  A* iteration 3160  <<<<

> Fringe size: 18497
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack e c)', '(pick-up d)', '(stack b d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 3161  <<<<

> Fringe size: 18508
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack e c)', '(pick-up d)', '(stack b d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=12

>>>>  A* iteration 3162  <<<<

> Fringe size: 18509
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack e c)', '(pick-up d)', '(stack b e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 3163  <<<<

> Fringe size: 18510
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack e c)', '(pick-up d)', '(stack c b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 3164  <<<<

> Fringe size: 18520
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack e c)', '(pick-up d)', '(stack c b)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=11

>>>>  A* iteration 3165  <<<<

> Fringe size: 18521
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack e c)', '(pick-up d)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(c, b)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(c, b)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom on(e, c)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom on(e, c)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, b)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, b)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']

>>>>  A* iteration 3166  <<<<

> Fringe size: 18531
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack e c)', '(pick-up d)', '(stack c c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=11

>>>>  A* iteration 3167  <<<<

> Fringe size: 18532
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack e c)', '(pick-up d)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 3168  <<<<

> Fringe size: 18542
> First 20 nodes: (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack e c)', '(pick-up d)', '(stack c d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=11

>>>>  A* iteration 3169  <<<<

> Fringe size: 18543
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack e c)', '(pick-up d)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 3170  <<<<

> Fringe size: 18553
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack e c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=11

>>>>  A* iteration 3171  <<<<

> Fringe size: 18554
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack e c)', '(pick-up e)', '(stack b c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 3172  <<<<

> Fringe size: 18565
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack e c)', '(pick-up e)', '(stack b c)', '(pick-up d)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=12

>>>>  A* iteration 3173  <<<<

> Fringe size: 18566
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack e c)', '(pick-up e)', '(stack b d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 3174  <<<<

> Fringe size: 18567
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack e c)', '(pick-up e)', '(stack b e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 3175  <<<<

> Fringe size: 18578
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack e c)', '(pick-up e)', '(stack b e)', '(pick-up d)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=12

>>>>  A* iteration 3176  <<<<

> Fringe size: 18579
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack e c)', '(pick-up e)', '(stack c b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 3177  <<<<

> Fringe size: 18589
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack e c)', '(pick-up e)', '(stack c b)', '(pick-up d)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=11

>>>>  A* iteration 3178  <<<<

> Fringe size: 18590
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack e c)', '(pick-up e)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 3179  <<<<

> Fringe size: 18600
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack e c)', '(pick-up e)', '(stack c c)', '(pick-up d)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=11

>>>>  A* iteration 3180  <<<<

> Fringe size: 18601
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack e c)', '(pick-up e)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 3181  <<<<

> Fringe size: 18602
> First 20 nodes: (D:11,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack e c)', '(pick-up e)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 3182  <<<<

> Fringe size: 18612
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack e c)', '(pick-up e)', '(stack c e)', '(pick-up d)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=11

>>>>  A* iteration 3183  <<<<

> Fringe size: 18613
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack e d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 3184  <<<<

> Fringe size: 18623
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack e d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=11

>>>>  A* iteration 3185  <<<<

> Fringe size: 18624
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack e d)', '(pick-up e)', '(stack b c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom on(e, c)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom on(e, c)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, b)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, b)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']

>>>>  A* iteration 3186  <<<<

> Fringe size: 18625
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack e d)', '(pick-up e)', '(stack b d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 3187  <<<<

> Fringe size: 18626
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack e d)', '(pick-up e)', '(stack b e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 3188  <<<<

> Fringe size: 18627
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack e d)', '(pick-up e)', '(stack c b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 3189  <<<<

> Fringe size: 18628
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack e d)', '(pick-up e)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 3190  <<<<

> Fringe size: 18629
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack e d)', '(pick-up e)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 3191  <<<<

> Fringe size: 18630
> First 20 nodes: (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack e d)', '(pick-up e)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 3192  <<<<

> Fringe size: 18631
> First 20 nodes: (D:9,C:2), (D:9,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack e e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 3193  <<<<

> Fringe size: 18641
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack e e)', '(pick-up d)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=11

>>>>  A* iteration 3194  <<<<

> Fringe size: 18642
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack e e)', '(pick-up d)', '(stack b c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 3195  <<<<

> Fringe size: 18653
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack e e)', '(pick-up d)', '(stack b c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=12

>>>>  A* iteration 3196  <<<<

> Fringe size: 18654
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack e e)', '(pick-up d)', '(stack b d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 3197  <<<<

> Fringe size: 18665
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack e e)', '(pick-up d)', '(stack b d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=12

>>>>  A* iteration 3198  <<<<

> Fringe size: 18666
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack e e)', '(pick-up d)', '(stack b e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 3199  <<<<

> Fringe size: 18667
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack e e)', '(pick-up d)', '(stack c b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 3200  <<<<

> Fringe size: 18677
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack e e)', '(pick-up d)', '(stack c b)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=11

>>>>  A* iteration 3201  <<<<

> Fringe size: 18678
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack e e)', '(pick-up d)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 3202  <<<<

> Fringe size: 18688
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack e e)', '(pick-up d)', '(stack c c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=11

>>>>  A* iteration 3203  <<<<

> Fringe size: 18689
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:9,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack e e)', '(pick-up d)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 3204  <<<<

> Fringe size: 18699
> First 20 nodes: (D:10,C:2), (D:9,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack e e)', '(pick-up d)', '(stack c d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=11

>>>>  A* iteration 3205  <<<<

> Fringe size: 18700
> First 20 nodes: (D:9,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack e e)', '(pick-up d)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 3206  <<<<

> Fringe size: 18710
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack e e)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=11
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom handempty()>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(c, b)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, b)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, b)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']

>>>>  A* iteration 3207  <<<<

> Fringe size: 18711
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack e e)', '(pick-up e)', '(stack b c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 3208  <<<<

> Fringe size: 18722
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack e e)', '(pick-up e)', '(stack b c)', '(pick-up d)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=12

>>>>  A* iteration 3209  <<<<

> Fringe size: 18723
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack e e)', '(pick-up e)', '(stack b d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 3210  <<<<

> Fringe size: 18724
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack e e)', '(pick-up e)', '(stack b e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 3211  <<<<

> Fringe size: 18735
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack e e)', '(pick-up e)', '(stack b e)', '(pick-up d)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=12

>>>>  A* iteration 3212  <<<<

> Fringe size: 18736
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack e e)', '(pick-up e)', '(stack c b)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 3213  <<<<

> Fringe size: 18746
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack e e)', '(pick-up e)', '(stack c b)', '(pick-up d)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=11

>>>>  A* iteration 3214  <<<<

> Fringe size: 18747
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack e e)', '(pick-up e)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 3215  <<<<

> Fringe size: 18757
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack e e)', '(pick-up e)', '(stack c c)', '(pick-up d)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=11

>>>>  A* iteration 3216  <<<<

> Fringe size: 18758
> First 20 nodes: (D:10,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack e e)', '(pick-up e)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 3217  <<<<

> Fringe size: 18759
> First 20 nodes: (D:11,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack e e)', '(pick-up e)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 3218  <<<<

> Fringe size: 18769
> First 20 nodes: (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c e)', '(unstack c e)', '(put-down e)', '(unstack e b)', '(stack e e)', '(pick-up e)', '(stack c e)', '(pick-up d)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=11

>>>>  A* iteration 3219  <<<<

> Fringe size: 18770
> First 20 nodes: (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=4
> Ground actions: ['(unstack c e)', '(put-down a)', '(pick-up d)', '(stack c c)']
> Next lifted action: unstack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 3220  <<<<

> Fringe size: 18770
> First 20 nodes: (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=5
> Ground actions: ['(unstack c e)', '(put-down a)', '(pick-up d)', '(stack c c)', '(unstack c c)']
> Next lifted action: put-down
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=1

>>>>  A* iteration 3221  <<<<

> Fringe size: 18771
> First 20 nodes: (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=6
> Ground actions: ['(unstack c e)', '(put-down a)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down c)']
> Next lifted action: unstack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 3222  <<<<

> Fringe size: 18773
> First 20 nodes: (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=4
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack e e)']
> Next lifted action: unstack
> Repair set:
unstack,(holding ?y),effPos,1
put-down,(holding ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 3223  <<<<

> Fringe size: 18775
> First 20 nodes: (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=5
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack e e)', '(unstack e b)']
> Next lifted action: put-down
> Repair set:
unstack,(holding ?y),effPos,1
put-down,(holding ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 3224  <<<<

> Fringe size: 18778
> First 20 nodes: (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=6
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack e e)', '(unstack e b)', '(put-down b)']
> Next lifted action: unstack
> Repair set:
unstack,(holding ?y),effPos,1
put-down,(holding ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 3225  <<<<

> Fringe size: 18796
> First 20 nodes: (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3)

> Node instance:
> Depth=7
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack e e)', '(unstack e b)', '(put-down b)', '(unstack b a)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
put-down,(holding ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=19

>>>>  A* iteration 3226  <<<<

> Fringe size: 18798
> First 20 nodes: (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=6
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack e e)', '(unstack e b)', '(put-down c)']
> Next lifted action: unstack
> Repair set:
unstack,(holding ?y),effPos,1
put-down,(holding ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 3227  <<<<

> Fringe size: 18800
> First 20 nodes: (D:7,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=6
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack e e)', '(unstack e b)', '(put-down e)']
> Next lifted action: unstack
> Repair set:
unstack,(holding ?y),effPos,1
put-down,(holding ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, b)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, b)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(unstack c c)', '(unstack c e)']
> Current state:
[<Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(put-down c)']
> Current state:
[<Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>, <Atom ontable(c)>]
> Possible groundings:
['(unstack c c)', '(unstack c e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(unstack c e)', '(unstack e b)', '(unstack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(put-down b)', '(put-down c)', '(put-down e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom ontable(b)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(unstack b a)', '(unstack c e)', '(unstack e b)', '(unstack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom holding(a)>, <Atom on(e, b)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack a b)', '(stack a c)', '(stack a d)', '(stack a e)', '(stack b a)', '(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c a)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e a)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom ontable(c)>]
> Possible groundings:
['(unstack c e)', '(unstack e b)', '(unstack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(unstack c e)', '(unstack e b)', '(unstack e e)']

>>>>  A* iteration 3228  <<<<

> Fringe size: 18810
> First 20 nodes: (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=7
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack e e)', '(unstack e b)', '(put-down e)', '(unstack e e)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
put-down,(holding ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=11

>>>>  A* iteration 3229  <<<<

> Fringe size: 18811
> First 20 nodes: (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=5
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack e e)', '(unstack e e)']
> Next lifted action: put-down
> Repair set:
unstack,(holding ?y),effPos,1
put-down,(holding ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 3230  <<<<

> Fringe size: 18813
> First 20 nodes: (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=6
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack e e)', '(unstack e e)', '(put-down c)']
> Next lifted action: unstack
> Repair set:
unstack,(holding ?y),effPos,1
put-down,(holding ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 3231  <<<<

> Fringe size: 18815
> First 20 nodes: (D:7,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=6
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack e e)', '(unstack e e)', '(put-down e)']
> Next lifted action: unstack
> Repair set:
unstack,(holding ?y),effPos,1
put-down,(holding ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 3232  <<<<

> Fringe size: 18825
> First 20 nodes: (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=7
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack e e)', '(unstack e e)', '(put-down e)', '(unstack e b)']
> Next lifted action: stack
> Repair set:
unstack,(holding ?y),effPos,1
put-down,(holding ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=11

>>>>  A* iteration 3233  <<<<

> Fringe size: 18827
> First 20 nodes: (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=4
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up b)', '(stack c c)']
> Next lifted action: unstack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 3234  <<<<

> Fringe size: 18827
> First 20 nodes: (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=5
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up b)', '(stack c c)', '(unstack c c)']
> Next lifted action: put-down
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=1

>>>>  A* iteration 3235  <<<<

> Fringe size: 18829
> First 20 nodes: (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=6
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up b)', '(stack c c)', '(unstack c c)', '(put-down c)']
> Next lifted action: unstack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 3236  <<<<

> Fringe size: 18831
> First 20 nodes: (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=4
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up b)', '(stack c b)']
> Next lifted action: unstack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 3237  <<<<

> Fringe size: 18831
> First 20 nodes: (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=5
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up b)', '(stack c b)', '(unstack c b)']
> Next lifted action: put-down
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=1

>>>>  A* iteration 3238  <<<<

> Fringe size: 18833
> First 20 nodes: (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=6
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up b)', '(stack c b)', '(unstack c b)', '(put-down c)']
> Next lifted action: unstack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 3239  <<<<

> Fringe size: 18834
> First 20 nodes: (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=4
> Ground actions: ['(unstack c e)', '(put-down d)', '(pick-up d)', '(stack c d)']
> Next lifted action: unstack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 3240  <<<<

> Fringe size: 18834
> First 20 nodes: (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=5
> Ground actions: ['(unstack c e)', '(put-down d)', '(pick-up d)', '(stack c d)', '(unstack c d)']
> Next lifted action: put-down
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=1

>>>>  A* iteration 3241  <<<<

> Fringe size: 18835
> First 20 nodes: (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=6
> Ground actions: ['(unstack c e)', '(put-down d)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down c)']
> Next lifted action: unstack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 3242  <<<<

> Fringe size: 18836
> First 20 nodes: (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=4
> Ground actions: ['(unstack c e)', '(put-down a)', '(pick-up a)', '(stack c a)']
> Next lifted action: unstack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 3243  <<<<

> Fringe size: 18836
> First 20 nodes: (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=5
> Ground actions: ['(unstack c e)', '(put-down a)', '(pick-up a)', '(stack c a)', '(unstack c a)']
> Next lifted action: put-down
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=1

>>>>  A* iteration 3244  <<<<

> Fringe size: 18837
> First 20 nodes: (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=6
> Ground actions: ['(unstack c e)', '(put-down a)', '(pick-up a)', '(stack c a)', '(unstack c a)', '(put-down c)']
> Next lifted action: unstack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 3245  <<<<

> Fringe size: 18838
> First 20 nodes: (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=4
> Ground actions: ['(unstack c e)', '(put-down c)', '(pick-up d)', '(stack c d)']
> Next lifted action: unstack
> Repair set:
put-down,(holding ?x),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 3246  <<<<

> Fringe size: 18838
> First 20 nodes: (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=5
> Ground actions: ['(unstack c e)', '(put-down c)', '(pick-up d)', '(stack c d)', '(unstack c d)']
> Next lifted action: put-down
> Repair set:
put-down,(holding ?x),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=1

>>>>  A* iteration 3247  <<<<

> Fringe size: 18839
> First 20 nodes: (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=6
> Ground actions: ['(unstack c e)', '(put-down c)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down c)']
> Next lifted action: unstack
> Repair set:
put-down,(holding ?x),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 3248  <<<<

> Fringe size: 18840
> First 20 nodes: (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=4
> Ground actions: ['(unstack c e)', '(put-down c)', '(pick-up c)', '(stack c c)']
> Next lifted action: unstack
> Repair set:
put-down,(holding ?x),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 3249  <<<<

> Fringe size: 18840
> First 20 nodes: (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=5
> Ground actions: ['(unstack c e)', '(put-down c)', '(pick-up c)', '(stack c c)', '(unstack c c)']
> Next lifted action: put-down
> Repair set:
put-down,(holding ?x),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=1

>>>>  A* iteration 3250  <<<<

> Fringe size: 18841
> First 20 nodes: (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=6
> Ground actions: ['(unstack c e)', '(put-down c)', '(pick-up c)', '(stack c c)', '(unstack c c)', '(put-down c)']
> Next lifted action: unstack
> Repair set:
put-down,(holding ?x),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 3251  <<<<

> Fringe size: 18843
> First 20 nodes: (D:5,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=4
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up d)', '(stack c d)']
> Next lifted action: unstack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 3252  <<<<

> Fringe size: 18844
> First 20 nodes: (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=5
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up d)', '(stack c d)', '(unstack b a)']
> Next lifted action: put-down
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 3253  <<<<

> Fringe size: 18846
> First 20 nodes: (D:7,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=6
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up d)', '(stack c d)', '(unstack b a)', '(put-down b)']
> Next lifted action: unstack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(put-down c)', '(put-down e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom ontable(c)>]
> Possible groundings:
['(unstack c e)', '(unstack e b)', '(unstack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(unstack c e)', '(unstack e b)', '(unstack e e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(e, e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)', '(stack e b)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(unstack b a)', '(unstack c c)', '(unstack c e)']
> Current state:
[<Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(put-down c)']
> Current state:
[<Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom ontable(c)>]
> Possible groundings:
['(unstack b a)', '(unstack c c)', '(unstack c e)']
> Current state:
[<Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, b)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(unstack b a)', '(unstack c b)', '(unstack c e)']
> Current state:
[<Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, b)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(put-down c)']
> Current state:
[<Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, b)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom ontable(c)>]
> Possible groundings:
['(unstack b a)', '(unstack c b)', '(unstack c e)']
> Current state:
[<Atom on(e, b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(unstack c d)', '(unstack c e)']
> Current state:
[<Atom on(e, b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(put-down c)']
> Current state:
[<Atom on(e, b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom ontable(c)>]
> Possible groundings:
['(unstack c d)', '(unstack c e)']
> Current state:
[<Atom on(e, b)>, <Atom on(c, a)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(unstack c a)', '(unstack c e)']
> Current state:
[<Atom on(e, b)>, <Atom on(c, a)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(put-down c)']
> Current state:
[<Atom on(e, b)>, <Atom on(c, a)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>, <Atom ontable(c)>]
> Possible groundings:
['(unstack c a)', '(unstack c e)']
> Current state:
[<Atom on(e, b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom ontable(c)>]
> Possible groundings:
['(unstack c d)', '(unstack c e)']
> Current state:
[<Atom on(e, b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom ontable(c)>]
> Possible groundings:
['(put-down c)']
> Current state:
[<Atom on(e, b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom ontable(c)>]
> Possible groundings:
['(unstack c d)', '(unstack c e)']
> Current state:
[<Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom ontable(c)>]
> Possible groundings:
['(unstack c c)', '(unstack c e)']
> Current state:
[<Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom ontable(c)>]
> Possible groundings:
['(put-down c)']
> Current state:
[<Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom ontable(c)>]
> Possible groundings:
['(unstack c c)', '(unstack c e)']
> Current state:
[<Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(unstack b a)', '(unstack c d)', '(unstack c e)']
> Current state:
[<Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(put-down b)', '(put-down c)']
> Current state:
[<Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(unstack b a)', '(unstack c d)', '(unstack c e)']
> Current state:
[<Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]

>>>>  A* iteration 3254  <<<<

> Fringe size: 18851
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=7
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up d)', '(stack c d)', '(unstack b a)', '(put-down b)', '(unstack c d)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 3255  <<<<

> Fringe size: 18852
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up d)', '(stack c d)', '(unstack b a)', '(put-down b)', '(unstack c d)', '(stack c b)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 3256  <<<<

> Fringe size: 18853
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up d)', '(stack c d)', '(unstack b a)', '(put-down b)', '(unstack c d)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 3257  <<<<

> Fringe size: 18858
> First 20 nodes: (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up d)', '(stack c d)', '(unstack b a)', '(put-down b)', '(unstack c d)', '(stack c c)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 3258  <<<<

> Fringe size: 18859
> First 20 nodes: (D:9,C:2), (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up d)', '(stack c d)', '(unstack b a)', '(put-down b)', '(unstack c d)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 3259  <<<<

> Fringe size: 18864
> First 20 nodes: (D:6,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up d)', '(stack c d)', '(unstack b a)', '(put-down b)', '(unstack c d)', '(stack c d)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 3260  <<<<

> Fringe size: 18866
> First 20 nodes: (D:7,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=6
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up d)', '(stack c d)', '(unstack b a)', '(put-down c)']
> Next lifted action: unstack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 3261  <<<<

> Fringe size: 18871
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=7
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up d)', '(stack c d)', '(unstack b a)', '(put-down c)', '(unstack c d)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 3262  <<<<

> Fringe size: 18873
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up d)', '(stack c d)', '(unstack b a)', '(put-down c)', '(unstack c d)', '(stack b b)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 3263  <<<<

> Fringe size: 18878
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up d)', '(stack c d)', '(unstack b a)', '(put-down c)', '(unstack c d)', '(stack b b)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 3264  <<<<

> Fringe size: 18880
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up d)', '(stack c d)', '(unstack b a)', '(put-down c)', '(unstack c d)', '(stack b b)', '(pick-up b)', '(stack c b)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 3265  <<<<

> Fringe size: 18885
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up d)', '(stack c d)', '(unstack b a)', '(put-down c)', '(unstack c d)', '(stack b b)', '(pick-up b)', '(stack c b)', '(pick-up c)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 3266  <<<<

> Fringe size: 18887
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up d)', '(stack c d)', '(unstack b a)', '(put-down c)', '(unstack c d)', '(stack b b)', '(pick-up b)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 3267  <<<<

> Fringe size: 18892
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up d)', '(stack c d)', '(unstack b a)', '(put-down c)', '(unstack c d)', '(stack b b)', '(pick-up b)', '(stack c c)', '(pick-up c)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 3268  <<<<

> Fringe size: 18894
> First 20 nodes: (D:11,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up d)', '(stack c d)', '(unstack b a)', '(put-down c)', '(unstack c d)', '(stack b b)', '(pick-up b)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 3269  <<<<

> Fringe size: 18899
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up d)', '(stack c d)', '(unstack b a)', '(put-down c)', '(unstack c d)', '(stack b b)', '(pick-up b)', '(stack c d)', '(pick-up c)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 3270  <<<<

> Fringe size: 18901
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up d)', '(stack c d)', '(unstack b a)', '(put-down c)', '(unstack c d)', '(stack b c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 3271  <<<<

> Fringe size: 18906
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up d)', '(stack c d)', '(unstack b a)', '(put-down c)', '(unstack c d)', '(stack b c)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 3272  <<<<

> Fringe size: 18908
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up d)', '(stack c d)', '(unstack b a)', '(put-down c)', '(unstack c d)', '(stack b c)', '(pick-up b)', '(stack c b)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 3273  <<<<

> Fringe size: 18913
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up d)', '(stack c d)', '(unstack b a)', '(put-down c)', '(unstack c d)', '(stack b c)', '(pick-up b)', '(stack c b)', '(pick-up c)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 3274  <<<<

> Fringe size: 18915
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up d)', '(stack c d)', '(unstack b a)', '(put-down c)', '(unstack c d)', '(stack b c)', '(pick-up b)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 3275  <<<<

> Fringe size: 18920
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up d)', '(stack c d)', '(unstack b a)', '(put-down c)', '(unstack c d)', '(stack b c)', '(pick-up b)', '(stack c c)', '(pick-up c)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack c b)', '(stack c c)', '(stack c d)']
> Current state:
[<Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, b)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)']
> Current state:
[<Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)']
> Current state:
[<Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack c b)', '(stack c c)', '(stack c d)']
> Current state:
[<Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)']
> Current state:
[<Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack c b)', '(stack c c)', '(stack c d)']
> Current state:
[<Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom ontable(c)>]
> Possible groundings:
['(unstack b a)', '(unstack c d)', '(unstack c e)']
> Current state:
[<Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom ontable(c)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack c b)', '(stack c c)', '(stack c d)']
> Current state:
[<Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up b)', '(pick-up c)', '(pick-up d)']
> Current state:
[<Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom ontable(c)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack c b)', '(stack c c)', '(stack c d)']
> Current state:
[<Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, b)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up b)', '(pick-up c)', '(pick-up d)']
> Current state:
[<Atom on(c, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom clear(d)>, <Atom on(c, d)>, <Atom ontable(c)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack c b)', '(stack c c)', '(stack c d)']
> Current state:
[<Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up b)', '(pick-up c)', '(pick-up d)']
> Current state:
[<Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom clear(d)>, <Atom on(c, d)>, <Atom ontable(c)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack c b)', '(stack c c)', '(stack c d)']
> Current state:
[<Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up b)', '(pick-up c)', '(pick-up d)']
> Current state:
[<Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom ontable(c)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack c b)', '(stack c c)', '(stack c d)']
> Current state:
[<Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up b)', '(pick-up c)', '(pick-up d)']
> Current state:
[<Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom ontable(c)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack c b)', '(stack c c)', '(stack c d)']
> Current state:
[<Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, b)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up b)', '(pick-up c)', '(pick-up d)']
> Current state:
[<Atom on(c, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom clear(d)>, <Atom on(c, d)>, <Atom ontable(c)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack c b)', '(stack c c)', '(stack c d)']
> Current state:
[<Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up b)', '(pick-up c)', '(pick-up d)']
> Current state:
[<Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom clear(d)>, <Atom on(c, d)>, <Atom ontable(c)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack c b)', '(stack c c)', '(stack c d)']

>>>>  A* iteration 3276  <<<<

> Fringe size: 18922
> First 20 nodes: (D:11,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up d)', '(stack c d)', '(unstack b a)', '(put-down c)', '(unstack c d)', '(stack b c)', '(pick-up b)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 3277  <<<<

> Fringe size: 18927
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up d)', '(stack c d)', '(unstack b a)', '(put-down c)', '(unstack c d)', '(stack b c)', '(pick-up b)', '(stack c d)', '(pick-up c)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 3278  <<<<

> Fringe size: 18929
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up d)', '(stack c d)', '(unstack b a)', '(put-down c)', '(unstack c d)', '(stack b d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 3279  <<<<

> Fringe size: 18934
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up d)', '(stack c d)', '(unstack b a)', '(put-down c)', '(unstack c d)', '(stack b d)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 3280  <<<<

> Fringe size: 18936
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up d)', '(stack c d)', '(unstack b a)', '(put-down c)', '(unstack c d)', '(stack b d)', '(pick-up b)', '(stack c b)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 3281  <<<<

> Fringe size: 18941
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up d)', '(stack c d)', '(unstack b a)', '(put-down c)', '(unstack c d)', '(stack b d)', '(pick-up b)', '(stack c b)', '(pick-up c)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 3282  <<<<

> Fringe size: 18943
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up d)', '(stack c d)', '(unstack b a)', '(put-down c)', '(unstack c d)', '(stack b d)', '(pick-up b)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 3283  <<<<

> Fringe size: 18948
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up d)', '(stack c d)', '(unstack b a)', '(put-down c)', '(unstack c d)', '(stack b d)', '(pick-up b)', '(stack c c)', '(pick-up c)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 3284  <<<<

> Fringe size: 18950
> First 20 nodes: (D:11,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up d)', '(stack c d)', '(unstack b a)', '(put-down c)', '(unstack c d)', '(stack b d)', '(pick-up b)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 3285  <<<<

> Fringe size: 18955
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up d)', '(stack c d)', '(unstack b a)', '(put-down c)', '(unstack c d)', '(stack b d)', '(pick-up b)', '(stack c d)', '(pick-up c)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 3286  <<<<

> Fringe size: 18957
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up d)', '(stack c d)', '(unstack b a)', '(put-down c)', '(unstack c d)', '(stack c b)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 3287  <<<<

> Fringe size: 18962
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up d)', '(stack c d)', '(unstack b a)', '(put-down c)', '(unstack c d)', '(stack c b)', '(pick-up c)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 3288  <<<<

> Fringe size: 18964
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up d)', '(stack c d)', '(unstack b a)', '(put-down c)', '(unstack c d)', '(stack c b)', '(pick-up c)', '(stack b b)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 3289  <<<<

> Fringe size: 18969
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up d)', '(stack c d)', '(unstack b a)', '(put-down c)', '(unstack c d)', '(stack c b)', '(pick-up c)', '(stack b b)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 3290  <<<<

> Fringe size: 18971
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up d)', '(stack c d)', '(unstack b a)', '(put-down c)', '(unstack c d)', '(stack c b)', '(pick-up c)', '(stack b c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 3291  <<<<

> Fringe size: 18976
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up d)', '(stack c d)', '(unstack b a)', '(put-down c)', '(unstack c d)', '(stack c b)', '(pick-up c)', '(stack b c)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 3292  <<<<

> Fringe size: 18978
> First 20 nodes: (D:11,C:2), (D:8,C:2), (D:8,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up d)', '(stack c d)', '(unstack b a)', '(put-down c)', '(unstack c d)', '(stack c b)', '(pick-up c)', '(stack b d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 3293  <<<<

> Fringe size: 18983
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up d)', '(stack c d)', '(unstack b a)', '(put-down c)', '(unstack c d)', '(stack c b)', '(pick-up c)', '(stack b d)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 3294  <<<<

> Fringe size: 18985
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up d)', '(stack c d)', '(unstack b a)', '(put-down c)', '(unstack c d)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 3295  <<<<

> Fringe size: 18990
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up d)', '(stack c d)', '(unstack b a)', '(put-down c)', '(unstack c d)', '(stack c c)', '(pick-up c)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 3296  <<<<

> Fringe size: 18992
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up d)', '(stack c d)', '(unstack b a)', '(put-down c)', '(unstack c d)', '(stack c c)', '(pick-up c)', '(stack b b)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3
> Current state:
[<Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up b)', '(pick-up c)', '(pick-up d)']
> Current state:
[<Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom ontable(c)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack c b)', '(stack c c)', '(stack c d)']
> Current state:
[<Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up b)', '(pick-up c)', '(pick-up d)']
> Current state:
[<Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom ontable(c)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack c b)', '(stack c c)', '(stack c d)']
> Current state:
[<Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, b)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up b)', '(pick-up c)', '(pick-up d)']
> Current state:
[<Atom on(c, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom clear(d)>, <Atom on(c, d)>, <Atom ontable(c)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack c b)', '(stack c c)', '(stack c d)']
> Current state:
[<Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up b)', '(pick-up c)', '(pick-up d)']
> Current state:
[<Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom clear(d)>, <Atom on(c, d)>, <Atom ontable(c)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack c b)', '(stack c c)', '(stack c d)']
> Current state:
[<Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up b)', '(pick-up c)', '(pick-up d)']
> Current state:
[<Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom ontable(c)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack c b)', '(stack c c)', '(stack c d)']
> Current state:
[<Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, b)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up b)', '(pick-up c)', '(pick-up d)']
> Current state:
[<Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, b)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom ontable(c)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack c b)', '(stack c c)', '(stack c d)']
> Current state:
[<Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, b)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up b)', '(pick-up c)', '(pick-up d)']
> Current state:
[<Atom on(c, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom clear(d)>, <Atom on(c, d)>, <Atom ontable(c)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack c b)', '(stack c c)', '(stack c d)']
> Current state:
[<Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, b)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up b)', '(pick-up c)', '(pick-up d)']
> Current state:
[<Atom on(c, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom clear(d)>, <Atom on(c, d)>, <Atom ontable(c)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack c b)', '(stack c c)', '(stack c d)']
> Current state:
[<Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, b)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up b)', '(pick-up c)', '(pick-up d)']
> Current state:
[<Atom on(c, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom clear(d)>, <Atom on(c, d)>, <Atom ontable(c)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack c b)', '(stack c c)', '(stack c d)']
> Current state:
[<Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up b)', '(pick-up c)', '(pick-up d)']
> Current state:
[<Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom ontable(c)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack c b)', '(stack c c)', '(stack c d)']
> Current state:
[<Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up b)', '(pick-up c)', '(pick-up d)']

>>>>  A* iteration 3297  <<<<

> Fringe size: 18997
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up d)', '(stack c d)', '(unstack b a)', '(put-down c)', '(unstack c d)', '(stack c c)', '(pick-up c)', '(stack b b)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 3298  <<<<

> Fringe size: 18999
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:8,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up d)', '(stack c d)', '(unstack b a)', '(put-down c)', '(unstack c d)', '(stack c c)', '(pick-up c)', '(stack b c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 3299  <<<<

> Fringe size: 19004
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up d)', '(stack c d)', '(unstack b a)', '(put-down c)', '(unstack c d)', '(stack c c)', '(pick-up c)', '(stack b c)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 3300  <<<<

> Fringe size: 19006
> First 20 nodes: (D:11,C:2), (D:8,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up d)', '(stack c d)', '(unstack b a)', '(put-down c)', '(unstack c d)', '(stack c c)', '(pick-up c)', '(stack b d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 3301  <<<<

> Fringe size: 19011
> First 20 nodes: (D:8,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up d)', '(stack c d)', '(unstack b a)', '(put-down c)', '(unstack c d)', '(stack c c)', '(pick-up c)', '(stack b d)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 3302  <<<<

> Fringe size: 19013
> First 20 nodes: (D:9,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up d)', '(stack c d)', '(unstack b a)', '(put-down c)', '(unstack c d)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 3303  <<<<

> Fringe size: 19018
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up d)', '(stack c d)', '(unstack b a)', '(put-down c)', '(unstack c d)', '(stack c d)', '(pick-up c)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 3304  <<<<

> Fringe size: 19020
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up d)', '(stack c d)', '(unstack b a)', '(put-down c)', '(unstack c d)', '(stack c d)', '(pick-up c)', '(stack b b)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 3305  <<<<

> Fringe size: 19025
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up d)', '(stack c d)', '(unstack b a)', '(put-down c)', '(unstack c d)', '(stack c d)', '(pick-up c)', '(stack b b)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 3306  <<<<

> Fringe size: 19027
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up d)', '(stack c d)', '(unstack b a)', '(put-down c)', '(unstack c d)', '(stack c d)', '(pick-up c)', '(stack b c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 3307  <<<<

> Fringe size: 19032
> First 20 nodes: (D:10,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up d)', '(stack c d)', '(unstack b a)', '(put-down c)', '(unstack c d)', '(stack c d)', '(pick-up c)', '(stack b c)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 3308  <<<<

> Fringe size: 19034
> First 20 nodes: (D:11,C:2), (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up d)', '(stack c d)', '(unstack b a)', '(put-down c)', '(unstack c d)', '(stack c d)', '(pick-up c)', '(stack b d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 3309  <<<<

> Fringe size: 19039
> First 20 nodes: (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up d)', '(stack c d)', '(unstack b a)', '(put-down c)', '(unstack c d)', '(stack c d)', '(pick-up c)', '(stack b d)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 3310  <<<<

> Fringe size: 19039
> First 20 nodes: (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=5
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up d)', '(stack c d)', '(unstack c d)']
> Next lifted action: put-down
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=1

>>>>  A* iteration 3311  <<<<

> Fringe size: 19041
> First 20 nodes: (D:7,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=6
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down c)']
> Next lifted action: unstack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 3312  <<<<

> Fringe size: 19046
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=7
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack b a)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 3313  <<<<

> Fringe size: 19048
> First 20 nodes: (D:9,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack b a)', '(stack b b)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 3314  <<<<

> Fringe size: 19053
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack b a)', '(stack b b)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 3315  <<<<

> Fringe size: 19058
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack b a)', '(stack b b)', '(pick-up c)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 3316  <<<<

> Fringe size: 19060
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack b a)', '(stack b c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 3317  <<<<

> Fringe size: 19065
> First 20 nodes: (D:8,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack b a)', '(stack b c)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6
> Current state:
[<Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom clear(d)>, <Atom on(c, d)>, <Atom ontable(c)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack c b)', '(stack c c)', '(stack c d)']
> Current state:
[<Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up b)', '(pick-up c)', '(pick-up d)']
> Current state:
[<Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom clear(d)>, <Atom on(c, d)>, <Atom ontable(c)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack c b)', '(stack c c)', '(stack c d)']
> Current state:
[<Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up b)', '(pick-up c)', '(pick-up d)']
> Current state:
[<Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom clear(d)>, <Atom on(c, d)>, <Atom ontable(c)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack c b)', '(stack c c)', '(stack c d)']
> Current state:
[<Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up b)', '(pick-up c)', '(pick-up d)']
> Current state:
[<Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom ontable(c)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack c b)', '(stack c c)', '(stack c d)']
> Current state:
[<Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up b)', '(pick-up c)', '(pick-up d)']
> Current state:
[<Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom ontable(c)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack c b)', '(stack c c)', '(stack c d)']
> Current state:
[<Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up b)', '(pick-up c)', '(pick-up d)']
> Current state:
[<Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom ontable(c)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack c b)', '(stack c c)', '(stack c d)']
> Current state:
[<Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up b)', '(pick-up c)', '(pick-up d)']
> Current state:
[<Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom ontable(c)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack c b)', '(stack c c)', '(stack c d)']
> Current state:
[<Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(put-down c)']
> Current state:
[<Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom ontable(c)>]
> Possible groundings:
['(unstack b a)', '(unstack c d)', '(unstack c e)']
> Current state:
[<Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom ontable(c)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack c b)', '(stack c c)', '(stack c d)']
> Current state:
[<Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up b)', '(pick-up c)', '(pick-up d)']
> Current state:
[<Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom ontable(c)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack c b)', '(stack c c)', '(stack c d)']
> Current state:
[<Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom ontable(c)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack c b)', '(stack c c)', '(stack c d)']
> Current state:
[<Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up b)', '(pick-up c)', '(pick-up d)']
> Current state:
[<Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom ontable(c)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack c b)', '(stack c c)', '(stack c d)']

>>>>  A* iteration 3318  <<<<

> Fringe size: 19067
> First 20 nodes: (D:9,C:2), (D:9,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack b a)', '(stack b d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 3319  <<<<

> Fringe size: 19072
> First 20 nodes: (D:9,C:2), (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack b a)', '(stack b d)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 3320  <<<<

> Fringe size: 19077
> First 20 nodes: (D:4,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up d)', '(stack c d)', '(unstack c d)', '(put-down c)', '(unstack b a)', '(stack b d)', '(pick-up c)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 3321  <<<<

> Fringe size: 19078
> First 20 nodes: (D:5,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=4
> Ground actions: ['(unstack c e)', '(put-down d)', '(pick-up d)', '(stack c c)']
> Next lifted action: unstack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 3322  <<<<

> Fringe size: 19078
> First 20 nodes: (D:6,C:2), (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=5
> Ground actions: ['(unstack c e)', '(put-down d)', '(pick-up d)', '(stack c c)', '(unstack c c)']
> Next lifted action: put-down
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=1

>>>>  A* iteration 3323  <<<<

> Fringe size: 19079
> First 20 nodes: (D:4,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=6
> Ground actions: ['(unstack c e)', '(put-down d)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down c)']
> Next lifted action: unstack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 3324  <<<<

> Fringe size: 19081
> First 20 nodes: (D:5,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=4
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c c)']
> Next lifted action: unstack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 3325  <<<<

> Fringe size: 19085
> First 20 nodes: (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=5
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c c)', '(unstack c c)']
> Next lifted action: put-down
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=5

>>>>  A* iteration 3326  <<<<

> Fringe size: 19087
> First 20 nodes: (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=6
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c c)', '(unstack c c)', '(put-down a)']
> Next lifted action: unstack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 3327  <<<<

> Fringe size: 19090
> First 20 nodes: (D:7,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=6
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c c)', '(unstack c c)', '(put-down b)']
> Next lifted action: unstack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=4

>>>>  A* iteration 3328  <<<<

> Fringe size: 19097
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=7
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 3329  <<<<

> Fringe size: 19099
> First 20 nodes: (D:9,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack b b)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 3330  <<<<

> Fringe size: 19106
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack b b)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 3331  <<<<

> Fringe size: 19108
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack b b)', '(pick-up b)', '(stack c b)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 3332  <<<<

> Fringe size: 19115
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack b b)', '(pick-up b)', '(stack c b)', '(pick-up d)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 3333  <<<<

> Fringe size: 19117
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack b b)', '(pick-up b)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 3334  <<<<

> Fringe size: 19124
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack b b)', '(pick-up b)', '(stack c c)', '(pick-up d)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 3335  <<<<

> Fringe size: 19126
> First 20 nodes: (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack b b)', '(pick-up b)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 3336  <<<<

> Fringe size: 19128
> First 20 nodes: (D:11,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack b b)', '(pick-up b)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 3337  <<<<

> Fringe size: 19135
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack b b)', '(pick-up b)', '(stack c e)', '(pick-up d)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 3338  <<<<

> Fringe size: 19142
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack b b)', '(pick-up d)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8
> Current state:
[<Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up b)', '(pick-up c)', '(pick-up d)']
> Current state:
[<Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom ontable(c)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack c b)', '(stack c c)', '(stack c d)']
> Current state:
[<Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom ontable(c)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack c b)', '(stack c c)', '(stack c d)']
> Current state:
[<Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(unstack c c)', '(unstack c e)']
> Current state:
[<Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(put-down c)']
> Current state:
[<Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom ontable(c)>]
> Possible groundings:
['(unstack c c)', '(unstack c e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(unstack c c)', '(unstack c e)', '(unstack e b)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(put-down a)', '(put-down b)', '(put-down c)', '(put-down d)', '(put-down e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(a)>]
> Possible groundings:
['(unstack c c)', '(unstack c e)', '(unstack e b)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom ontable(b)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(unstack b a)', '(unstack c c)', '(unstack c e)', '(unstack e b)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom ontable(b)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom ontable(b)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom on(c, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(c, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']

>>>>  A* iteration 3339  <<<<

> Fringe size: 19144
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack b b)', '(pick-up d)', '(stack c b)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 3340  <<<<

> Fringe size: 19146
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack b b)', '(pick-up d)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 3341  <<<<

> Fringe size: 19153
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack b b)', '(pick-up d)', '(stack c c)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 3342  <<<<

> Fringe size: 19155
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack b b)', '(pick-up d)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 3343  <<<<

> Fringe size: 19162
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack b b)', '(pick-up d)', '(stack c d)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 3344  <<<<

> Fringe size: 19164
> First 20 nodes: (D:11,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack b b)', '(pick-up d)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 3345  <<<<

> Fringe size: 19171
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack b b)', '(pick-up d)', '(stack c e)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 3346  <<<<

> Fringe size: 19173
> First 20 nodes: (D:9,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack b c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 3347  <<<<

> Fringe size: 19180
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack b c)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 3348  <<<<

> Fringe size: 19182
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack b c)', '(pick-up b)', '(stack c b)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 3349  <<<<

> Fringe size: 19189
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack b c)', '(pick-up b)', '(stack c b)', '(pick-up d)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 3350  <<<<

> Fringe size: 19191
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack b c)', '(pick-up b)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 3351  <<<<

> Fringe size: 19198
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack b c)', '(pick-up b)', '(stack c c)', '(pick-up d)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 3352  <<<<

> Fringe size: 19200
> First 20 nodes: (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack b c)', '(pick-up b)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 3353  <<<<

> Fringe size: 19202
> First 20 nodes: (D:11,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack b c)', '(pick-up b)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 3354  <<<<

> Fringe size: 19209
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack b c)', '(pick-up b)', '(stack c e)', '(pick-up d)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 3355  <<<<

> Fringe size: 19216
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack b c)', '(pick-up d)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 3356  <<<<

> Fringe size: 19218
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack b c)', '(pick-up d)', '(stack c b)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 3357  <<<<

> Fringe size: 19220
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack b c)', '(pick-up d)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3
> Current state:
[<Atom clear(e)>, <Atom on(c, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom ontable(b)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom on(c, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(c, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom on(c, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]

>>>>  A* iteration 3358  <<<<

> Fringe size: 19227
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack b c)', '(pick-up d)', '(stack c c)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 3359  <<<<

> Fringe size: 19229
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack b c)', '(pick-up d)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 3360  <<<<

> Fringe size: 19236
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack b c)', '(pick-up d)', '(stack c d)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 3361  <<<<

> Fringe size: 19238
> First 20 nodes: (D:11,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack b c)', '(pick-up d)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 3362  <<<<

> Fringe size: 19245
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack b c)', '(pick-up d)', '(stack c e)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 3363  <<<<

> Fringe size: 19247
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack b d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 3364  <<<<

> Fringe size: 19254
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack b d)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 3365  <<<<

> Fringe size: 19256
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack b d)', '(pick-up b)', '(stack c b)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 3366  <<<<

> Fringe size: 19258
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack b d)', '(pick-up b)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 3367  <<<<

> Fringe size: 19260
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack b d)', '(pick-up b)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 3368  <<<<

> Fringe size: 19262
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack b d)', '(pick-up b)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 3369  <<<<

> Fringe size: 19264
> First 20 nodes: (D:9,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack b e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 3370  <<<<

> Fringe size: 19271
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack b e)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 3371  <<<<

> Fringe size: 19273
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack b e)', '(pick-up b)', '(stack c b)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 3372  <<<<

> Fringe size: 19280
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack b e)', '(pick-up b)', '(stack c b)', '(pick-up d)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 3373  <<<<

> Fringe size: 19282
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack b e)', '(pick-up b)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 3374  <<<<

> Fringe size: 19289
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack b e)', '(pick-up b)', '(stack c c)', '(pick-up d)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 3375  <<<<

> Fringe size: 19291
> First 20 nodes: (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack b e)', '(pick-up b)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 3376  <<<<

> Fringe size: 19293
> First 20 nodes: (D:11,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack b e)', '(pick-up b)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 3377  <<<<

> Fringe size: 19300
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack b e)', '(pick-up b)', '(stack c e)', '(pick-up d)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom ontable(b)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom on(c, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom ontable(b)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom on(c, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(c, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']

>>>>  A* iteration 3378  <<<<

> Fringe size: 19307
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack b e)', '(pick-up d)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 3379  <<<<

> Fringe size: 19309
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack b e)', '(pick-up d)', '(stack c b)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 3380  <<<<

> Fringe size: 19311
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack b e)', '(pick-up d)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 3381  <<<<

> Fringe size: 19318
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack b e)', '(pick-up d)', '(stack c c)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 3382  <<<<

> Fringe size: 19320
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack b e)', '(pick-up d)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 3383  <<<<

> Fringe size: 19327
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack b e)', '(pick-up d)', '(stack c d)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 3384  <<<<

> Fringe size: 19329
> First 20 nodes: (D:11,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack b e)', '(pick-up d)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 3385  <<<<

> Fringe size: 19336
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack b e)', '(pick-up d)', '(stack c e)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 3386  <<<<

> Fringe size: 19338
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack c b)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 3387  <<<<

> Fringe size: 19345
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack c b)', '(pick-up d)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 3388  <<<<

> Fringe size: 19347
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack c b)', '(pick-up d)', '(stack b b)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 3389  <<<<

> Fringe size: 19354
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack c b)', '(pick-up d)', '(stack b b)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 3390  <<<<

> Fringe size: 19356
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack c b)', '(pick-up d)', '(stack b c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 3391  <<<<

> Fringe size: 19363
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack c b)', '(pick-up d)', '(stack b c)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 3392  <<<<

> Fringe size: 19365
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack c b)', '(pick-up d)', '(stack b d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 3393  <<<<

> Fringe size: 19372
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack c b)', '(pick-up d)', '(stack b d)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 3394  <<<<

> Fringe size: 19374
> First 20 nodes: (D:11,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack c b)', '(pick-up d)', '(stack b e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 3395  <<<<

> Fringe size: 19381
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack c b)', '(pick-up d)', '(stack b e)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 3396  <<<<

> Fringe size: 19383
> First 20 nodes: (D:9,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom on(c, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom ontable(b)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, b)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(c, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom on(c, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(c, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom on(c, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(c, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom on(c, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(c, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom on(c, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(c, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom ontable(b)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']

>>>>  A* iteration 3397  <<<<

> Fringe size: 19390
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack c c)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
unstack,(clear ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 3398  <<<<

> Fringe size: 19392
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack c c)', '(pick-up b)', '(stack b c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
unstack,(clear ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 3399  <<<<

> Fringe size: 19399
> First 20 nodes: (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack c c)', '(pick-up b)', '(stack b c)', '(pick-up d)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
unstack,(clear ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 3400  <<<<

> Fringe size: 19401
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack c c)', '(pick-up b)', '(stack b d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
unstack,(clear ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 3401  <<<<

> Fringe size: 19408
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack c c)', '(pick-up d)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 3402  <<<<

> Fringe size: 19410
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack c c)', '(pick-up d)', '(stack b b)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 3403  <<<<

> Fringe size: 19417
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack c c)', '(pick-up d)', '(stack b b)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 3404  <<<<

> Fringe size: 19419
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack c c)', '(pick-up d)', '(stack b c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 3405  <<<<

> Fringe size: 19426
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack c c)', '(pick-up d)', '(stack b c)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 3406  <<<<

> Fringe size: 19428
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack c c)', '(pick-up d)', '(stack b d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 3407  <<<<

> Fringe size: 19435
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack c c)', '(pick-up d)', '(stack b d)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 3408  <<<<

> Fringe size: 19437
> First 20 nodes: (D:11,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack c c)', '(pick-up d)', '(stack b e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 3409  <<<<

> Fringe size: 19444
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack c c)', '(pick-up d)', '(stack b e)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 3410  <<<<

> Fringe size: 19446
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 3411  <<<<

> Fringe size: 19453
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack c d)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
unstack,(clear ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 3412  <<<<

> Fringe size: 19455
> First 20 nodes: (D:8,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack c d)', '(pick-up b)', '(stack b c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
unstack,(clear ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 3413  <<<<

> Fringe size: 19457
> First 20 nodes: (D:9,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 3414  <<<<

> Fringe size: 19464
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack c e)', '(pick-up d)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 3415  <<<<

> Fringe size: 19466
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack c e)', '(pick-up d)', '(stack b b)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 3416  <<<<

> Fringe size: 19473
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack c e)', '(pick-up d)', '(stack b b)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom ontable(b)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom ontable(b)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom ontable(b)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom ontable(b)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom ontable(b)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom ontable(b)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom ontable(b)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom ontable(b)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom ontable(b)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(c, d)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom ontable(b)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom ontable(b)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom ontable(b)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']

>>>>  A* iteration 3417  <<<<

> Fringe size: 19475
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack c e)', '(pick-up d)', '(stack b c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 3418  <<<<

> Fringe size: 19482
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack c e)', '(pick-up d)', '(stack b c)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 3419  <<<<

> Fringe size: 19484
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack c e)', '(pick-up d)', '(stack b d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 3420  <<<<

> Fringe size: 19491
> First 20 nodes: (D:10,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack c e)', '(pick-up d)', '(stack b d)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 3421  <<<<

> Fringe size: 19493
> First 20 nodes: (D:11,C:2), (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack c e)', '(pick-up d)', '(stack b e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 3422  <<<<

> Fringe size: 19500
> First 20 nodes: (D:6,C:2), (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c c)', '(unstack c c)', '(put-down b)', '(unstack b a)', '(stack c e)', '(pick-up d)', '(stack b e)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=8

>>>>  A* iteration 3423  <<<<

> Fringe size: 19502
> First 20 nodes: (D:6,C:2), (D:6,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=6
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c c)', '(unstack c c)', '(put-down c)']
> Next lifted action: unstack
> Repair set:
unstack,(holding ?y),effPos,1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 3424  <<<<

> Fringe size: 19504
> First 20 nodes: (D:6,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=6
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c c)', '(unstack c c)', '(put-down d)']
> Next lifted action: unstack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 3425  <<<<

> Fringe size: 19506
> First 20 nodes: (D:7,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=6
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c c)', '(unstack c c)', '(put-down e)']
> Next lifted action: unstack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 3426  <<<<

> Fringe size: 19511
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=7
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c c)', '(unstack c c)', '(put-down e)', '(unstack e b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 3427  <<<<

> Fringe size: 19512
> First 20 nodes: (D:9,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c c)', '(unstack c c)', '(put-down e)', '(unstack e b)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 3428  <<<<

> Fringe size: 19517
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c c)', '(unstack c c)', '(put-down e)', '(unstack e b)', '(stack c c)', '(pick-up d)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 3429  <<<<

> Fringe size: 19518
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c c)', '(unstack c c)', '(put-down e)', '(unstack e b)', '(stack c c)', '(pick-up d)', '(stack e c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 3430  <<<<

> Fringe size: 19523
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c c)', '(unstack c c)', '(put-down e)', '(unstack e b)', '(stack c c)', '(pick-up d)', '(stack e c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 3431  <<<<

> Fringe size: 19524
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c c)', '(unstack c c)', '(put-down e)', '(unstack e b)', '(stack c c)', '(pick-up d)', '(stack e d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 3432  <<<<

> Fringe size: 19529
> First 20 nodes: (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c c)', '(unstack c c)', '(put-down e)', '(unstack e b)', '(stack c c)', '(pick-up d)', '(stack e d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 3433  <<<<

> Fringe size: 19530
> First 20 nodes: (D:11,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c c)', '(unstack c c)', '(put-down e)', '(unstack e b)', '(stack c c)', '(pick-up d)', '(stack e e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 3434  <<<<

> Fringe size: 19535
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c c)', '(unstack c c)', '(put-down e)', '(unstack e b)', '(stack c c)', '(pick-up d)', '(stack e e)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 3435  <<<<

> Fringe size: 19540
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c c)', '(unstack c c)', '(put-down e)', '(unstack e b)', '(stack c c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
unstack,(clear ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 3436  <<<<

> Fringe size: 19541
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c c)', '(unstack c c)', '(put-down e)', '(unstack e b)', '(stack c c)', '(pick-up e)', '(stack e c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
unstack,(clear ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 3437  <<<<

> Fringe size: 19546
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c c)', '(unstack c c)', '(put-down e)', '(unstack e b)', '(stack c c)', '(pick-up e)', '(stack e c)', '(pick-up d)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
unstack,(clear ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 3438  <<<<

> Fringe size: 19547
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c c)', '(unstack c c)', '(put-down e)', '(unstack e b)', '(stack c c)', '(pick-up e)', '(stack e d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
unstack,(clear ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom ontable(b)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom ontable(b)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom ontable(b)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom on(b, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(e)>, <Atom clear(d)>, <Atom on(b, e)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack b e)', '(stack c b)', '(stack c c)', '(stack c d)', '(stack c e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom holding(e)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom ontable(c)>]
> Possible groundings:
['(unstack c c)', '(unstack c e)', '(unstack e b)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(unstack c c)', '(unstack c e)', '(unstack e b)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(unstack c c)', '(unstack c e)', '(unstack e b)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']

>>>>  A* iteration 3439  <<<<

> Fringe size: 19548
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c c)', '(unstack c c)', '(put-down e)', '(unstack e b)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 3440  <<<<

> Fringe size: 19553
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c c)', '(unstack c c)', '(put-down e)', '(unstack e b)', '(stack c d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
unstack,(clear ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 3441  <<<<

> Fringe size: 19554
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c c)', '(unstack c c)', '(put-down e)', '(unstack e b)', '(stack c d)', '(pick-up e)', '(stack e c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
unstack,(clear ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 3442  <<<<

> Fringe size: 19555
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c c)', '(unstack c c)', '(put-down e)', '(unstack e b)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 3443  <<<<

> Fringe size: 19560
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c c)', '(unstack c c)', '(put-down e)', '(unstack e b)', '(stack c e)', '(pick-up d)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 3444  <<<<

> Fringe size: 19561
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c c)', '(unstack c c)', '(put-down e)', '(unstack e b)', '(stack c e)', '(pick-up d)', '(stack e c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 3445  <<<<

> Fringe size: 19566
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c c)', '(unstack c c)', '(put-down e)', '(unstack e b)', '(stack c e)', '(pick-up d)', '(stack e c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 3446  <<<<

> Fringe size: 19567
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c c)', '(unstack c c)', '(put-down e)', '(unstack e b)', '(stack c e)', '(pick-up d)', '(stack e d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 3447  <<<<

> Fringe size: 19572
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c c)', '(unstack c c)', '(put-down e)', '(unstack e b)', '(stack c e)', '(pick-up d)', '(stack e d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 3448  <<<<

> Fringe size: 19573
> First 20 nodes: (D:11,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c c)', '(unstack c c)', '(put-down e)', '(unstack e b)', '(stack c e)', '(pick-up d)', '(stack e e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 3449  <<<<

> Fringe size: 19578
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c c)', '(unstack c c)', '(put-down e)', '(unstack e b)', '(stack c e)', '(pick-up d)', '(stack e e)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 3450  <<<<

> Fringe size: 19579
> First 20 nodes: (D:9,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c c)', '(unstack c c)', '(put-down e)', '(unstack e b)', '(stack e c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 3451  <<<<

> Fringe size: 19584
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c c)', '(unstack c c)', '(put-down e)', '(unstack e b)', '(stack e c)', '(pick-up d)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 3452  <<<<

> Fringe size: 19585
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c c)', '(unstack c c)', '(put-down e)', '(unstack e b)', '(stack e c)', '(pick-up d)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 3453  <<<<

> Fringe size: 19590
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c c)', '(unstack c c)', '(put-down e)', '(unstack e b)', '(stack e c)', '(pick-up d)', '(stack c c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 3454  <<<<

> Fringe size: 19591
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c c)', '(unstack c c)', '(put-down e)', '(unstack e b)', '(stack e c)', '(pick-up d)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 3455  <<<<

> Fringe size: 19596
> First 20 nodes: (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c c)', '(unstack c c)', '(put-down e)', '(unstack e b)', '(stack e c)', '(pick-up d)', '(stack c d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 3456  <<<<

> Fringe size: 19597
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c c)', '(unstack c c)', '(put-down e)', '(unstack e b)', '(stack e c)', '(pick-up d)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 3457  <<<<

> Fringe size: 19602
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c c)', '(unstack c c)', '(put-down e)', '(unstack e b)', '(stack e c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 3458  <<<<

> Fringe size: 19603
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c c)', '(unstack c c)', '(put-down e)', '(unstack e b)', '(stack e c)', '(pick-up e)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 3459  <<<<

> Fringe size: 19608
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c c)', '(unstack c c)', '(put-down e)', '(unstack e b)', '(stack e c)', '(pick-up e)', '(stack c c)', '(pick-up d)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 3460  <<<<

> Fringe size: 19609
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c c)', '(unstack c c)', '(put-down e)', '(unstack e b)', '(stack e c)', '(pick-up e)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 3461  <<<<

> Fringe size: 19610
> First 20 nodes: (D:11,C:2), (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c c)', '(unstack c c)', '(put-down e)', '(unstack e b)', '(stack e c)', '(pick-up e)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']

>>>>  A* iteration 3462  <<<<

> Fringe size: 19615
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c c)', '(unstack c c)', '(put-down e)', '(unstack e b)', '(stack e c)', '(pick-up e)', '(stack c e)', '(pick-up d)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 3463  <<<<

> Fringe size: 19616
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c c)', '(unstack c c)', '(put-down e)', '(unstack e b)', '(stack e d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 3464  <<<<

> Fringe size: 19621
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c c)', '(unstack c c)', '(put-down e)', '(unstack e b)', '(stack e d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 3465  <<<<

> Fringe size: 19622
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c c)', '(unstack c c)', '(put-down e)', '(unstack e b)', '(stack e d)', '(pick-up e)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 3466  <<<<

> Fringe size: 19623
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c c)', '(unstack c c)', '(put-down e)', '(unstack e b)', '(stack e d)', '(pick-up e)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 3467  <<<<

> Fringe size: 19624
> First 20 nodes: (D:8,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c c)', '(unstack c c)', '(put-down e)', '(unstack e b)', '(stack e d)', '(pick-up e)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 3468  <<<<

> Fringe size: 19625
> First 20 nodes: (D:9,C:2), (D:9,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c c)', '(unstack c c)', '(put-down e)', '(unstack e b)', '(stack e e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 3469  <<<<

> Fringe size: 19630
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c c)', '(unstack c c)', '(put-down e)', '(unstack e b)', '(stack e e)', '(pick-up d)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 3470  <<<<

> Fringe size: 19631
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c c)', '(unstack c c)', '(put-down e)', '(unstack e b)', '(stack e e)', '(pick-up d)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 3471  <<<<

> Fringe size: 19636
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c c)', '(unstack c c)', '(put-down e)', '(unstack e b)', '(stack e e)', '(pick-up d)', '(stack c c)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 3472  <<<<

> Fringe size: 19637
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:9,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c c)', '(unstack c c)', '(put-down e)', '(unstack e b)', '(stack e e)', '(pick-up d)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 3473  <<<<

> Fringe size: 19642
> First 20 nodes: (D:10,C:2), (D:9,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c c)', '(unstack c c)', '(put-down e)', '(unstack e b)', '(stack e e)', '(pick-up d)', '(stack c d)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 3474  <<<<

> Fringe size: 19643
> First 20 nodes: (D:9,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c c)', '(unstack c c)', '(put-down e)', '(unstack e b)', '(stack e e)', '(pick-up d)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 3475  <<<<

> Fringe size: 19648
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c c)', '(unstack c c)', '(put-down e)', '(unstack e b)', '(stack e e)', '(pick-up e)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 3476  <<<<

> Fringe size: 19649
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c c)', '(unstack c c)', '(put-down e)', '(unstack e b)', '(stack e e)', '(pick-up e)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 3477  <<<<

> Fringe size: 19654
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c c)', '(unstack c c)', '(put-down e)', '(unstack e b)', '(stack e e)', '(pick-up e)', '(stack c c)', '(pick-up d)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 3478  <<<<

> Fringe size: 19655
> First 20 nodes: (D:10,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c c)', '(unstack c c)', '(put-down e)', '(unstack e b)', '(stack e e)', '(pick-up e)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 3479  <<<<

> Fringe size: 19656
> First 20 nodes: (D:11,C:2), (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c c)', '(unstack c c)', '(put-down e)', '(unstack e b)', '(stack e e)', '(pick-up e)', '(stack c e)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 3480  <<<<

> Fringe size: 19661
> First 20 nodes: (D:4,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down e)', '(pick-up e)', '(stack c c)', '(unstack c c)', '(put-down e)', '(unstack e b)', '(stack e e)', '(pick-up e)', '(stack c e)', '(pick-up d)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 3481  <<<<

> Fringe size: 19663
> First 20 nodes: (D:5,C:2), (D:5,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=4
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up d)', '(stack c c)']
> Next lifted action: unstack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 3482  <<<<

> Fringe size: 19664
> First 20 nodes: (D:6,C:2), (D:6,C:2), (D:5,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=5
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up d)', '(stack c c)', '(unstack b a)']
> Next lifted action: put-down
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 3483  <<<<

> Fringe size: 19666
> First 20 nodes: (D:7,C:2), (D:6,C:2), (D:5,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=6
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up d)', '(stack c c)', '(unstack b a)', '(put-down b)']
> Next lifted action: unstack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 3484  <<<<

> Fringe size: 19671
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=7
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up d)', '(stack c c)', '(unstack b a)', '(put-down b)', '(unstack c c)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(e, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(pick-up d)', '(pick-up e)']
> Current state:
[<Atom clear(e)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom ontable(a)>, <Atom holding(e)>, <Atom on(b, a)>, <Atom ontable(e)>, <Atom on(e, e)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>]
> Possible groundings:
['(stack c c)', '(stack c d)', '(stack c e)', '(stack e c)', '(stack e d)', '(stack e e)']
> Current state:
[<Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(unstack b a)', '(unstack c c)', '(unstack c e)']
> Current state:
[<Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(put-down b)', '(put-down c)']
> Current state:
[<Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(unstack b a)', '(unstack c c)', '(unstack c e)']
> Current state:
[<Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack c b)', '(stack c c)', '(stack c d)']

>>>>  A* iteration 3485  <<<<

> Fringe size: 19672
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up d)', '(stack c c)', '(unstack b a)', '(put-down b)', '(unstack c c)', '(stack c b)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 3486  <<<<

> Fringe size: 19673
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up d)', '(stack c c)', '(unstack b a)', '(put-down b)', '(unstack c c)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 3487  <<<<

> Fringe size: 19678
> First 20 nodes: (D:8,C:2), (D:6,C:2), (D:5,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up d)', '(stack c c)', '(unstack b a)', '(put-down b)', '(unstack c c)', '(stack c c)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 3488  <<<<

> Fringe size: 19679
> First 20 nodes: (D:9,C:2), (D:6,C:2), (D:5,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up d)', '(stack c c)', '(unstack b a)', '(put-down b)', '(unstack c c)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=2

>>>>  A* iteration 3489  <<<<

> Fringe size: 19684
> First 20 nodes: (D:6,C:2), (D:5,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up d)', '(stack c c)', '(unstack b a)', '(put-down b)', '(unstack c c)', '(stack c d)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 3490  <<<<

> Fringe size: 19686
> First 20 nodes: (D:7,C:2), (D:5,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=6
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up d)', '(stack c c)', '(unstack b a)', '(put-down c)']
> Next lifted action: unstack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 3491  <<<<

> Fringe size: 19691
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:5,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=7
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up d)', '(stack c c)', '(unstack b a)', '(put-down c)', '(unstack c c)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 3492  <<<<

> Fringe size: 19693
> First 20 nodes: (D:9,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:5,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up d)', '(stack c c)', '(unstack b a)', '(put-down c)', '(unstack c c)', '(stack b b)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 3493  <<<<

> Fringe size: 19698
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:5,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up d)', '(stack c c)', '(unstack b a)', '(put-down c)', '(unstack c c)', '(stack b b)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 3494  <<<<

> Fringe size: 19700
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:5,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up d)', '(stack c c)', '(unstack b a)', '(put-down c)', '(unstack c c)', '(stack b b)', '(pick-up b)', '(stack c b)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 3495  <<<<

> Fringe size: 19705
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:5,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up d)', '(stack c c)', '(unstack b a)', '(put-down c)', '(unstack c c)', '(stack b b)', '(pick-up b)', '(stack c b)', '(pick-up c)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 3496  <<<<

> Fringe size: 19707
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:5,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up d)', '(stack c c)', '(unstack b a)', '(put-down c)', '(unstack c c)', '(stack b b)', '(pick-up b)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 3497  <<<<

> Fringe size: 19712
> First 20 nodes: (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:5,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up d)', '(stack c c)', '(unstack b a)', '(put-down c)', '(unstack c c)', '(stack b b)', '(pick-up b)', '(stack c c)', '(pick-up c)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 3498  <<<<

> Fringe size: 19714
> First 20 nodes: (D:11,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:5,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up d)', '(stack c c)', '(unstack b a)', '(put-down c)', '(unstack c c)', '(stack b b)', '(pick-up b)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 3499  <<<<

> Fringe size: 19719
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:5,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up d)', '(stack c c)', '(unstack b a)', '(put-down c)', '(unstack c c)', '(stack b b)', '(pick-up b)', '(stack c d)', '(pick-up c)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 3500  <<<<

> Fringe size: 19724
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:5,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up d)', '(stack c c)', '(unstack b a)', '(put-down c)', '(unstack c c)', '(stack b b)', '(pick-up c)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
unstack,(clear ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 3501  <<<<

> Fringe size: 19726
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:5,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up d)', '(stack c c)', '(unstack b a)', '(put-down c)', '(unstack c c)', '(stack b b)', '(pick-up c)', '(stack c b)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
unstack,(clear ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 3502  <<<<

> Fringe size: 19728
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:5,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up d)', '(stack c c)', '(unstack b a)', '(put-down c)', '(unstack c c)', '(stack b c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 3503  <<<<

> Fringe size: 19733
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:5,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up d)', '(stack c c)', '(unstack b a)', '(put-down c)', '(unstack c c)', '(stack b c)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 3504  <<<<

> Fringe size: 19735
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:5,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up d)', '(stack c c)', '(unstack b a)', '(put-down c)', '(unstack c c)', '(stack b c)', '(pick-up b)', '(stack c b)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 3505  <<<<

> Fringe size: 19740
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:5,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up d)', '(stack c c)', '(unstack b a)', '(put-down c)', '(unstack c c)', '(stack b c)', '(pick-up b)', '(stack c b)', '(pick-up c)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6
> Current state:
[<Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom on(c, b)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)']
> Current state:
[<Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)']
> Current state:
[<Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack c b)', '(stack c c)', '(stack c d)']
> Current state:
[<Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(pick-up b)', '(pick-up d)']
> Current state:
[<Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack c b)', '(stack c c)', '(stack c d)']
> Current state:
[<Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom ontable(c)>]
> Possible groundings:
['(unstack b a)', '(unstack c c)', '(unstack c e)']
> Current state:
[<Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom ontable(c)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack c b)', '(stack c c)', '(stack c d)']
> Current state:
[<Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up b)', '(pick-up c)', '(pick-up d)']
> Current state:
[<Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom ontable(c)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack c b)', '(stack c c)', '(stack c d)']
> Current state:
[<Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom on(c, b)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up b)', '(pick-up c)', '(pick-up d)']
> Current state:
[<Atom on(c, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom clear(d)>, <Atom ontable(c)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack c b)', '(stack c c)', '(stack c d)']
> Current state:
[<Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up b)', '(pick-up c)', '(pick-up d)']
> Current state:
[<Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom ontable(c)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack c b)', '(stack c c)', '(stack c d)']
> Current state:
[<Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up b)', '(pick-up c)', '(pick-up d)']
> Current state:
[<Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom clear(d)>, <Atom on(c, d)>, <Atom ontable(c)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack c b)', '(stack c c)', '(stack c d)']
> Current state:
[<Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom ontable(c)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack c b)', '(stack c c)', '(stack c d)']
> Current state:
[<Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom on(c, b)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up b)', '(pick-up c)', '(pick-up d)']
> Current state:
[<Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up b)', '(pick-up c)', '(pick-up d)']
> Current state:
[<Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom ontable(c)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack c b)', '(stack c c)', '(stack c d)']
> Current state:
[<Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, b)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up b)', '(pick-up c)', '(pick-up d)']
> Current state:
[<Atom on(c, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom clear(d)>, <Atom ontable(c)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack c b)', '(stack c c)', '(stack c d)']
> Current state:
[<Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom ontable(c)>]

>>>>  A* iteration 3506  <<<<

> Fringe size: 19742
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:5,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up d)', '(stack c c)', '(unstack b a)', '(put-down c)', '(unstack c c)', '(stack b c)', '(pick-up b)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 3507  <<<<

> Fringe size: 19747
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:5,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up d)', '(stack c c)', '(unstack b a)', '(put-down c)', '(unstack c c)', '(stack b c)', '(pick-up b)', '(stack c c)', '(pick-up c)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 3508  <<<<

> Fringe size: 19749
> First 20 nodes: (D:11,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:5,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up d)', '(stack c c)', '(unstack b a)', '(put-down c)', '(unstack c c)', '(stack b c)', '(pick-up b)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 3509  <<<<

> Fringe size: 19754
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:5,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up d)', '(stack c c)', '(unstack b a)', '(put-down c)', '(unstack c c)', '(stack b c)', '(pick-up b)', '(stack c d)', '(pick-up c)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 3510  <<<<

> Fringe size: 19756
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:5,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up d)', '(stack c c)', '(unstack b a)', '(put-down c)', '(unstack c c)', '(stack b d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 3511  <<<<

> Fringe size: 19761
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:5,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up d)', '(stack c c)', '(unstack b a)', '(put-down c)', '(unstack c c)', '(stack b d)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 3512  <<<<

> Fringe size: 19763
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:5,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up d)', '(stack c c)', '(unstack b a)', '(put-down c)', '(unstack c c)', '(stack b d)', '(pick-up b)', '(stack c b)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 3513  <<<<

> Fringe size: 19768
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:5,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up d)', '(stack c c)', '(unstack b a)', '(put-down c)', '(unstack c c)', '(stack b d)', '(pick-up b)', '(stack c b)', '(pick-up c)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 3514  <<<<

> Fringe size: 19770
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:5,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up d)', '(stack c c)', '(unstack b a)', '(put-down c)', '(unstack c c)', '(stack b d)', '(pick-up b)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 3515  <<<<

> Fringe size: 19775
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:5,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up d)', '(stack c c)', '(unstack b a)', '(put-down c)', '(unstack c c)', '(stack b d)', '(pick-up b)', '(stack c c)', '(pick-up c)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 3516  <<<<

> Fringe size: 19777
> First 20 nodes: (D:11,C:2), (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:5,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up d)', '(stack c c)', '(unstack b a)', '(put-down c)', '(unstack c c)', '(stack b d)', '(pick-up b)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 3517  <<<<

> Fringe size: 19782
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:5,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up d)', '(stack c c)', '(unstack b a)', '(put-down c)', '(unstack c c)', '(stack b d)', '(pick-up b)', '(stack c d)', '(pick-up c)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 3518  <<<<

> Fringe size: 19784
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:5,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up d)', '(stack c c)', '(unstack b a)', '(put-down c)', '(unstack c c)', '(stack c b)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 3519  <<<<

> Fringe size: 19789
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:5,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up d)', '(stack c c)', '(unstack b a)', '(put-down c)', '(unstack c c)', '(stack c b)', '(pick-up c)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 3520  <<<<

> Fringe size: 19791
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:5,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up d)', '(stack c c)', '(unstack b a)', '(put-down c)', '(unstack c c)', '(stack c b)', '(pick-up c)', '(stack b b)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 3521  <<<<

> Fringe size: 19796
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:5,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up d)', '(stack c c)', '(unstack b a)', '(put-down c)', '(unstack c c)', '(stack c b)', '(pick-up c)', '(stack b b)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 3522  <<<<

> Fringe size: 19798
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:5,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up d)', '(stack c c)', '(unstack b a)', '(put-down c)', '(unstack c c)', '(stack c b)', '(pick-up c)', '(stack b c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 3523  <<<<

> Fringe size: 19803
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:8,C:2), (D:5,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up d)', '(stack c c)', '(unstack b a)', '(put-down c)', '(unstack c c)', '(stack c b)', '(pick-up c)', '(stack b c)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 3524  <<<<

> Fringe size: 19805
> First 20 nodes: (D:11,C:2), (D:8,C:2), (D:8,C:2), (D:5,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up d)', '(stack c c)', '(unstack b a)', '(put-down c)', '(unstack c c)', '(stack c b)', '(pick-up c)', '(stack b d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 3525  <<<<

> Fringe size: 19810
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:5,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up d)', '(stack c c)', '(unstack b a)', '(put-down c)', '(unstack c c)', '(stack c b)', '(pick-up c)', '(stack b d)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 3526  <<<<

> Fringe size: 19812
> First 20 nodes: (D:9,C:2), (D:9,C:2), (D:8,C:2), (D:5,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up d)', '(stack c c)', '(unstack b a)', '(put-down c)', '(unstack c c)', '(stack c c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3
> Possible groundings:
['(pick-up b)', '(pick-up c)', '(pick-up d)']
> Current state:
[<Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom ontable(c)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack c b)', '(stack c c)', '(stack c d)']
> Current state:
[<Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up b)', '(pick-up c)', '(pick-up d)']
> Current state:
[<Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom clear(d)>, <Atom on(c, d)>, <Atom ontable(c)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack c b)', '(stack c c)', '(stack c d)']
> Current state:
[<Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up b)', '(pick-up c)', '(pick-up d)']
> Current state:
[<Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom ontable(c)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack c b)', '(stack c c)', '(stack c d)']
> Current state:
[<Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom on(c, b)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up b)', '(pick-up c)', '(pick-up d)']
> Current state:
[<Atom on(c, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom clear(d)>, <Atom ontable(c)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack c b)', '(stack c c)', '(stack c d)']
> Current state:
[<Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up b)', '(pick-up c)', '(pick-up d)']
> Current state:
[<Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom ontable(c)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack c b)', '(stack c c)', '(stack c d)']
> Current state:
[<Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up b)', '(pick-up c)', '(pick-up d)']
> Current state:
[<Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom clear(d)>, <Atom on(c, d)>, <Atom ontable(c)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack c b)', '(stack c c)', '(stack c d)']
> Current state:
[<Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom on(c, b)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up b)', '(pick-up c)', '(pick-up d)']
> Current state:
[<Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom on(c, b)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom ontable(c)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack c b)', '(stack c c)', '(stack c d)']
> Current state:
[<Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom on(c, b)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up b)', '(pick-up c)', '(pick-up d)']
> Current state:
[<Atom on(c, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom clear(d)>, <Atom ontable(c)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack c b)', '(stack c c)', '(stack c d)']
> Current state:
[<Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom on(c, b)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up b)', '(pick-up c)', '(pick-up d)']
> Current state:
[<Atom on(c, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom clear(d)>, <Atom ontable(c)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack c b)', '(stack c c)', '(stack c d)']
> Current state:
[<Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom on(c, b)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up b)', '(pick-up c)', '(pick-up d)']
> Current state:
[<Atom on(c, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom clear(d)>, <Atom ontable(c)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack c b)', '(stack c c)', '(stack c d)']
> Current state:
[<Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up b)', '(pick-up c)', '(pick-up d)']
> Current state:
[<Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom ontable(c)>]

>>>>  A* iteration 3527  <<<<

> Fringe size: 19817
> First 20 nodes: (D:10,C:2), (D:9,C:2), (D:8,C:2), (D:5,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up d)', '(stack c c)', '(unstack b a)', '(put-down c)', '(unstack c c)', '(stack c c)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
unstack,(clear ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 3528  <<<<

> Fringe size: 19819
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:5,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up d)', '(stack c c)', '(unstack b a)', '(put-down c)', '(unstack c c)', '(stack c c)', '(pick-up b)', '(stack b c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
unstack,(clear ?x),effPos,1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 3529  <<<<

> Fringe size: 19824
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:5,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up d)', '(stack c c)', '(unstack b a)', '(put-down c)', '(unstack c c)', '(stack c c)', '(pick-up c)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 3530  <<<<

> Fringe size: 19826
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:5,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up d)', '(stack c c)', '(unstack b a)', '(put-down c)', '(unstack c c)', '(stack c c)', '(pick-up c)', '(stack b b)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 3531  <<<<

> Fringe size: 19831
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:8,C:2), (D:5,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up d)', '(stack c c)', '(unstack b a)', '(put-down c)', '(unstack c c)', '(stack c c)', '(pick-up c)', '(stack b b)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 3532  <<<<

> Fringe size: 19833
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:8,C:2), (D:5,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up d)', '(stack c c)', '(unstack b a)', '(put-down c)', '(unstack c c)', '(stack c c)', '(pick-up c)', '(stack b c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 3533  <<<<

> Fringe size: 19838
> First 20 nodes: (D:10,C:2), (D:8,C:2), (D:5,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up d)', '(stack c c)', '(unstack b a)', '(put-down c)', '(unstack c c)', '(stack c c)', '(pick-up c)', '(stack b c)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 3534  <<<<

> Fringe size: 19840
> First 20 nodes: (D:11,C:2), (D:8,C:2), (D:5,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up d)', '(stack c c)', '(unstack b a)', '(put-down c)', '(unstack c c)', '(stack c c)', '(pick-up c)', '(stack b d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 3535  <<<<

> Fringe size: 19845
> First 20 nodes: (D:8,C:2), (D:5,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up d)', '(stack c c)', '(unstack b a)', '(put-down c)', '(unstack c c)', '(stack c c)', '(pick-up c)', '(stack b d)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 3536  <<<<

> Fringe size: 19847
> First 20 nodes: (D:9,C:2), (D:5,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up d)', '(stack c c)', '(unstack b a)', '(put-down c)', '(unstack c c)', '(stack c d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 3537  <<<<

> Fringe size: 19852
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:10,C:2), (D:5,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up d)', '(stack c c)', '(unstack b a)', '(put-down c)', '(unstack c c)', '(stack c d)', '(pick-up c)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 3538  <<<<

> Fringe size: 19854
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:10,C:2), (D:5,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up d)', '(stack c c)', '(unstack b a)', '(put-down c)', '(unstack c c)', '(stack c d)', '(pick-up c)', '(stack b b)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 3539  <<<<

> Fringe size: 19859
> First 20 nodes: (D:10,C:2), (D:10,C:2), (D:5,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up d)', '(stack c c)', '(unstack b a)', '(put-down c)', '(unstack c c)', '(stack c d)', '(pick-up c)', '(stack b b)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 3540  <<<<

> Fringe size: 19861
> First 20 nodes: (D:11,C:2), (D:10,C:2), (D:5,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up d)', '(stack c c)', '(unstack b a)', '(put-down c)', '(unstack c c)', '(stack c d)', '(pick-up c)', '(stack b c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 3541  <<<<

> Fringe size: 19866
> First 20 nodes: (D:10,C:2), (D:5,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up d)', '(stack c c)', '(unstack b a)', '(put-down c)', '(unstack c c)', '(stack c d)', '(pick-up c)', '(stack b c)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 3542  <<<<

> Fringe size: 19868
> First 20 nodes: (D:11,C:2), (D:5,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=10
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up d)', '(stack c c)', '(unstack b a)', '(put-down c)', '(unstack c c)', '(stack c d)', '(pick-up c)', '(stack b d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 3543  <<<<

> Fringe size: 19873
> First 20 nodes: (D:5,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=11
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up d)', '(stack c c)', '(unstack b a)', '(put-down c)', '(unstack c c)', '(stack c d)', '(pick-up c)', '(stack b d)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 3544  <<<<

> Fringe size: 19873
> First 20 nodes: (D:6,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=5
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up d)', '(stack c c)', '(unstack c c)']
> Next lifted action: put-down
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=1

>>>>  A* iteration 3545  <<<<

> Fringe size: 19875
> First 20 nodes: (D:7,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=6
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down c)']
> Next lifted action: unstack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 3546  <<<<

> Fringe size: 19880
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:8,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=7
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down c)', '(unstack b a)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 3547  <<<<

> Fringe size: 19882
> First 20 nodes: (D:9,C:2), (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down c)', '(unstack b a)', '(stack b b)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 3548  <<<<

> Fringe size: 19887
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:8,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down c)', '(unstack b a)', '(stack b b)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack c b)', '(stack c c)', '(stack c d)']
> Current state:
[<Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up b)', '(pick-up c)', '(pick-up d)']
> Current state:
[<Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom ontable(c)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack c b)', '(stack c c)', '(stack c d)']
> Current state:
[<Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up b)', '(pick-up c)', '(pick-up d)']
> Current state:
[<Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom ontable(c)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack c b)', '(stack c c)', '(stack c d)']
> Current state:
[<Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up b)', '(pick-up c)', '(pick-up d)']
> Current state:
[<Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom ontable(c)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack c b)', '(stack c c)', '(stack c d)']
> Current state:
[<Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up b)', '(pick-up c)', '(pick-up d)']
> Current state:
[<Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom ontable(c)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack c b)', '(stack c c)', '(stack c d)']
> Current state:
[<Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up b)', '(pick-up c)', '(pick-up d)']
> Current state:
[<Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom ontable(c)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack c b)', '(stack c c)', '(stack c d)']
> Current state:
[<Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up b)', '(pick-up c)', '(pick-up d)']
> Current state:
[<Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom clear(d)>, <Atom on(c, d)>, <Atom ontable(c)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack c b)', '(stack c c)', '(stack c d)']
> Current state:
[<Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up b)', '(pick-up c)', '(pick-up d)']
> Current state:
[<Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom clear(d)>, <Atom on(c, d)>, <Atom ontable(c)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack c b)', '(stack c c)', '(stack c d)']
> Current state:
[<Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom on(c, d)>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up b)', '(pick-up c)', '(pick-up d)']
> Current state:
[<Atom ontable(b)>, <Atom ontable(a)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom holding(b)>, <Atom on(e, b)>, <Atom on(c, c)>, <Atom clear(d)>, <Atom on(c, d)>, <Atom ontable(c)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack c b)', '(stack c c)', '(stack c d)']
> Current state:
[<Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>]
> Possible groundings:
['(put-down c)']
> Current state:
[<Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom ontable(c)>]
> Possible groundings:
['(unstack b a)', '(unstack c c)', '(unstack c e)']
> Current state:
[<Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom ontable(c)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack c b)', '(stack c c)', '(stack c d)']
> Current state:
[<Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up b)', '(pick-up c)', '(pick-up d)']
> Current state:
[<Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom ontable(c)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack c b)', '(stack c c)', '(stack c d)']

>>>>  A* iteration 3549  <<<<

> Fringe size: 19892
> First 20 nodes: (D:8,C:2), (D:8,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down c)', '(unstack b a)', '(stack b b)', '(pick-up c)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 3550  <<<<

> Fringe size: 19894
> First 20 nodes: (D:9,C:2), (D:8,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down c)', '(unstack b a)', '(stack b c)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 3551  <<<<

> Fringe size: 19899
> First 20 nodes: (D:8,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down c)', '(unstack b a)', '(stack b c)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 3552  <<<<

> Fringe size: 19901
> First 20 nodes: (D:9,C:2), (D:9,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=8
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down c)', '(unstack b a)', '(stack b d)']
> Next lifted action: pick-up
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=3

>>>>  A* iteration 3553  <<<<

> Fringe size: 19906
> First 20 nodes: (D:9,C:2), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down c)', '(unstack b a)', '(stack b d)', '(pick-up b)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6

>>>>  A* iteration 3554  <<<<

> Fringe size: 19911
> First 20 nodes: (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:12,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3), (D:11,C:3)

> Node instance:
> Depth=9
> Ground actions: ['(unstack c e)', '(put-down b)', '(pick-up d)', '(stack c c)', '(unstack c c)', '(put-down c)', '(unstack b a)', '(stack b d)', '(pick-up c)']
> Next lifted action: stack
> Repair set:
put-down,(holding ?x),precPos,-1
stack,(clear ?y),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=6
> Current state:
[<Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom on(b, b)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom ontable(c)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack c b)', '(stack c c)', '(stack c d)']
> Current state:
[<Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up b)', '(pick-up c)', '(pick-up d)']
> Current state:
[<Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom on(b, c)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom ontable(c)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack c b)', '(stack c c)', '(stack c d)']
> Current state:
[<Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom ontable(c)>]
> Possible groundings:
['(pick-up b)', '(pick-up c)', '(pick-up d)']
> Current state:
[<Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom ontable(c)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack c b)', '(stack c c)', '(stack c d)']
> Current state:
[<Atom holding(b)>, <Atom on(e, b)>, <Atom ontable(b)>, <Atom ontable(a)>, <Atom on(c, c)>, <Atom on(b, a)>, <Atom on(c, e)>, <Atom clear(d)>, <Atom handempty()>, <Atom ontable(d)>, <Atom on(b, d)>, <Atom clear(c)>, <Atom holding(c)>, <Atom clear(b)>, <Atom ontable(c)>]
> Possible groundings:
['(stack b b)', '(stack b c)', '(stack b d)', '(stack c b)', '(stack c c)', '(stack c d)']
Goal found:
['(unstack c e)', '(put-down e)', '(pick-up d)', '(stack c d)', '(unstack e b)', '(put-down b)', '(unstack b a)', '(stack a e)', '(pick-up a)', '(stack b d)', '(pick-up b)', '(stack e b)']
Repairs:
unstack,(holding ?y),effPos,1
stack,(on ?y ?x),effPos,1
stack,(clear ?y),precPos,-1
