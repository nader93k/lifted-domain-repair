> Solving the next problem at: 2024-09-26 05:53:46 UTC
> Search algorithm: astar
> Instance ID=pegsol-08-strips/pp03-err-rate-0-5
> Plan length=10
> Domain class: pegsol-08-strips
> Instance name: pp03-err-rate-0-5
> Ground plan:
['(jump-new-move pos-2-4 pos-3-4 pos-4-4)', '(end-move pos-4-4)', '(jump-new-move pos-3-3 pos-2-3 pos-1-3)', '(end-move pos-1-3)', '(jump-new-move pos-4-4 pos-4-3 pos-4-2)', '(jump-continue-move pos-4-2 pos-3-2 pos-2-2)', '(end-move pos-2-2)', '(jump-new-move pos-2-1 pos-2-2 pos-2-3)', '(end-move pos-2-3)', '(jump-new-move pos-1-3 pos-2-3 pos-3-3)']
> Lifted plan:
['jump-new-move', 'end-move', 'jump-new-move', 'end-move', 'jump-new-move', 'jump-continue-move', 'end-move', 'jump-new-move', 'end-move', 'jump-new-move']
>>>  Vanilla ground repair:
jump-continue-move,(in-line ?to ?from ?to),precPos,-1
end-move,(move-ended ),precPos,-1


>>>>  A* iteration 200  <<<<

> Fringe size: 3245
> First 20 nodes: (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2)

> Node instance:
> Depth=5
> Ground actions: ['(jump-new-move pos-3-4 pos-2-4 pos-1-4)', '(end-move pos-1-4)', '(jump-new-move pos-3-3 pos-4-3 pos-5-3)', '(end-move pos-5-3)', '(jump-new-move pos-3-3 pos-2-3 pos-1-3)']
> Next lifted action: jump-continue-move
> Repair set:
jump-new-move,(not (occupied ?from)),effNeg,-1
end-move,(move-ended ),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=0

>>>>  A* iteration 400  <<<<

> Fringe size: 3045
> First 20 nodes: (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2)

> Node instance:
> Depth=5
> Ground actions: ['(jump-new-move pos-2-4 pos-2-3 pos-2-2)', '(end-move pos-2-2)', '(jump-new-move pos-4-3 pos-3-3 pos-2-3)', '(end-move pos-2-3)', '(jump-new-move pos-3-2 pos-3-1 pos-3-0)']
> Next lifted action: jump-continue-move
> Repair set:
jump-new-move,(occupied ?over),precPos,-1
end-move,(move-ended ),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=0

>>>>  A* iteration 600  <<<<

> Fringe size: 2845
> First 20 nodes: (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2)

> Node instance:
> Depth=5
> Ground actions: ['(jump-new-move pos-2-4 pos-2-3 pos-2-2)', '(end-move pos-2-2)', '(jump-new-move pos-2-2 pos-2-1 pos-2-0)', '(end-move pos-2-0)', '(jump-new-move pos-2-2 pos-3-2 pos-4-2)']
> Next lifted action: jump-continue-move
> Repair set:
jump-new-move,(not (occupied ?from)),effNeg,-1
end-move,(move-ended ),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=0

>>>>  A* iteration 800  <<<<

> Fringe size: 2645
> First 20 nodes: (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2)

> Node instance:
> Depth=5
> Ground actions: ['(jump-new-move pos-2-4 pos-3-4 pos-4-4)', '(end-move pos-4-4)', '(jump-new-move pos-3-3 pos-4-3 pos-5-3)', '(end-move pos-5-3)', '(jump-new-move pos-2-4 pos-2-3 pos-2-2)']
> Next lifted action: jump-continue-move
> Repair set:
jump-new-move,(not (occupied ?from)),effNeg,-1
end-move,(move-ended ),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=0

>>>>  A* iteration 1000  <<<<

> Fringe size: 2445
> First 20 nodes: (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2)

> Node instance:
> Depth=5
> Ground actions: ['(jump-new-move pos-2-4 pos-2-3 pos-2-2)', '(end-move pos-2-2)', '(jump-new-move pos-3-3 pos-3-2 pos-3-1)', '(end-move pos-3-1)', '(jump-new-move pos-4-3 pos-4-2 pos-4-1)']
> Next lifted action: jump-continue-move
> Repair set:
jump-new-move,(occupied ?over),precPos,-1
end-move,(move-ended ),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=0

>>>>  A* iteration 1200  <<<<

> Fringe size: 5295
> First 20 nodes: (D:5,C:2), (D:5,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2)

> Node instance:
> Depth=5
> Ground actions: ['(jump-new-move pos-3-4 pos-2-4 pos-1-4)', '(end-move pos-1-4)', '(jump-new-move pos-2-2 pos-3-2 pos-4-2)', '(end-move pos-4-2)', '(jump-new-move pos-3-3 pos-2-3 pos-1-3)']
> Next lifted action: jump-continue-move
> Repair set:
jump-new-move,(occupied ?from),precPos,-1
end-move,(move-ended ),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=0

>>>>  A* iteration 1400  <<<<

> Fringe size: 5953
> First 20 nodes: (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2)

> Node instance:
> Depth=5
> Ground actions: ['(jump-new-move pos-3-3 pos-2-3 pos-1-3)', '(end-move pos-1-3)', '(jump-new-move pos-1-3 pos-2-3 pos-3-3)', '(end-move pos-3-3)', '(jump-new-move pos-3-3 pos-2-3 pos-1-3)']
> Next lifted action: jump-continue-move
> Repair set:
jump-new-move,(occupied ?over),precPos,-1
end-move,(move-ended ),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=0

>>>>  A* iteration 1600  <<<<

> Fringe size: 6767
> First 20 nodes: (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2)

> Node instance:
> Depth=5
> Ground actions: ['(jump-new-move pos-2-3 pos-2-4 pos-2-5)', '(end-move pos-2-5)', '(jump-new-move pos-3-3 pos-2-3 pos-1-3)', '(end-move pos-1-3)', '(jump-new-move pos-3-2 pos-3-1 pos-3-0)']
> Next lifted action: jump-continue-move
> Repair set:
jump-new-move,(occupied ?over),precPos,-1
end-move,(move-ended ),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=0

>>>>  A* iteration 1800  <<<<

> Fringe size: 7425
> First 20 nodes: (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2)

> Node instance:
> Depth=5
> Ground actions: ['(jump-new-move pos-2-3 pos-2-4 pos-2-5)', '(end-move pos-2-5)', '(jump-new-move pos-2-0 pos-2-1 pos-2-2)', '(end-move pos-2-2)', '(jump-new-move pos-2-3 pos-2-2 pos-2-1)']
> Next lifted action: jump-continue-move
> Repair set:
jump-new-move,(occupied ?from),precPos,-1
end-move,(move-ended ),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=0

>>>>  A* iteration 2000  <<<<

> Fringe size: 8083
> First 20 nodes: (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2)

> Node instance:
> Depth=5
> Ground actions: ['(jump-new-move pos-3-3 pos-2-3 pos-1-3)', '(end-move pos-1-3)', '(jump-new-move pos-3-5 pos-3-4 pos-3-3)', '(end-move pos-3-3)', '(jump-new-move pos-2-2 pos-3-2 pos-4-2)']
> Next lifted action: jump-continue-move
> Repair set:
jump-new-move,(occupied ?from),precPos,-1
end-move,(move-ended ),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=0

>>>>  A* iteration 2200  <<<<

> Fringe size: 8663
> First 20 nodes: (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2)

> Node instance:
> Depth=5
> Ground actions: ['(jump-new-move pos-3-3 pos-2-3 pos-1-3)', '(end-move pos-1-3)', '(jump-new-move pos-4-4 pos-4-3 pos-4-2)', '(end-move pos-4-2)', '(jump-new-move pos-2-4 pos-3-4 pos-4-4)']
> Next lifted action: jump-continue-move
> Repair set:
jump-new-move,(occupied ?from),precPos,-1
end-move,(move-ended ),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=0

>>>>  A* iteration 2400  <<<<

> Fringe size: 9477
> First 20 nodes: (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2)

> Node instance:
> Depth=5
> Ground actions: ['(jump-new-move pos-3-3 pos-3-4 pos-3-5)', '(end-move pos-3-5)', '(jump-new-move pos-3-2 pos-3-3 pos-3-4)', '(end-move pos-3-4)', '(jump-new-move pos-3-5 pos-3-4 pos-3-3)']
> Next lifted action: jump-continue-move
> Repair set:
jump-new-move,(occupied ?over),precPos,-1
end-move,(move-ended ),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=0

>>>>  A* iteration 2600  <<<<

> Fringe size: 10135
> First 20 nodes: (D:5,C:2), (D:5,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2)

> Node instance:
> Depth=5
> Ground actions: ['(jump-new-move pos-3-3 pos-3-2 pos-3-1)', '(end-move pos-3-1)', '(jump-new-move pos-3-4 pos-4-4 pos-5-4)', '(end-move pos-5-4)', '(jump-new-move pos-5-4 pos-5-3 pos-5-2)']
> Next lifted action: jump-continue-move
> Repair set:
jump-new-move,(occupied ?over),precPos,-1
end-move,(move-ended ),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=0

>>>>  A* iteration 2800  <<<<

> Fringe size: 10715
> First 20 nodes: (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2)

> Node instance:
> Depth=5
> Ground actions: ['(jump-new-move pos-3-3 pos-3-2 pos-3-1)', '(end-move pos-3-1)', '(jump-new-move pos-4-3 pos-4-2 pos-4-1)', '(end-move pos-4-1)', '(jump-new-move pos-2-4 pos-3-4 pos-4-4)']
> Next lifted action: jump-continue-move
> Repair set:
jump-new-move,(occupied ?over),precPos,-1
end-move,(move-ended ),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=0

>>>>  A* iteration 3000  <<<<

> Fringe size: 11373
> First 20 nodes: (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2)

> Node instance:
> Depth=5
> Ground actions: ['(jump-new-move pos-3-3 pos-3-4 pos-3-5)', '(end-move pos-3-5)', '(jump-new-move pos-2-1 pos-3-1 pos-4-1)', '(end-move pos-4-1)', '(jump-new-move pos-2-3 pos-1-3 pos-0-3)']
> Next lifted action: jump-continue-move
> Repair set:
jump-new-move,(occupied ?over),precPos,-1
end-move,(move-ended ),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=0

>>>>  A* iteration 3200  <<<<

> Fringe size: 12031
> First 20 nodes: (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2)

> Node instance:
> Depth=5
> Ground actions: ['(jump-new-move pos-3-3 pos-3-4 pos-3-5)', '(end-move pos-3-5)', '(jump-new-move pos-3-5 pos-3-4 pos-3-3)', '(end-move pos-3-3)', '(jump-new-move pos-4-3 pos-5-3 pos-6-3)']
> Next lifted action: jump-continue-move
> Repair set:
jump-new-move,(occupied ?over),precPos,-1
end-move,(move-ended ),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=0

>>>>  A* iteration 3400  <<<<

> Fringe size: 12689
> First 20 nodes: (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2)

> Node instance:
> Depth=5
> Ground actions: ['(jump-new-move pos-3-3 pos-3-4 pos-3-5)', '(end-move pos-3-5)', '(jump-new-move pos-3-3 pos-2-3 pos-1-3)', '(end-move pos-1-3)', '(jump-new-move pos-2-2 pos-3-2 pos-4-2)']
> Next lifted action: jump-continue-move
> Repair set:
jump-new-move,(occupied ?from),precPos,-1
end-move,(move-ended ),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=0

>>>>  A* iteration 3600  <<<<

> Fringe size: 13347
> First 20 nodes: (D:5,C:2), (D:5,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2)

> Node instance:
> Depth=5
> Ground actions: ['(jump-new-move pos-3-4 pos-2-4 pos-1-4)', '(end-move pos-1-4)', '(jump-new-move pos-2-2 pos-2-3 pos-2-4)', '(end-move pos-2-4)', '(jump-new-move pos-2-3 pos-2-4 pos-2-5)']
> Next lifted action: jump-continue-move
> Repair set:
jump-new-move,(occupied ?from),precPos,-1
end-move,(move-ended ),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=0

>>>>  A* iteration 3800  <<<<

> Fringe size: 14083
> First 20 nodes: (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2)

> Node instance:
> Depth=4
> Ground actions: ['(jump-new-move pos-3-4 pos-2-4 pos-1-4)', '(end-move pos-1-4)', '(jump-new-move pos-4-2 pos-3-2 pos-2-2)', '(end-move pos-2-2)']
> Next lifted action: jump-new-move
> Repair set:
jump-new-move,(occupied ?from),precPos,-1
end-move,(move-ended ),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=76

>>>>  A* iteration 4000  <<<<

> Fringe size: 14741
> First 20 nodes: (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2)

> Node instance:
> Depth=4
> Ground actions: ['(jump-new-move pos-3-3 pos-4-3 pos-5-3)', '(end-move pos-5-3)', '(jump-new-move pos-3-3 pos-3-4 pos-3-5)', '(end-move pos-3-5)']
> Next lifted action: jump-new-move
> Repair set:
jump-new-move,(not (occupied ?from)),effNeg,-1
end-move,(move-ended ),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=76

>>>>  A* iteration 4200  <<<<

> Fringe size: 15399
> First 20 nodes: (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2)

> Node instance:
> Depth=5
> Ground actions: ['(jump-new-move pos-3-3 pos-4-3 pos-5-3)', '(end-move pos-5-3)', '(jump-new-move pos-2-3 pos-3-3 pos-4-3)', '(end-move pos-4-3)', '(jump-new-move pos-3-2 pos-3-1 pos-3-0)']
> Next lifted action: jump-continue-move
> Repair set:
jump-new-move,(occupied ?over),precPos,-1
end-move,(move-ended ),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=0

>>>>  A* iteration 4400  <<<<

> Fringe size: 16135
> First 20 nodes: (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:3,C:2)

> Node instance:
> Depth=4
> Ground actions: ['(jump-new-move pos-3-3 pos-3-2 pos-3-1)', '(end-move pos-3-1)', '(jump-new-move pos-3-3 pos-4-3 pos-5-3)', '(end-move pos-5-3)']
> Next lifted action: jump-new-move
> Repair set:
jump-new-move,(not (occupied ?from)),effNeg,-1
end-move,(move-ended ),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=76

>>>>  A* iteration 4600  <<<<

> Fringe size: 16715
> First 20 nodes: (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:2,C:2), (D:2,C:2), (D:2,C:2), (D:2,C:2), (D:2,C:2), (D:2,C:2), (D:2,C:2), (D:2,C:2), (D:2,C:2), (D:2,C:2), (D:2,C:2)

> Node instance:
> Depth=5
> Ground actions: ['(jump-new-move pos-3-3 pos-2-3 pos-1-3)', '(end-move pos-1-3)', '(jump-new-move pos-2-4 pos-1-4 pos-0-4)', '(end-move pos-0-4)', '(jump-new-move pos-4-3 pos-5-3 pos-6-3)']
> Next lifted action: jump-continue-move
> Repair set:
jump-new-move,(occupied ?over),precPos,-1
end-move,(move-ended ),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=0

>>>>  A* iteration 4800  <<<<

> Fringe size: 17605
> First 20 nodes: (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:2,C:2), (D:2,C:2), (D:2,C:2), (D:2,C:2)

> Node instance:
> Depth=5
> Ground actions: ['(jump-new-move pos-4-2 pos-3-2 pos-2-2)', '(end-move pos-2-2)', '(jump-new-move pos-3-3 pos-3-4 pos-3-5)', '(end-move pos-3-5)', '(jump-new-move pos-2-3 pos-2-4 pos-2-5)']
> Next lifted action: jump-continue-move
> Repair set:
jump-new-move,(occupied ?from),precPos,-1
end-move,(move-ended ),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=0

>>>>  A* iteration 5000  <<<<

> Fringe size: 18495
> First 20 nodes: (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2)

> Node instance:
> Depth=5
> Ground actions: ['(jump-new-move pos-4-4 pos-4-3 pos-4-2)', '(end-move pos-4-2)', '(jump-new-move pos-3-3 pos-2-3 pos-1-3)', '(end-move pos-1-3)', '(jump-new-move pos-1-2 pos-1-3 pos-1-4)']
> Next lifted action: jump-continue-move
> Repair set:
jump-new-move,(occupied ?from),precPos,-1
end-move,(move-ended ),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=0

>>>>  A* iteration 5200  <<<<

> Fringe size: 19151
> First 20 nodes: (D:5,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:2,C:2), (D:2,C:2), (D:2,C:2), (D:2,C:2), (D:2,C:2)

> Node instance:
> Depth=5
> Ground actions: ['(jump-new-move pos-2-4 pos-2-5 pos-2-6)', '(end-move pos-2-6)', '(jump-new-move pos-2-6 pos-2-5 pos-2-4)', '(end-move pos-2-4)', '(jump-new-move pos-3-3 pos-4-3 pos-5-3)']
> Next lifted action: jump-continue-move
> Repair set:
end-move,(move-ended ),precPos,-1
jump-new-move,(occupied ?over),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=0

>>>>  A* iteration 5400  <<<<

> Fringe size: 19809
> First 20 nodes: (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:2,C:2), (D:2,C:2), (D:2,C:2), (D:2,C:2), (D:2,C:2), (D:2,C:2), (D:2,C:2), (D:2,C:2), (D:2,C:2), (D:2,C:2), (D:2,C:2), (D:2,C:2), (D:2,C:2)

> Node instance:
> Depth=5
> Ground actions: ['(jump-new-move pos-2-4 pos-2-5 pos-2-6)', '(end-move pos-2-6)', '(jump-new-move pos-3-4 pos-2-4 pos-1-4)', '(end-move pos-1-4)', '(jump-new-move pos-3-2 pos-4-2 pos-5-2)']
> Next lifted action: jump-continue-move
> Repair set:
end-move,(move-ended ),precPos,-1
jump-new-move,(occupied ?over),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=0

>>>>  A* iteration 5600  <<<<

> Fringe size: 20621
> First 20 nodes: (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:2,C:2), (D:2,C:2), (D:2,C:2), (D:2,C:2), (D:2,C:2), (D:2,C:2), (D:2,C:2), (D:2,C:2), (D:2,C:2), (D:2,C:2), (D:2,C:2)

> Node instance:
> Depth=5
> Ground actions: ['(jump-new-move pos-4-2 pos-4-3 pos-4-4)', '(end-move pos-4-4)', '(jump-new-move pos-4-2 pos-3-2 pos-2-2)', '(end-move pos-2-2)', '(jump-new-move pos-4-3 pos-4-4 pos-4-5)']
> Next lifted action: jump-continue-move
> Repair set:
jump-new-move,(occupied ?from),precPos,-1
end-move,(move-ended ),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=0

>>>>  A* iteration 5800  <<<<

> Fringe size: 21433
> First 20 nodes: (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:2,C:2), (D:2,C:2), (D:2,C:2), (D:2,C:2), (D:2,C:2), (D:2,C:2)

> Node instance:
> Depth=5
> Ground actions: ['(jump-new-move pos-2-2 pos-3-2 pos-4-2)', '(end-move pos-4-2)', '(jump-new-move pos-3-3 pos-2-3 pos-1-3)', '(end-move pos-1-3)', '(jump-new-move pos-4-3 pos-4-2 pos-4-1)']
> Next lifted action: jump-continue-move
> Repair set:
jump-new-move,(occupied ?from),precPos,-1
end-move,(move-ended ),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=0

>>>>  A* iteration 6000  <<<<

> Fringe size: 22865
> First 20 nodes: (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2)

> Node instance:
> Depth=5
> Ground actions: ['(jump-new-move pos-4-3 pos-4-4 pos-4-5)', '(end-move pos-4-5)', '(jump-new-move pos-2-3 pos-2-4 pos-2-5)', '(end-move pos-2-5)', '(jump-new-move pos-2-1 pos-2-2 pos-2-3)']
> Next lifted action: jump-continue-move
> Repair set:
end-move,(move-ended ),precPos,-1
jump-new-move,(occupied ?over),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=0

>>>>  A* iteration 6200  <<<<

> Fringe size: 23445
> First 20 nodes: (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2)

> Node instance:
> Depth=5
> Ground actions: ['(jump-new-move pos-4-3 pos-4-4 pos-4-5)', '(end-move pos-4-5)', '(jump-new-move pos-3-3 pos-2-3 pos-1-3)', '(end-move pos-1-3)', '(jump-new-move pos-2-1 pos-2-2 pos-2-3)']
> Next lifted action: jump-continue-move
> Repair set:
end-move,(move-ended ),precPos,-1
jump-new-move,(occupied ?over),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=0

>>>>  A* iteration 6400  <<<<

> Fringe size: 24101
> First 20 nodes: (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2)

> Node instance:
> Depth=5
> Ground actions: ['(jump-new-move pos-2-1 pos-3-1 pos-4-1)', '(end-move pos-4-1)', '(jump-new-move pos-2-3 pos-2-4 pos-2-5)', '(end-move pos-2-5)', '(jump-new-move pos-3-3 pos-3-2 pos-3-1)']
> Next lifted action: jump-continue-move
> Repair set:
end-move,(move-ended ),precPos,-1
jump-new-move,(occupied ?over),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=0

>>>>  A* iteration 6600  <<<<

> Fringe size: 24603
> First 20 nodes: (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:2,C:2), (D:2,C:2), (D:2,C:2), (D:2,C:2), (D:2,C:2), (D:2,C:2), (D:2,C:2), (D:2,C:2), (D:2,C:2), (D:2,C:2), (D:2,C:2), (D:2,C:2)

> Node instance:
> Depth=5
> Ground actions: ['(jump-new-move pos-2-1 pos-3-1 pos-4-1)', '(end-move pos-4-1)', '(jump-new-move pos-4-3 pos-4-4 pos-4-5)', '(end-move pos-4-5)', '(jump-new-move pos-2-4 pos-3-4 pos-4-4)']
> Next lifted action: jump-continue-move
> Repair set:
end-move,(move-ended ),precPos,-1
jump-new-move,(occupied ?over),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=0

>>>>  A* iteration 6800  <<<<

> Fringe size: 25337
> First 20 nodes: (D:5,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:2,C:2), (D:2,C:2), (D:2,C:2), (D:2,C:2), (D:2,C:2), (D:2,C:2), (D:2,C:2), (D:2,C:2), (D:2,C:2), (D:2,C:2)

> Node instance:
> Depth=5
> Ground actions: ['(jump-new-move pos-2-0 pos-2-1 pos-2-2)', '(end-move pos-2-2)', '(jump-new-move pos-2-3 pos-2-4 pos-2-5)', '(end-move pos-2-5)', '(jump-new-move pos-4-4 pos-4-3 pos-4-2)']
> Next lifted action: jump-continue-move
> Repair set:
jump-new-move,(occupied ?from),precPos,-1
end-move,(move-ended ),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=0

>>>>  A* iteration 7000  <<<<

> Fringe size: 26149
> First 20 nodes: (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2)

> Node instance:
> Depth=5
> Ground actions: ['(jump-new-move pos-4-3 pos-5-3 pos-6-3)', '(end-move pos-6-3)', '(jump-new-move pos-2-3 pos-2-4 pos-2-5)', '(end-move pos-2-5)', '(jump-new-move pos-2-5 pos-2-4 pos-2-3)']
> Next lifted action: jump-continue-move
> Repair set:
end-move,(move-ended ),precPos,-1
jump-new-move,(occupied ?over),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=0

>>>>  A* iteration 7200  <<<<

> Fringe size: 26729
> First 20 nodes: (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:5,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:2,C:2), (D:2,C:2), (D:2,C:2), (D:2,C:2), (D:2,C:2), (D:2,C:2), (D:2,C:2), (D:2,C:2)

> Node instance:
> Depth=5
> Ground actions: ['(jump-new-move pos-4-3 pos-5-3 pos-6-3)', '(end-move pos-6-3)', '(jump-new-move pos-3-4 pos-2-4 pos-1-4)', '(end-move pos-1-4)', '(jump-new-move pos-3-2 pos-3-3 pos-3-4)']
> Next lifted action: jump-continue-move
> Repair set:
end-move,(move-ended ),precPos,-1
jump-new-move,(occupied ?over),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=0

>>>>  A* iteration 7400  <<<<

> Fringe size: 27385
> First 20 nodes: (D:5,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:2,C:2), (D:2,C:2), (D:2,C:2)

> Node instance:
> Depth=5
> Ground actions: ['(jump-new-move pos-3-2 pos-2-2 pos-1-2)', '(end-move pos-1-2)', '(jump-new-move pos-2-3 pos-1-3 pos-0-3)', '(end-move pos-0-3)', '(jump-new-move pos-3-4 pos-2-4 pos-1-4)']
> Next lifted action: jump-continue-move
> Repair set:
end-move,(move-ended ),precPos,-1
jump-new-move,(occupied ?over),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=0

>>>>  A* iteration 7600  <<<<

> Fringe size: 27965
> First 20 nodes: (D:5,C:2), (D:5,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:2,C:2), (D:2,C:2), (D:2,C:2), (D:2,C:2), (D:2,C:2), (D:2,C:2), (D:2,C:2), (D:2,C:2), (D:2,C:2), (D:2,C:2), (D:1,C:2), (D:1,C:2)

> Node instance:
> Depth=5
> Ground actions: ['(jump-new-move pos-3-2 pos-2-2 pos-1-2)', '(end-move pos-1-2)', '(jump-new-move pos-3-3 pos-3-2 pos-3-1)', '(end-move pos-3-1)', '(jump-new-move pos-3-4 pos-3-3 pos-3-2)']
> Next lifted action: jump-continue-move
> Repair set:
end-move,(move-ended ),precPos,-1
jump-new-move,(occupied ?over),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=0

>>>>  A* iteration 7800  <<<<

> Fringe size: 28931
> First 20 nodes: (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:3,C:2), (D:2,C:2), (D:2,C:2), (D:2,C:2), (D:2,C:2), (D:2,C:2), (D:2,C:2), (D:2,C:2)

> Node instance:
> Depth=5
> Ground actions: ['(jump-new-move pos-4-3 pos-4-2 pos-4-1)', '(end-move pos-4-1)', '(jump-new-move pos-2-4 pos-2-3 pos-2-2)', '(end-move pos-2-2)', '(jump-new-move pos-3-3 pos-4-3 pos-5-3)']
> Next lifted action: jump-continue-move
> Repair set:
end-move,(move-ended ),precPos,-1
jump-new-move,(occupied ?over),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=0
> Command timed out after 30 minutes
