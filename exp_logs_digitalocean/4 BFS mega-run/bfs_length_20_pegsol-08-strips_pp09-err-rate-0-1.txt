> Solving the next problem at: 2024-09-26 09:11:05 UTC
> Search algorithm: astar
> Instance ID=pegsol-08-strips/pp09-err-rate-0-1
> Plan length=20
> Domain class: pegsol-08-strips
> Instance name: pp09-err-rate-0-1
> Ground plan:
['(jump-new-move pos-2-3 pos-1-3 pos-0-3)', '(end-move pos-0-3)', '(jump-new-move pos-4-3 pos-4-2 pos-4-1)', '(end-move pos-4-1)', '(jump-new-move pos-4-1 pos-3-1 pos-2-1)', '(end-move pos-2-1)', '(jump-new-move pos-0-2 pos-0-3 pos-0-4)', '(end-move pos-0-4)', '(jump-new-move pos-3-4 pos-2-4 pos-1-4)', '(end-move pos-1-4)', '(jump-new-move pos-0-4 pos-1-4 pos-2-4)', '(end-move pos-2-4)', '(jump-new-move pos-2-1 pos-2-2 pos-2-3)', '(end-move pos-2-3)', '(jump-new-move pos-2-3 pos-2-4 pos-2-5)', '(end-move pos-2-5)', '(jump-new-move pos-2-5 pos-3-5 pos-4-5)', '(jump-continue-move pos-4-5 pos-4-4 pos-4-3)', '(end-move pos-4-3)', '(jump-new-move pos-5-3 pos-4-3 pos-3-3)']
> Lifted plan:
['jump-new-move', 'end-move', 'jump-new-move', 'end-move', 'jump-new-move', 'end-move', 'jump-new-move', 'end-move', 'jump-new-move', 'end-move', 'jump-new-move', 'end-move', 'jump-new-move', 'end-move', 'jump-new-move', 'end-move', 'jump-new-move', 'jump-continue-move', 'end-move', 'jump-new-move']
>>>  Vanilla ground repair:
end-move,(move-ended ),effPos,1


>>>>  A* iteration 200  <<<<

> Fringe size: 8623
> First 20 nodes: (D:17,C:1), (D:15,C:1), (D:11,C:1), (D:11,C:1), (D:9,C:1), (D:9,C:1), (D:7,C:1), (D:7,C:1), (D:5,C:1), (D:5,C:1), (D:5,C:1), (D:5,C:1), (D:3,C:1), (D:3,C:1), (D:3,C:1), (D:3,C:1), (D:3,C:1), (D:3,C:1), (D:3,C:1), (D:3,C:1)

> Node instance:
> Depth=17
> Ground actions: ['(jump-new-move pos-4-3 pos-4-4 pos-4-5)', '(end-move pos-4-5)', '(jump-new-move pos-3-4 pos-2-4 pos-1-4)', '(end-move pos-1-4)', '(jump-new-move pos-1-4 pos-1-3 pos-1-2)', '(end-move pos-1-2)', '(jump-new-move pos-2-3 pos-2-2 pos-2-1)', '(end-move pos-2-1)', '(jump-new-move pos-0-2 pos-1-2 pos-2-2)', '(end-move pos-2-2)', '(jump-new-move pos-2-1 pos-3-1 pos-4-1)', '(end-move pos-4-1)', '(jump-new-move pos-4-5 pos-3-5 pos-2-5)', '(end-move pos-2-5)', '(jump-new-move pos-4-1 pos-4-2 pos-4-3)', '(end-move pos-4-3)', '(jump-new-move pos-4-3 pos-5-3 pos-6-3)']
> Next lifted action: jump-continue-move
> Repair set:
end-move,(move-ended ),effPos,1
> g_cost=1
> h_cost=0
> f_cost=1
> #neighbours=64

>>>>  A* iteration 400  <<<<

> Fringe size: 17711
> First 20 nodes: (D:16,C:1), (D:13,C:1), (D:9,C:1), (D:9,C:1), (D:7,C:1), (D:5,C:1), (D:5,C:1), (D:5,C:1), (D:5,C:1), (D:3,C:1), (D:3,C:1), (D:3,C:1), (D:3,C:1), (D:3,C:1), (D:3,C:1), (D:3,C:1), (D:3,C:1), (D:3,C:1), (D:3,C:1), (D:3,C:1)

> Node instance:
> Depth=15
> Ground actions: ['(jump-new-move pos-4-3 pos-4-4 pos-4-5)', '(end-move pos-4-5)', '(jump-new-move pos-3-4 pos-2-4 pos-1-4)', '(end-move pos-1-4)', '(jump-new-move pos-1-4 pos-1-3 pos-1-2)', '(end-move pos-1-2)', '(jump-new-move pos-4-5 pos-3-5 pos-2-5)', '(end-move pos-2-5)', '(jump-new-move pos-1-2 pos-2-2 pos-3-2)', '(end-move pos-3-2)', '(jump-new-move pos-4-2 pos-3-2 pos-2-2)', '(end-move pos-2-2)', '(jump-new-move pos-2-2 pos-2-3 pos-2-4)', '(end-move pos-2-4)', '(jump-new-move pos-2-5 pos-2-4 pos-2-3)']
> Next lifted action: end-move
> Repair set:
end-move,(move-ended ),effPos,1
> g_cost=1
> h_cost=0
> f_cost=1
> #neighbours=8

==== Goal Reached at Iteration 421 ====

>>>>  A* iteration 421  <<<<

> Fringe size: 18505
> First 20 nodes: (D:11,C:1), (D:11,C:1), (D:9,C:1), (D:7,C:1), (D:5,C:1), (D:5,C:1), (D:5,C:1), (D:5,C:1), (D:3,C:1), (D:3,C:1), (D:3,C:1), (D:3,C:1), (D:3,C:1), (D:3,C:1), (D:3,C:1), (D:3,C:1), (D:3,C:1), (D:3,C:1), (D:3,C:1), (D:3,C:1)

> Node instance:
> Depth=20
> Ground actions: ['(jump-new-move pos-4-3 pos-4-4 pos-4-5)', '(end-move pos-4-5)', '(jump-new-move pos-3-4 pos-2-4 pos-1-4)', '(end-move pos-1-4)', '(jump-new-move pos-1-4 pos-1-3 pos-1-2)', '(end-move pos-1-2)', '(jump-new-move pos-4-5 pos-3-5 pos-2-5)', '(end-move pos-2-5)', '(jump-new-move pos-2-2 pos-2-3 pos-2-4)', '(end-move pos-2-4)', '(jump-new-move pos-0-2 pos-1-2 pos-2-2)', '(end-move pos-2-2)', '(jump-new-move pos-2-5 pos-2-4 pos-2-3)', '(end-move pos-2-3)', '(jump-new-move pos-2-3 pos-2-2 pos-2-1)', '(end-move pos-2-1)', '(jump-new-move pos-2-1 pos-3-1 pos-4-1)', '(jump-continue-move pos-4-1 pos-4-2 pos-4-3)', '(end-move pos-4-3)', '(jump-new-move pos-5-3 pos-4-3 pos-3-3)']
> Next lifted action: []
> Repair set:
end-move,(move-ended ),effPos,1
> g_cost=1
> h_cost=0
> f_cost=1
> #neighbours=0
==== End of Goal State Log ====

>>> Goal found:
> Node instance:
> Depth=20
> Ground actions: ['(jump-new-move pos-4-3 pos-4-4 pos-4-5)', '(end-move pos-4-5)', '(jump-new-move pos-3-4 pos-2-4 pos-1-4)', '(end-move pos-1-4)', '(jump-new-move pos-1-4 pos-1-3 pos-1-2)', '(end-move pos-1-2)', '(jump-new-move pos-4-5 pos-3-5 pos-2-5)', '(end-move pos-2-5)', '(jump-new-move pos-2-2 pos-2-3 pos-2-4)', '(end-move pos-2-4)', '(jump-new-move pos-0-2 pos-1-2 pos-2-2)', '(end-move pos-2-2)', '(jump-new-move pos-2-5 pos-2-4 pos-2-3)', '(end-move pos-2-3)', '(jump-new-move pos-2-3 pos-2-2 pos-2-1)', '(end-move pos-2-1)', '(jump-new-move pos-2-1 pos-3-1 pos-4-1)', '(jump-continue-move pos-4-1 pos-4-2 pos-4-3)', '(end-move pos-4-3)', '(jump-new-move pos-5-3 pos-4-3 pos-3-3)']
> Next lifted action: []
> Repair set:
end-move,(move-ended ),effPos,1
> g_cost=1
> h_cost=0
> f_cost=1
> #neighbours=0
> Time spent on this problem: 0.1 hours = 6.5 minutes = 389.90 seconds
> Subprocess finished.
