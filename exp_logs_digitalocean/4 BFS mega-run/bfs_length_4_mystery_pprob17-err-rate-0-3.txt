> Solving the next problem at: 2024-09-25 09:56:04 UTC
> Search algorithm: bfs
> Instance ID=mystery/pprob17-err-rate-0-3
> Plan length=4
> Domain class: mystery
> Instance name: pprob17-err-rate-0-3
> Ground plan:
['(feast satisfaction potato yogurt guanabara bosnia)', '(overcome abrasion satisfaction yogurt mercury saturn)', '(feast satisfaction yogurt wonderbread guanabara bosnia)', '(succumb abrasion satisfaction wonderbread mercury saturn)']
> Lifted plan:
['feast', 'overcome', 'feast', 'succumb']
>>>  Vanilla ground repair:
overcome,(attacks ?v ?v),precPos,-1


>>>>  A* iteration 100  <<<<

> Fringe size: 1037
> First 20 nodes: (D:1,C:1), (D:1,C:1), (D:1,C:1), (D:1,C:1), (D:1,C:1), (D:1,C:1), (D:1,C:1), (D:1,C:1), (D:1,C:1), (D:1,C:1), (D:1,C:1), (D:1,C:1), (D:1,C:1), (D:1,C:1), (D:1,C:1), (D:1,C:1), (D:1,C:1), (D:1,C:1), (D:1,C:1), (D:1,C:1)

> Node instance:
> Depth=1
> Ground actions: ['(feast satiety marzipan mutton alsace surrey)']
> Next lifted action: overcome
> Repair set:
feast,(craves ?v ?n1),precPos,-1
> g_cost=1
> h_cost=0
> f_cost=1
> #neighbours=0

>>>>  A* iteration 200  <<<<

> Fringe size: 937
> First 20 nodes: (D:1,C:1), (D:1,C:1), (D:1,C:1), (D:1,C:1), (D:1,C:1), (D:1,C:1), (D:1,C:1), (D:1,C:1), (D:1,C:1), (D:1,C:1), (D:1,C:1), (D:1,C:1), (D:1,C:1), (D:1,C:1), (D:1,C:1), (D:1,C:1), (D:1,C:1), (D:1,C:1), (D:1,C:1), (D:1,C:1)

> Node instance:
> Depth=1
> Ground actions: ['(feast rest endive wurst bosnia alsace)']
> Next lifted action: overcome
> Repair set:
feast,(craves ?v ?n1),precPos,-1
> g_cost=1
> h_cost=0
> f_cost=1
> #neighbours=0

>>>>  A* iteration 300  <<<<

> Fringe size: 837
> First 20 nodes: (D:1,C:1), (D:1,C:1), (D:1,C:1), (D:1,C:1), (D:1,C:1), (D:1,C:1), (D:1,C:1), (D:1,C:1), (D:1,C:1), (D:1,C:1), (D:1,C:1), (D:1,C:1), (D:1,C:1), (D:1,C:1), (D:1,C:1), (D:1,C:1), (D:1,C:1), (D:1,C:1), (D:1,C:1), (D:1,C:1)

> Node instance:
> Depth=1
> Ground actions: ['(feast achievement onion ham bosnia alsace)']
> Next lifted action: overcome
> Repair set:
feast,(craves ?v ?n1),precPos,-1
> g_cost=1
> h_cost=0
> f_cost=1
> #neighbours=0

>>>>  A* iteration 400  <<<<

> Fringe size: 737
> First 20 nodes: (D:1,C:2), (D:1,C:2), (D:1,C:2), (D:1,C:2), (D:1,C:2), (D:1,C:2), (D:1,C:2), (D:1,C:2), (D:1,C:2), (D:1,C:2), (D:1,C:2), (D:1,C:2), (D:1,C:2), (D:1,C:2), (D:1,C:2), (D:1,C:2), (D:1,C:2), (D:1,C:2), (D:1,C:2), (D:1,C:2)

> Node instance:
> Depth=1
> Ground actions: ['(feast love marzipan haroset goias bavaria)']
> Next lifted action: overcome
> Repair set:
feast,(locale ?n1 ?l2),precPos,-1
feast,(craves ?v ?n1),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=0

>>>>  A* iteration 500  <<<<

> Fringe size: 637
> First 20 nodes: (D:1,C:2), (D:1,C:2), (D:1,C:2), (D:1,C:2), (D:1,C:2), (D:1,C:2), (D:1,C:2), (D:1,C:2), (D:1,C:2), (D:1,C:2), (D:1,C:2), (D:1,C:2), (D:1,C:2), (D:1,C:2), (D:1,C:2), (D:1,C:2), (D:1,C:2), (D:1,C:2), (D:1,C:2), (D:1,C:2)

> Node instance:
> Depth=1
> Ground actions: ['(feast satiety ham onion goias bavaria)']
> Next lifted action: overcome
> Repair set:
feast,(locale ?n1 ?l2),precPos,-1
feast,(craves ?v ?n1),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=0

>>>>  A* iteration 600  <<<<

> Fringe size: 537
> First 20 nodes: (D:1,C:2), (D:1,C:2), (D:1,C:2), (D:1,C:2), (D:1,C:2), (D:1,C:2), (D:1,C:2), (D:1,C:2), (D:1,C:2), (D:1,C:2), (D:1,C:2), (D:1,C:2), (D:1,C:2), (D:1,C:2), (D:1,C:2), (D:1,C:2), (D:1,C:2), (D:1,C:2), (D:1,C:2), (D:1,C:2)

> Node instance:
> Depth=1
> Ground actions: ['(feast intoxication shrimp turkey goias bavaria)']
> Next lifted action: overcome
> Repair set:
feast,(locale ?n1 ?l2),precPos,-1
feast,(craves ?v ?n1),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=0

>>>>  A* iteration 700  <<<<

> Fringe size: 437
> First 20 nodes: (D:1,C:2), (D:1,C:2), (D:1,C:2), (D:1,C:2), (D:1,C:2), (D:1,C:2), (D:1,C:2), (D:1,C:2), (D:1,C:2), (D:1,C:2), (D:1,C:2), (D:1,C:2), (D:1,C:2), (D:1,C:2), (D:1,C:2), (D:1,C:2), (D:1,C:2), (D:1,C:2), (D:1,C:2), (D:1,C:2)

> Node instance:
> Depth=1
> Ground actions: ['(feast achievement shrimp onion bavaria guanabara)']
> Next lifted action: overcome
> Repair set:
feast,(locale ?n1 ?l2),precPos,-1
feast,(craves ?v ?n1),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=0

>>>>  A* iteration 800  <<<<

> Fringe size: 337
> First 20 nodes: (D:1,C:2), (D:1,C:2), (D:1,C:2), (D:1,C:2), (D:1,C:2), (D:1,C:2), (D:1,C:2), (D:1,C:2), (D:1,C:2), (D:1,C:2), (D:1,C:2), (D:1,C:2), (D:1,C:2), (D:1,C:2), (D:1,C:2), (D:1,C:2), (D:1,C:2), (D:1,C:2), (D:1,C:2), (D:1,C:2)

> Node instance:
> Depth=1
> Ground actions: ['(feast achievement papaya wurst bavaria guanabara)']
> Next lifted action: overcome
> Repair set:
feast,(locale ?n1 ?l2),precPos,-1
feast,(craves ?v ?n1),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=0

>>>>  A* iteration 900  <<<<

> Fringe size: 237
> First 20 nodes: (D:1,C:2), (D:1,C:2), (D:1,C:2), (D:1,C:2), (D:1,C:2), (D:1,C:2), (D:1,C:2), (D:1,C:2), (D:1,C:2), (D:1,C:2), (D:1,C:2), (D:1,C:2), (D:1,C:2), (D:1,C:2), (D:1,C:2), (D:1,C:2), (D:1,C:2), (D:1,C:2), (D:1,C:2), (D:1,C:2)

> Node instance:
> Depth=1
> Ground actions: ['(feast satiety wonderbread ham goias bavaria)']
> Next lifted action: overcome
> Repair set:
feast,(locale ?n1 ?l2),precPos,-1
feast,(craves ?v ?n1),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=0

>>>>  A* iteration 1000  <<<<

> Fringe size: 137
> First 20 nodes: (D:1,C:2), (D:1,C:2), (D:1,C:2), (D:1,C:2), (D:1,C:2), (D:1,C:2), (D:1,C:2), (D:1,C:2), (D:1,C:2), (D:1,C:2), (D:1,C:2), (D:1,C:2), (D:1,C:2), (D:1,C:2), (D:1,C:2), (D:1,C:2), (D:1,C:2), (D:1,C:2), (D:1,C:2), (D:1,C:2)

> Node instance:
> Depth=1
> Ground actions: ['(feast intoxication yogurt wonderbread bavaria guanabara)']
> Next lifted action: overcome
> Repair set:
feast,(locale ?n1 ?l2),precPos,-1
feast,(craves ?v ?n1),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=0

>>>>  A* iteration 1100  <<<<

> Fringe size: 37
> First 20 nodes: (D:1,C:2), (D:1,C:2), (D:1,C:2), (D:1,C:2), (D:1,C:2), (D:1,C:2), (D:1,C:2), (D:1,C:2), (D:1,C:2), (D:1,C:2), (D:1,C:2), (D:1,C:2), (D:1,C:2), (D:1,C:2), (D:1,C:2), (D:1,C:2), (D:1,C:2), (D:1,C:2), (D:1,C:2), (D:1,C:2)

> Node instance:
> Depth=1
> Ground actions: ['(feast satisfaction wonderbread ham guanabara bosnia)']
> Next lifted action: overcome
> Repair set:
feast,(locale ?n1 ?l2),precPos,-1
feast,(craves ?v ?n1),precPos,-1
> g_cost=2
> h_cost=0
> f_cost=2
> #neighbours=0
>>> No goal found.

> Time spent on this problem: 0.0 hours = 2.2 minutes = 131.37 seconds
