---
timestamp: '2025-01-13T15:04:32.392672'
level: INFO
issuer: instance_solver
event_type: metadata
data:
    log_file: /home/remote/u7899572/lifted-white-plan-domain-repair/exp_logs_anu/dfs
        relax-all lp066/mprime__pprob01-err-rate-0-3.yaml
    instance_id: mprime__pprob01-err-rate-0-3
    search_algorithm: dfs
    plan_length: 5
    domain_class: mprime
    instance_name: pprob01-err-rate-0-3
    ground_plan:
    - (overcome abrasion rest pork uranus venus)
    - (feast rest pork lamb alsace quebec)
    - (feast rest lamb flounder surrey pennsylvania)
    - (feast rest flounder rice pennsylvania alsace)
    - (succumb abrasion rest rice uranus venus)
    lifted_plan:
    -   - overcome
        - abrasion
        - rest
        - ?pork
        - ?uranus
        - ?venus
    -   - feast
        - ?rest
        - pork
        - ?lamb
        - ?alsace
        - ?quebec
    -   - feast
        - rest
        - ?lamb
        - ?flounder
        - surrey
        - ?pennsylvania
    -   - feast
        - ?rest
        - flounder
        - rice
        - pennsylvania
        - alsace
    -   - succumb
        - ?abrasion
        - rest
        - rice
        - uranus
        - ?venus


---
timestamp: '2025-01-13T15:04:32.396170'
level: INFO
issuer: instance_solver
event_type: ground_repair
data:
    repair_length: 0
    repair: ''


---
timestamp: '2025-01-13T15:15:43.101827'
level: ERROR
issuer: node
event_type: error
data:
    current_node:
        depth: 2
        ground_actions:
        - (overcome abrasion rest pork uranus venus)
        - (feast rest pork lamb alsace quebec)
        repair_set: ''
        g_cost: 0
        h_cost: 0
        f_cost: 0
        next_lifted_action: '[''feast'', ''rest'', ''?lamb'', ''?flounder'', ''surrey'',
            ''?pennsylvania'']'
        num_neighbours: 0
        first_10_possible_groundings: null
        current_state: not implemented!


---
timestamp: '2025-01-13T15:15:43.103931'
level: ERROR
issuer: instance_solver
event_type: error
data: "An error occurred during A* search: . Stack trace: Traceback (most recent call\
    \ last):\n  File \"instance_solver.py\", line 106, in solve_instance\n    searcher.find_path(logger=logger,\
    \ log_interval=log_interval)\n  File \"/home/remote/u7899572/lifted-white-plan-domain-repair/search_partial_grounding/search_algorithms.py\"\
    , line 140, in find_path\n    neighbors = sorted(current_node.get_neighbors(),\
    \ key=lambda x: x.g_cost, reverse=True)\n  File \"/home/remote/u7899572/lifted-white-plan-domain-repair/search_partial_grounding/node.py\"\
    , line 202, in get_neighbors\n    self.possible_groundings = Node.grounder(domain,\
    \ task, next_action_pddl)\n  File \"/home/remote/u7899572/lifted-white-plan-domain-repair/search_partial_grounding/lifted_pddl_grounder.py\"\
    , line 135, in ground_pddl\n    actions = parser.get_applicable_actions()\n  File\
    \ \"/home/projects/u7899572/conda-envs/main/lib/python3.8/site-packages/lifted_pddl/parser.py\"\
    , line 485, in get_applicable_actions\n    full_var_assigns = self._get_applicable_var_assigns_action(action,\
    \ [[-1]*len(action_vars)])\n  File \"/home/projects/u7899572/conda-envs/main/lib/python3.8/site-packages/lifted_pddl/parser.py\"\
    , line 471, in _get_applicable_var_assigns_action\n    full_var_assigns = tuple(set([tuple([elem\
    \ for ind, elem in enumerate(var_assign) if ind not in exists_vars]) for var_assign\
    \ in full_var_assigns]))\n  File \"/home/projects/u7899572/conda-envs/main/lib/python3.8/site-packages/lifted_pddl/parser.py\"\
    , line 471, in <listcomp>\n    full_var_assigns = tuple(set([tuple([elem for ind,\
    \ elem in enumerate(var_assign) if ind not in exists_vars]) for var_assign in\
    \ full_var_assigns]))\nMemoryError\n"


---
timestamp: '2025-01-13T15:15:43.176758'
level: INFO
issuer: instance_solver
event_type: timer_seconds
data: '672.02'


---
timestamp: '2025-01-13T15:16:31.854727'
level: INFO
issuer: batch_solver
event_type: general
data: 'Subprocess finished successfully. Duration: 721.02 seconds'


