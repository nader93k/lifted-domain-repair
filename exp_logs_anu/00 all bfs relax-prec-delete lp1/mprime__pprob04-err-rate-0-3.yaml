---
timestamp: '2025-01-02T02:37:57.971059'
level: INFO
issuer: instance_solver
event_type: metadata
data:
    log_file: exp_logs_anu/00 all/mprime__pprob04-err-rate-0-3.yaml
    instance_id: mprime__pprob04-err-rate-0-3
    search_algorithm: bfs
    plan_length: 9
    domain_class: mprime
    instance_name: pprob04-err-rate-0-3
    ground_plan:
    - (feast aesthetics shrimp cherry quebec bosnia)
    - (feast aesthetics cherry arugula oregon kentucky)
    - (feast aesthetics arugula wurst oregon kentucky)
    - (drink scallop wurst oregon bosnia quebec surrey quebec)
    - (feast aesthetics wurst grapefruit surrey quebec)
    - (overcome sciatica aesthetics grapefruit mars vulcan)
    - (drink ham grapefruit bosnia quebec surrey surrey quebec)
    - (feast aesthetics grapefruit wurst surrey quebec)
    - (succumb sciatica aesthetics wurst mars vulcan)
    lifted_plan:
    -   - feast
        - ?aesthetics
        - ?shrimp
        - ?cherry
        - ?quebec
        - ?bosnia
    -   - feast
        - ?aesthetics
        - ?cherry
        - ?arugula
        - ?oregon
        - ?kentucky
    -   - feast
        - ?aesthetics
        - ?arugula
        - ?wurst
        - ?oregon
        - ?kentucky
    -   - drink
        - ?scallop
        - ?wurst
        - ?oregon
        - ?bosnia
        - ?quebec
        - ?surrey
        - ?quebec
    -   - feast
        - ?aesthetics
        - ?wurst
        - ?grapefruit
        - ?surrey
        - ?quebec
    -   - overcome
        - ?sciatica
        - ?aesthetics
        - ?grapefruit
        - ?mars
        - ?vulcan
    -   - drink
        - ?ham
        - ?grapefruit
        - ?bosnia
        - ?quebec
        - ?surrey
        - ?surrey
        - ?quebec
    -   - feast
        - ?aesthetics
        - ?grapefruit
        - ?wurst
        - ?surrey
        - ?quebec
    -   - succumb
        - ?sciatica
        - ?aesthetics
        - ?wurst
        - ?mars
        - ?vulcan


---
timestamp: '2025-01-02T02:37:57.974962'
level: INFO
issuer: instance_solver
event_type: ground_repair
data:
    repair_length: 0
    repair: ''


---
timestamp: '2025-01-02T02:37:58.932542'
level: ERROR
issuer: node
event_type: error
data:
    current_node:
        depth: 8
        ground_actions:
        - (feast aesthetics shrimp scallion quebec bosnia)
        - (feast aesthetics scallion muffin surrey quebec)
        - (feast aesthetics muffin arugula oregon kentucky)
        - (drink scallop scallop oregon bosnia quebec oregon kentucky)
        - (feast aesthetics arugula scallop oregon kentucky)
        - (overcome abrasion aesthetics scallop mars vulcan)
        - (drink scallop muffin kentucky oregon bosnia oregon kentucky)
        - (feast aesthetics scallop arugula quebec bosnia)
        repair_set: ''
        g_cost: 0
        h_cost: 0
        f_cost: 0
        next_lifted_action: '[''succumb'', ''?sciatica'', ''?aesthetics'', ''?wurst'',
            ''?mars'', ''?vulcan'']'
        num_neighbours: 0
        first_10_possible_groundings: null
        current_state: '''(province surrey)'', ''(craves aesthetics arugula)'', ''(eats
            grapefruit wurst)'', ''(locale scallop kentucky)'', ''(harmony aesthetics
            vulcan)'', ''(craves dread ham)'', ''(eats muffin arugula)'', ''(eats
            arugula cherry)'', ''(craves hangover muffin)'', ''(food ham)'', ''(eats
            arugula bacon)'', ''(pain sciatica)'', ''(eats arugula scallop)'', ''(locale
            muffin kentucky)'', ''(eats scallion shrimp)'', ''(food arugula)'', ''(harmony
            aesthetics kentucky)'', ''(eats arugula wurst)'', ''(eats bacon arugula)'',
            ''(locale arugula kentucky)'', ''(eats cherry shrimp)'', ''(food muffin)'',
            ''(eats shrimp cherry)'', ''(eats arugula muffin)'', ''(craves aesthetics
            scallion)'', ''(craves aesthetics scallop)'', ''(eats shrimp scallion)'',
            ''(locale scallion quebec)'', ''(eats cherry ham)'', ''(locale wurst surrey)'',
            ''(locale shrimp quebec)'', ''(eats wurst bacon)'', ''(pain anger)'',
            ''(pleasure aesthetics)'', ''(pain jealousy)'', ''(craves anger wurst)'',
            ''(attacks surrey quebec)'', ''(eats muffin cherry)'', ''(planet vulcan)'',
            ''(craves loneliness arugula)'', ''(locale cherry kentucky)'', ''(eats
            muffin ham)'', ''(eats cherry muffin)'', ''(eats muffin scallion)'', ''(locale
            bacon quebec)'', ''(harmony aesthetics bosnia)'', ''(locale ham bosnia)'',
            ''(province bosnia)'', ''(eats scallop grapefruit)'', ''(province oregon)'',
            ''(food cherry)'', ''(eats ham muffin)'', ''(craves sciatica grapefruit)'',
            ''(eats cherry arugula)'', ''(craves jealousy bacon)'', ''(locale arugula
            oregon)'', ''(food bacon)'', ''(harmony aesthetics quebec)'', ''(province
            quebec)'', ''(food scallion)'', ''(food scallop)'', ''(eats scallop arugula)'',
            ''(pain dread)'', ''(food wurst)'', ''(province kentucky)'', ''(fears
            abrasion aesthetics)'', ''(locale scallion surrey)'', ''(eats bacon wurst)'',
            ''(food grapefruit)'', ''(locale shrimp bosnia)'', ''(planet mars)'',
            ''(attacks oregon kentucky)'', ''(eats wurst grapefruit)'', ''(food shrimp)'',
            ''(harmony aesthetics mars)'', ''(locale scallop bosnia)'', ''(locale
            grapefruit surrey)'', ''(locale scallop oregon)'', ''(craves aesthetics
            muffin)'', ''(attacks bosnia oregon)'', ''(pain hangover)'', ''(craves
            abrasion scallop)'', ''(eats wurst arugula)'', ''(attacks quebec bosnia)'',
            ''(pain loneliness)'', ''(eats scallion muffin)'', ''(locale scallop quebec)'',
            ''(eats grapefruit scallop)'', ''(orbits mars vulcan)'', ''(craves aesthetics
            shrimp)'', ''(locale muffin oregon)'', ''(eats ham cherry)'', ''(pain
            abrasion)'''


---
timestamp: '2025-01-02T02:37:58.937411'
level: ERROR
issuer: instance_solver
event_type: error
data: "An error occurred during A* search: line 41:3 no viable alternative at input\
    \ '(='. Stack trace: Traceback (most recent call last):\n  File \"/home/projects/u7899572/conda-envs/main/lib/python3.8/site-packages/tarski/io/_fstrips/parser/parser.py\"\
    , line 4351, in single_effect\n    la_ = self._interp.adaptivePredict(self._input,42,self._ctx)\n\
    \  File \"/home/projects/u7899572/conda-envs/main/lib/python3.8/site-packages/antlr4/atn/ParserATNSimulator.py\"\
    , line 342, in adaptivePredict\n    alt = self.execATN(dfa, s0, input, index,\
    \ outerContext)\n  File \"/home/projects/u7899572/conda-envs/main/lib/python3.8/site-packages/antlr4/atn/ParserATNSimulator.py\"\
    , line 414, in execATN\n    raise e\nantlr4.error.Errors.NoViableAltException:\
    \ None\n\nDuring handling of the above exception, another exception occurred:\n\
    \nTraceback (most recent call last):\n  File \"instance_solver.py\", line 85,\
    \ in solve_instance\n    searcher.find_path(logger=logger, log_interval=log_interval)\n\
    \  File \"/home/remote/u7899572/lifted-white-plan-domain-repair/search_partial_grounding/search_algorithms.py\"\
    , line 90, in find_path\n    neighbours = current_node.get_neighbors()\n  File\
    \ \"/home/remote/u7899572/lifted-white-plan-domain-repair/search_partial_grounding/node.py\"\
    , line 163, in get_neighbors\n    self.possible_groundings = Node.grounder(domain,\
    \ task, next_action_pddl)\n  File \"/home/remote/u7899572/lifted-white-plan-domain-repair/search_partial_grounding/lifted_pddl_grounder.py\"\
    , line 145, in ground_pddl\n    parser.parse_domain(domain_path)\n  File \"/home/projects/u7899572/conda-envs/main/lib/python3.8/site-packages/lifted_pddl/parser.py\"\
    , line 68, in parse_domain\n    self._reader.parse_domain(domain_path)\n  File\
    \ \"/home/projects/u7899572/conda-envs/main/lib/python3.8/site-packages/tarski/io/fstrips.py\"\
    , line 58, in parse_domain\n    self.parse_file(filename, 'domain')\n  File \"\
    /home/projects/u7899572/conda-envs/main/lib/python3.8/site-packages/tarski/io/fstrips.py\"\
    , line 54, in parse_file\n    domain_parse_tree, _ = self.parser.parse_file(filename,\
    \ start_rule)\n  File \"/home/projects/u7899572/conda-envs/main/lib/python3.8/site-packages/tarski/io/_fstrips/reader.py\"\
    , line 43, in parse_file\n    return self._parse_stream(stream, start_rule)\n\
    \  File \"/home/projects/u7899572/conda-envs/main/lib/python3.8/site-packages/tarski/io/_fstrips/reader.py\"\
    , line 51, in _parse_stream\n    tree = getattr(parser, start_rule)()\n  File\
    \ \"/home/projects/u7899572/conda-envs/main/lib/python3.8/site-packages/tarski/io/_fstrips/parser/parser.py\"\
    , line 868, in domain\n    self.structureDef()\n  File \"/home/projects/u7899572/conda-envs/main/lib/python3.8/site-packages/tarski/io/_fstrips/parser/parser.py\"\
    , line 2639, in structureDef\n    self.actionDef()\n  File \"/home/projects/u7899572/conda-envs/main/lib/python3.8/site-packages/tarski/io/_fstrips/parser/parser.py\"\
    , line 2731, in actionDef\n    self.actionDefBody()\n  File \"/home/projects/u7899572/conda-envs/main/lib/python3.8/site-packages/tarski/io/_fstrips/parser/parser.py\"\
    , line 3090, in actionDefBody\n    self.effect()\n  File \"/home/projects/u7899572/conda-envs/main/lib/python3.8/site-packages/tarski/io/_fstrips/parser/parser.py\"\
    , line 4181, in effect\n    self.single_effect()\n  File \"/home/projects/u7899572/conda-envs/main/lib/python3.8/site-packages/tarski/io/_fstrips/parser/parser.py\"\
    , line 4425, in single_effect\n    self._errHandler.reportError(self, re)\n  File\
    \ \"/home/projects/u7899572/conda-envs/main/lib/python3.8/site-packages/antlr4/error/ErrorStrategy.py\"\
    , line 124, in reportError\n    self.reportNoViableAlternative(recognizer, e)\n\
    \  File \"/home/projects/u7899572/conda-envs/main/lib/python3.8/site-packages/antlr4/error/ErrorStrategy.py\"\
    , line 250, in reportNoViableAlternative\n    recognizer.notifyErrorListeners(msg,\
    \ e.offendingToken, e)\n  File \"/home/projects/u7899572/conda-envs/main/lib/python3.8/site-packages/antlr4/Parser.py\"\
    , line 314, in notifyErrorListeners\n    listener.syntaxError(self, offendingToken,\
    \ line, column, msg, e)\n  File \"/home/projects/u7899572/conda-envs/main/lib/python3.8/site-packages/antlr4/error/ErrorListener.py\"\
    , line 60, in syntaxError\n    delegate.syntaxError(recognizer, offendingSymbol,\
    \ line, column, msg, e)\n  File \"/home/projects/u7899572/conda-envs/main/lib/python3.8/site-packages/tarski/io/_fstrips/reader.py\"\
    , line 505, in syntaxError\n    raise ParsingError(msg)\ntarski.io._fstrips.reader.ParsingError:\
    \ line 41:3 no viable alternative at input '(='\n"


---
timestamp: '2025-01-02T02:37:58.940729'
level: INFO
issuer: instance_solver
event_type: timer_seconds
data: '2.09'


