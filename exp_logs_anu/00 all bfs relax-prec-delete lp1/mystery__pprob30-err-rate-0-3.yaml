---
timestamp: '2025-01-02T03:08:37.279732'
level: INFO
issuer: instance_solver
event_type: metadata
data:
    log_file: exp_logs_anu/00 all/mystery__pprob30-err-rate-0-3.yaml
    instance_id: mystery__pprob30-err-rate-0-3
    search_algorithm: bfs
    plan_length: 10
    domain_class: mystery
    instance_name: pprob30-err-rate-0-3
    ground_plan:
    - (feast triumph turkey chicken surrey pennsylvania)
    - (overcome boils expectation hamburger neptune venus)
    - (feast expectation hamburger beef bosnia bavaria)
    - (feast expectation beef baguette bosnia bavaria)
    - (overcome dread expectation baguette vulcan neptune)
    - (feast expectation baguette cucumber alsace guanabara)
    - (feast expectation cucumber hotdog bosnia bavaria)
    - (feast expectation hotdog mutton moravia kentucky)
    - (succumb boils expectation mutton vulcan neptune)
    - (succumb dread expectation mutton neptune venus)
    lifted_plan:
    -   - feast
        - ?triumph
        - ?turkey
        - ?chicken
        - ?surrey
        - ?pennsylvania
    -   - overcome
        - ?boils
        - ?expectation
        - ?hamburger
        - ?neptune
        - ?venus
    -   - feast
        - ?expectation
        - ?hamburger
        - ?beef
        - ?bosnia
        - ?bavaria
    -   - feast
        - ?expectation
        - ?beef
        - ?baguette
        - ?bosnia
        - ?bavaria
    -   - overcome
        - ?dread
        - ?expectation
        - ?baguette
        - ?vulcan
        - ?neptune
    -   - feast
        - ?expectation
        - ?baguette
        - ?cucumber
        - ?alsace
        - ?guanabara
    -   - feast
        - ?expectation
        - ?cucumber
        - ?hotdog
        - ?bosnia
        - ?bavaria
    -   - feast
        - ?expectation
        - ?hotdog
        - ?mutton
        - ?moravia
        - ?kentucky
    -   - succumb
        - ?boils
        - ?expectation
        - ?mutton
        - ?vulcan
        - ?neptune
    -   - succumb
        - ?dread
        - ?expectation
        - ?mutton
        - ?neptune
        - ?venus


---
timestamp: '2025-01-02T03:08:37.283904'
level: INFO
issuer: instance_solver
event_type: ground_repair
data:
    repair_length: 0
    repair: ''


---
timestamp: '2025-01-02T03:08:37.397137'
level: ERROR
issuer: node
event_type: error
data:
    current_node:
        depth: 1
        ground_actions:
        - (feast expectation hamburger hotdog bosnia bavaria)
        repair_set: ''
        g_cost: 0
        h_cost: 0
        f_cost: 0
        next_lifted_action: '[''overcome'', ''?boils'', ''?expectation'', ''?hamburger'',
            ''?neptune'', ''?venus'']'
        num_neighbours: 0
        first_10_possible_groundings: null
        current_state: '''(locale beef bavaria)'', ''(food hamburger)'', ''(craves
            boils hamburger)'', ''(orbits neptune venus)'', ''(locale hamburger bosnia)'',
            ''(attacks moravia kentucky)'', ''(craves prostatitis cucumber)'', ''(pleasure
            triumph)'', ''(province pennsylvania)'', ''(orbits vulcan neptune)'',
            ''(food turkey)'', ''(eats hamburger beef)'', ''(food chicken)'', ''(pleasure
            achievement)'', ''(pain laceration)'', ''(locale turkey pennsylvania)'',
            ''(eats muffin baguette)'', ''(locale baguette guanabara)'', ''(province
            moravia)'', ''(harmony excitement venus)'', ''(eats turkey cucumber)'',
            ''(pain sciatica)'', ''(craves expectation hamburger)'', ''(pain boils)'',
            ''(eats guava yogurt)'', ''(eats baguette beef)'', ''(locale cucumber
            bavaria)'', ''(province quebec)'', ''(eats scallop yogurt)'', ''(orbits
            mars vulcan)'', ''(eats hotdog chicken)'', ''(eats turkey muffin)'', ''(province
            oregon)'', ''(eats baguette rice)'', ''(eats yogurt scallop)'', ''(eats
            cucumber turkey)'', ''(attacks arizona oregon)'', ''(eats guava rice)'',
            ''(harmony intoxication venus)'', ''(province alsace)'', ''(attacks guanabara
            arizona)'', ''(locale yogurt bosnia)'', ''(food cucumber)'', ''(province
            guanabara)'', ''(eats beef hamburger)'', ''(harmony expectation venus)'',
            ''(craves achievement guava)'', ''(locale guava oregon)'', ''(food guava)'',
            ''(province goias)'', ''(craves expectation hotdog)'', ''(pain prostatitis)'',
            ''(pain dread)'', ''(locale hamburger bavaria)'', ''(craves excitement
            yogurt)'', ''(craves dread baguette)'', ''(eats chicken mutton)'', ''(food
            baguette)'', ''(food rice)'', ''(eats rice scallop)'', ''(planet neptune)'',
            ''(food muffin)'', ''(planet venus)'', ''(food yogurt)'', ''(province
            bosnia)'', ''(planet vulcan)'', ''(province arizona)'', ''(attacks alsace
            guanabara)'', ''(food mutton)'', ''(attacks surrey pennsylvania)'', ''(eats
            hamburger hotdog)'', ''(harmony achievement vulcan)'', ''(province manitoba)'',
            ''(eats beef hotdog)'', ''(eats yogurt guava)'', ''(pain anxiety)'', ''(pleasure
            excitement)'', ''(eats chicken hotdog)'', ''(locale muffin oregon)'',
            ''(craves sciatica yogurt)'', ''(locale rice guanabara)'', ''(food beef)'',
            ''(eats hotdog cucumber)'', ''(eats hotdog hamburger)'', ''(eats cucumber
            baguette)'', ''(craves abrasion guava)'', ''(attacks bosnia bavaria)'',
            ''(food scallop)'', ''(province surrey)'', ''(eats scallop rice)'', ''(craves
            triumph turkey)'', ''(harmony triumph vulcan)'', ''(attacks bavaria moravia)'',
            ''(food hotdog)'', ''(attacks pennsylvania alsace)'', ''(eats baguette
            cucumber)'', ''(craves intoxication beef)'', ''(locale scallop oregon)'',
            ''(eats muffin turkey)'', ''(eats rice guava)'', ''(craves laceration
            muffin)'', ''(locale mutton goias)'', ''(province kentucky)'', ''(eats
            mutton chicken)'', ''(pain abrasion)'', ''(attacks manitoba surrey)'',
            ''(locale hotdog kentucky)'', ''(eats cucumber hotdog)'', ''(locale chicken
            surrey)'', ''(pleasure expectation)'', ''(eats hotdog mutton)'', ''(eats
            rice baguette)'', ''(attacks quebec goias)'', ''(craves anxiety chicken)'',
            ''(pleasure intoxication)'', ''(eats turkey chicken)'', ''(planet mars)'',
            ''(province bavaria)'', ''(eats mutton hotdog)'', ''(eats beef baguette)'',
            ''(attacks oregon bosnia)'', ''(eats hotdog beef)'', ''(attacks goias
            manitoba)'', ''(eats chicken turkey)'', ''(eats baguette muffin)'''


---
timestamp: '2025-01-02T03:08:37.402226'
level: ERROR
issuer: instance_solver
event_type: error
data: "An error occurred during A* search: line 43:8 mismatched input '=' expecting\
    \ NAME. Stack trace: Traceback (most recent call last):\n  File \"/home/projects/u7899572/conda-envs/main/lib/python3.8/site-packages/tarski/io/_fstrips/parser/parser.py\"\
    , line 2532, in predicate\n    self.match(fstripsParser.NAME)\n  File \"/home/projects/u7899572/conda-envs/main/lib/python3.8/site-packages/antlr4/Parser.py\"\
    , line 118, in match\n    t = self._errHandler.recoverInline(self)\n  File \"\
    /home/projects/u7899572/conda-envs/main/lib/python3.8/site-packages/antlr4/error/ErrorStrategy.py\"\
    , line 396, in recoverInline\n    raise InputMismatchException(recognizer)\nantlr4.error.Errors.InputMismatchException:\
    \ None\n\nDuring handling of the above exception, another exception occurred:\n\
    \nTraceback (most recent call last):\n  File \"instance_solver.py\", line 85,\
    \ in solve_instance\n    searcher.find_path(logger=logger, log_interval=log_interval)\n\
    \  File \"/home/remote/u7899572/lifted-white-plan-domain-repair/search_partial_grounding/search_algorithms.py\"\
    , line 90, in find_path\n    neighbours = current_node.get_neighbors()\n  File\
    \ \"/home/remote/u7899572/lifted-white-plan-domain-repair/search_partial_grounding/node.py\"\
    , line 163, in get_neighbors\n    self.possible_groundings = Node.grounder(domain,\
    \ task, next_action_pddl)\n  File \"/home/remote/u7899572/lifted-white-plan-domain-repair/search_partial_grounding/lifted_pddl_grounder.py\"\
    , line 145, in ground_pddl\n    parser.parse_domain(domain_path)\n  File \"/home/projects/u7899572/conda-envs/main/lib/python3.8/site-packages/lifted_pddl/parser.py\"\
    , line 68, in parse_domain\n    self._reader.parse_domain(domain_path)\n  File\
    \ \"/home/projects/u7899572/conda-envs/main/lib/python3.8/site-packages/tarski/io/fstrips.py\"\
    , line 58, in parse_domain\n    self.parse_file(filename, 'domain')\n  File \"\
    /home/projects/u7899572/conda-envs/main/lib/python3.8/site-packages/tarski/io/fstrips.py\"\
    , line 54, in parse_file\n    domain_parse_tree, _ = self.parser.parse_file(filename,\
    \ start_rule)\n  File \"/home/projects/u7899572/conda-envs/main/lib/python3.8/site-packages/tarski/io/_fstrips/reader.py\"\
    , line 43, in parse_file\n    return self._parse_stream(stream, start_rule)\n\
    \  File \"/home/projects/u7899572/conda-envs/main/lib/python3.8/site-packages/tarski/io/_fstrips/reader.py\"\
    , line 51, in _parse_stream\n    tree = getattr(parser, start_rule)()\n  File\
    \ \"/home/projects/u7899572/conda-envs/main/lib/python3.8/site-packages/tarski/io/_fstrips/parser/parser.py\"\
    , line 868, in domain\n    self.structureDef()\n  File \"/home/projects/u7899572/conda-envs/main/lib/python3.8/site-packages/tarski/io/_fstrips/parser/parser.py\"\
    , line 2639, in structureDef\n    self.actionDef()\n  File \"/home/projects/u7899572/conda-envs/main/lib/python3.8/site-packages/tarski/io/_fstrips/parser/parser.py\"\
    , line 2731, in actionDef\n    self.actionDefBody()\n  File \"/home/projects/u7899572/conda-envs/main/lib/python3.8/site-packages/tarski/io/_fstrips/parser/parser.py\"\
    , line 3090, in actionDefBody\n    self.effect()\n  File \"/home/projects/u7899572/conda-envs/main/lib/python3.8/site-packages/tarski/io/_fstrips/parser/parser.py\"\
    , line 4181, in effect\n    self.single_effect()\n  File \"/home/projects/u7899572/conda-envs/main/lib/python3.8/site-packages/tarski/io/_fstrips/parser/parser.py\"\
    , line 4419, in single_effect\n    self.atomic_effect()\n  File \"/home/projects/u7899572/conda-envs/main/lib/python3.8/site-packages/tarski/io/_fstrips/parser/parser.py\"\
    , line 4605, in atomic_effect\n    self.atomicTermFormula()\n  File \"/home/projects/u7899572/conda-envs/main/lib/python3.8/site-packages/tarski/io/_fstrips/parser/parser.py\"\
    , line 3641, in atomicTermFormula\n    self.predicate()\n  File \"/home/projects/u7899572/conda-envs/main/lib/python3.8/site-packages/tarski/io/_fstrips/parser/parser.py\"\
    , line 2535, in predicate\n    self._errHandler.reportError(self, re)\n  File\
    \ \"/home/projects/u7899572/conda-envs/main/lib/python3.8/site-packages/antlr4/error/ErrorStrategy.py\"\
    , line 126, in reportError\n    self.reportInputMismatch(recognizer, e)\n  File\
    \ \"/home/projects/u7899572/conda-envs/main/lib/python3.8/site-packages/antlr4/error/ErrorStrategy.py\"\
    , line 264, in reportInputMismatch\n    recognizer.notifyErrorListeners(msg, e.offendingToken,\
    \ e)\n  File \"/home/projects/u7899572/conda-envs/main/lib/python3.8/site-packages/antlr4/Parser.py\"\
    , line 314, in notifyErrorListeners\n    listener.syntaxError(self, offendingToken,\
    \ line, column, msg, e)\n  File \"/home/projects/u7899572/conda-envs/main/lib/python3.8/site-packages/antlr4/error/ErrorListener.py\"\
    , line 60, in syntaxError\n    delegate.syntaxError(recognizer, offendingSymbol,\
    \ line, column, msg, e)\n  File \"/home/projects/u7899572/conda-envs/main/lib/python3.8/site-packages/tarski/io/_fstrips/reader.py\"\
    , line 505, in syntaxError\n    raise ParsingError(msg)\ntarski.io._fstrips.reader.ParsingError:\
    \ line 43:8 mismatched input '=' expecting NAME\n"


---
timestamp: '2025-01-02T03:08:37.405892'
level: INFO
issuer: instance_solver
event_type: timer_seconds
data: '1.89'


