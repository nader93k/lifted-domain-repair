---
timestamp: '2025-01-02T03:05:10.442462'
level: INFO
issuer: instance_solver
event_type: metadata
data:
    log_file: exp_logs_anu/00 all/mystery__pprob15-err-rate-0-5.yaml
    instance_id: mystery__pprob15-err-rate-0-5
    search_algorithm: bfs
    plan_length: 6
    domain_class: mystery
    instance_name: pprob15-err-rate-0-5
    ground_plan:
    - (overcome jealousy satisfaction pistachio neptune earth)
    - (feast satisfaction pistachio broccoli surrey moravia)
    - (feast satisfaction broccoli lemon surrey moravia)
    - (feast satisfaction lemon cod bavaria alsace)
    - (feast satisfaction cod chicken pennsylvania quebec)
    - (succumb jealousy satisfaction chicken neptune earth)
    lifted_plan:
    -   - overcome
        - ?jealousy
        - ?satisfaction
        - ?pistachio
        - ?neptune
        - ?earth
    -   - feast
        - ?satisfaction
        - ?pistachio
        - ?broccoli
        - ?surrey
        - ?moravia
    -   - feast
        - ?satisfaction
        - ?broccoli
        - ?lemon
        - ?surrey
        - ?moravia
    -   - feast
        - ?satisfaction
        - ?lemon
        - ?cod
        - ?bavaria
        - ?alsace
    -   - feast
        - ?satisfaction
        - ?cod
        - ?chicken
        - ?pennsylvania
        - ?quebec
    -   - succumb
        - ?jealousy
        - ?satisfaction
        - ?chicken
        - ?neptune
        - ?earth


---
timestamp: '2025-01-02T03:05:10.446342'
level: INFO
issuer: instance_solver
event_type: ground_repair
data:
    repair_length: 0
    repair: ''


---
timestamp: '2025-01-02T03:05:10.477590'
level: ERROR
issuer: node
event_type: error
data:
    current_node:
        depth: 0
        ground_actions: []
        repair_set: null
        g_cost: 0
        h_cost: 0
        f_cost: 0
        next_lifted_action: '[''overcome'', ''?jealousy'', ''?satisfaction'', ''?pistachio'',
            ''?neptune'', ''?earth'']'
        num_neighbours: 0
        first_10_possible_groundings: null
        current_state: '''(craves angina chicken)'', ''(attacks arizona manitoba)'',
            ''(pleasure satisfaction)'', ''(pain angina)'', ''(eats haroset onion)'',
            ''(food pea)'', ''(pain hangover)'', ''(food cod)'', ''(planet earth)'',
            ''(eats chicken cod)'', ''(pain jealousy)'', ''(locale chicken manitoba)'',
            ''(eats cod lemon)'', ''(locale lamb arizona)'', ''(pain boils)'', ''(food
            cucumber)'', ''(attacks oregon goias)'', ''(craves lubricity okra)'',
            ''(locale onion goias)'', ''(province pennsylvania)'', ''(pleasure aesthetics)'',
            ''(pleasure empathy)'', ''(eats lemon broccoli)'', ''(pleasure learning)'',
            ''(craves stimulation lobster)'', ''(eats cod lamb)'', ''(planet uranus)'',
            ''(planet neptune)'', ''(eats lamb cantelope)'', ''(orbits neptune earth)'',
            ''(craves anger pea)'', ''(attacks surrey moravia)'', ''(eats cantelope
            chicken)'', ''(harmony satisfaction earth)'', ''(locale lobster alsace)'',
            ''(eats bacon ham)'', ''(locale pea bavaria)'', ''(pleasure stimulation)'',
            ''(craves prostatitis chicken)'', ''(attacks pennsylvania quebec)'', ''(pleasure
            understanding)'', ''(locale pistachio moravia)'', ''(pain laceration)'',
            ''(eats lamb chicken)'', ''(locale lemon alsace)'', ''(eats ham onion)'',
            ''(province quebec)'', ''(craves learning broccoli)'', ''(craves curiosity
            turkey)'', ''(food okra)'', ''(food onion)'', ''(province bavaria)'',
            ''(eats lemon cod)'', ''(eats cod chicken)'', ''(eats cantelope turkey)'',
            ''(attacks bavaria alsace)'', ''(pain anger)'', ''(pain grief)'', ''(harmony
            curiosity mars)'', ''(pain depression)'', ''(eats cucumber lobster)'',
            ''(harmony understanding mars)'', ''(food bacon)'', ''(eats haroset pepper)'',
            ''(eats chicken cantelope)'', ''(eats turkey pea)'', ''(pleasure lubricity)'',
            ''(province moravia)'', ''(locale pepper surrey)'', ''(locale cod quebec)'',
            ''(harmony satiety earth)'', ''(harmony empathy mars)'', ''(eats turkey
            cantelope)'', ''(pain loneliness)'', ''(harmony lubricity earth)'', ''(craves
            grief bacon)'', ''(planet mars)'', ''(eats okra pistachio)'', ''(locale
            turkey goias)'', ''(province manitoba)'', ''(attacks bosnia pennsylvania)'',
            ''(province bosnia)'', ''(pleasure satiety)'', ''(craves anxiety turkey)'',
            ''(locale cucumber surrey)'', ''(eats pistachio broccoli)'', ''(food pepper)'',
            ''(orbits uranus mars)'', ''(province goias)'', ''(food cantelope)'',
            ''(food ham)'', ''(craves jealousy pistachio)'', ''(craves laceration
            broccoli)'', ''(eats pistachio okra)'', ''(food turkey)'', ''(attacks
            goias surrey)'', ''(attacks moravia bavaria)'', ''(harmony expectation
            earth)'', ''(locale cantelope bavaria)'', ''(province alsace)'', ''(locale
            broccoli moravia)'', ''(craves hangover bacon)'', ''(eats broccoli pistachio)'',
            ''(province surrey)'', ''(eats cod pea)'', ''(eats pea cod)'', ''(craves
            dread onion)'', ''(craves satisfaction pistachio)'', ''(craves empathy
            onion)'', ''(pain dread)'', ''(craves entertainment pepper)'', ''(food
            chicken)'', ''(province arizona)'', ''(harmony stimulation neptune)'',
            ''(pleasure expectation)'', ''(attacks manitoba bosnia)'', ''(food pistachio)'',
            ''(locale okra moravia)'', ''(pain prostatitis)'', ''(food haroset)'',
            ''(craves understanding cod)'', ''(eats bacon pepper)'', ''(eats pepper
            haroset)'', ''(orbits mars neptune)'', ''(craves sciatica cucumber)'',
            ''(craves aesthetics cucumber)'', ''(food broccoli)'', ''(eats lamb cod)'',
            ''(pain sciatica)'', ''(food lobster)'', ''(province oregon)'', ''(eats
            chicken lamb)'', ''(eats broccoli lemon)'', ''(eats lemon haroset)'',
            ''(harmony entertainment mars)'', ''(pain anxiety)'', ''(locale bacon
            bavaria)'', ''(eats lobster ham)'', ''(eats okra cucumber)'', ''(eats
            ham bacon)'', ''(eats lobster cucumber)'', ''(eats onion haroset)'', ''(craves
            loneliness lobster)'', ''(food lemon)'', ''(pleasure entertainment)'',
            ''(harmony learning neptune)'', ''(craves expectation lamb)'', ''(locale
            haroset moravia)'', ''(locale ham arizona)'', ''(harmony aesthetics earth)'',
            ''(craves satiety haroset)'', ''(craves boils pea)'', ''(eats pea turkey)'',
            ''(pleasure curiosity)'', ''(food lamb)'', ''(eats onion ham)'', ''(attacks
            alsace arizona)'', ''(eats cantelope lamb)'', ''(craves depression broccoli)'',
            ''(eats ham lobster)'', ''(eats pepper bacon)'', ''(eats cucumber okra)'',
            ''(eats haroset lemon)'''


---
timestamp: '2025-01-02T03:05:10.488892'
level: ERROR
issuer: instance_solver
event_type: error
data: "An error occurred during A* search: line 43:8 mismatched input '=' expecting\
    \ NAME. Stack trace: Traceback (most recent call last):\n  File \"/home/projects/u7899572/conda-envs/main/lib/python3.8/site-packages/tarski/io/_fstrips/parser/parser.py\"\
    , line 2532, in predicate\n    self.match(fstripsParser.NAME)\n  File \"/home/projects/u7899572/conda-envs/main/lib/python3.8/site-packages/antlr4/Parser.py\"\
    , line 118, in match\n    t = self._errHandler.recoverInline(self)\n  File \"\
    /home/projects/u7899572/conda-envs/main/lib/python3.8/site-packages/antlr4/error/ErrorStrategy.py\"\
    , line 396, in recoverInline\n    raise InputMismatchException(recognizer)\nantlr4.error.Errors.InputMismatchException:\
    \ None\n\nDuring handling of the above exception, another exception occurred:\n\
    \nTraceback (most recent call last):\n  File \"instance_solver.py\", line 85,\
    \ in solve_instance\n    searcher.find_path(logger=logger, log_interval=log_interval)\n\
    \  File \"/home/remote/u7899572/lifted-white-plan-domain-repair/search_partial_grounding/search_algorithms.py\"\
    , line 90, in find_path\n    neighbours = current_node.get_neighbors()\n  File\
    \ \"/home/remote/u7899572/lifted-white-plan-domain-repair/search_partial_grounding/node.py\"\
    , line 163, in get_neighbors\n    self.possible_groundings = Node.grounder(domain,\
    \ task, next_action_pddl)\n  File \"/home/remote/u7899572/lifted-white-plan-domain-repair/search_partial_grounding/lifted_pddl_grounder.py\"\
    , line 145, in ground_pddl\n    parser.parse_domain(domain_path)\n  File \"/home/projects/u7899572/conda-envs/main/lib/python3.8/site-packages/lifted_pddl/parser.py\"\
    , line 68, in parse_domain\n    self._reader.parse_domain(domain_path)\n  File\
    \ \"/home/projects/u7899572/conda-envs/main/lib/python3.8/site-packages/tarski/io/fstrips.py\"\
    , line 58, in parse_domain\n    self.parse_file(filename, 'domain')\n  File \"\
    /home/projects/u7899572/conda-envs/main/lib/python3.8/site-packages/tarski/io/fstrips.py\"\
    , line 54, in parse_file\n    domain_parse_tree, _ = self.parser.parse_file(filename,\
    \ start_rule)\n  File \"/home/projects/u7899572/conda-envs/main/lib/python3.8/site-packages/tarski/io/_fstrips/reader.py\"\
    , line 43, in parse_file\n    return self._parse_stream(stream, start_rule)\n\
    \  File \"/home/projects/u7899572/conda-envs/main/lib/python3.8/site-packages/tarski/io/_fstrips/reader.py\"\
    , line 51, in _parse_stream\n    tree = getattr(parser, start_rule)()\n  File\
    \ \"/home/projects/u7899572/conda-envs/main/lib/python3.8/site-packages/tarski/io/_fstrips/parser/parser.py\"\
    , line 868, in domain\n    self.structureDef()\n  File \"/home/projects/u7899572/conda-envs/main/lib/python3.8/site-packages/tarski/io/_fstrips/parser/parser.py\"\
    , line 2639, in structureDef\n    self.actionDef()\n  File \"/home/projects/u7899572/conda-envs/main/lib/python3.8/site-packages/tarski/io/_fstrips/parser/parser.py\"\
    , line 2731, in actionDef\n    self.actionDefBody()\n  File \"/home/projects/u7899572/conda-envs/main/lib/python3.8/site-packages/tarski/io/_fstrips/parser/parser.py\"\
    , line 3090, in actionDefBody\n    self.effect()\n  File \"/home/projects/u7899572/conda-envs/main/lib/python3.8/site-packages/tarski/io/_fstrips/parser/parser.py\"\
    , line 4181, in effect\n    self.single_effect()\n  File \"/home/projects/u7899572/conda-envs/main/lib/python3.8/site-packages/tarski/io/_fstrips/parser/parser.py\"\
    , line 4419, in single_effect\n    self.atomic_effect()\n  File \"/home/projects/u7899572/conda-envs/main/lib/python3.8/site-packages/tarski/io/_fstrips/parser/parser.py\"\
    , line 4605, in atomic_effect\n    self.atomicTermFormula()\n  File \"/home/projects/u7899572/conda-envs/main/lib/python3.8/site-packages/tarski/io/_fstrips/parser/parser.py\"\
    , line 3641, in atomicTermFormula\n    self.predicate()\n  File \"/home/projects/u7899572/conda-envs/main/lib/python3.8/site-packages/tarski/io/_fstrips/parser/parser.py\"\
    , line 2535, in predicate\n    self._errHandler.reportError(self, re)\n  File\
    \ \"/home/projects/u7899572/conda-envs/main/lib/python3.8/site-packages/antlr4/error/ErrorStrategy.py\"\
    , line 126, in reportError\n    self.reportInputMismatch(recognizer, e)\n  File\
    \ \"/home/projects/u7899572/conda-envs/main/lib/python3.8/site-packages/antlr4/error/ErrorStrategy.py\"\
    , line 264, in reportInputMismatch\n    recognizer.notifyErrorListeners(msg, e.offendingToken,\
    \ e)\n  File \"/home/projects/u7899572/conda-envs/main/lib/python3.8/site-packages/antlr4/Parser.py\"\
    , line 314, in notifyErrorListeners\n    listener.syntaxError(self, offendingToken,\
    \ line, column, msg, e)\n  File \"/home/projects/u7899572/conda-envs/main/lib/python3.8/site-packages/antlr4/error/ErrorListener.py\"\
    , line 60, in syntaxError\n    delegate.syntaxError(recognizer, offendingSymbol,\
    \ line, column, msg, e)\n  File \"/home/projects/u7899572/conda-envs/main/lib/python3.8/site-packages/tarski/io/_fstrips/reader.py\"\
    , line 505, in syntaxError\n    raise ParsingError(msg)\ntarski.io._fstrips.reader.ParsingError:\
    \ line 43:8 mismatched input '=' expecting NAME\n"


---
timestamp: '2025-01-02T03:05:10.492462'
level: INFO
issuer: instance_solver
event_type: timer_seconds
data: '1.61'


