---
timestamp: '2025-01-02T04:52:42.057338'
level: INFO
issuer: instance_solver
event_type: metadata
data:
    log_file: exp_logs_anu/00 all/mprime__pprob05-err-rate-0-3.yaml
    instance_id: mprime__pprob05-err-rate-0-3
    search_algorithm: bfs
    plan_length: 14
    domain_class: mprime
    instance_name: pprob05-err-rate-0-3
    ground_plan:
    - (overcome grief satisfaction broccoli mercury earth)
    - (feast satisfaction broccoli chocolate goias arizona)
    - (feast satisfaction chocolate shrimp kentucky goias)
    - (succumb grief satisfaction shrimp mercury earth)
    - (feast satisfaction shrimp cherry alsace kentucky)
    - (feast satisfaction cherry scallop alsace kentucky)
    - (drink tuna sweetroll arizona goias kentucky alsace kentucky)
    - (feast lubricity sweetroll shrimp alsace kentucky)
    - (overcome loneliness satisfaction scallop mercury earth)
    - (drink tuna scallop goias kentucky alsace alsace kentucky)
    - (feast satisfaction scallop sweetroll alsace kentucky)
    - (drink broccoli sweetroll goias kentucky alsace alsace kentucky)
    - (feast satisfaction sweetroll shrimp alsace kentucky)
    - (succumb loneliness satisfaction shrimp mercury earth)
    lifted_plan:
    -   - overcome
        - ?grief
        - ?satisfaction
        - ?broccoli
        - ?mercury
        - ?earth
    -   - feast
        - ?satisfaction
        - ?broccoli
        - ?chocolate
        - ?goias
        - ?arizona
    -   - feast
        - ?satisfaction
        - ?chocolate
        - ?shrimp
        - ?kentucky
        - ?goias
    -   - succumb
        - ?grief
        - ?satisfaction
        - ?shrimp
        - ?mercury
        - ?earth
    -   - feast
        - ?satisfaction
        - ?shrimp
        - ?cherry
        - ?alsace
        - ?kentucky
    -   - feast
        - ?satisfaction
        - ?cherry
        - ?scallop
        - ?alsace
        - ?kentucky
    -   - drink
        - ?tuna
        - ?sweetroll
        - ?arizona
        - ?goias
        - ?kentucky
        - ?alsace
        - ?kentucky
    -   - feast
        - ?lubricity
        - ?sweetroll
        - ?shrimp
        - ?alsace
        - ?kentucky
    -   - overcome
        - ?loneliness
        - ?satisfaction
        - ?scallop
        - ?mercury
        - ?earth
    -   - drink
        - ?tuna
        - ?scallop
        - ?goias
        - ?kentucky
        - ?alsace
        - ?alsace
        - ?kentucky
    -   - feast
        - ?satisfaction
        - ?scallop
        - ?sweetroll
        - ?alsace
        - ?kentucky
    -   - drink
        - ?broccoli
        - ?sweetroll
        - ?goias
        - ?kentucky
        - ?alsace
        - ?alsace
        - ?kentucky
    -   - feast
        - ?satisfaction
        - ?sweetroll
        - ?shrimp
        - ?alsace
        - ?kentucky
    -   - succumb
        - ?loneliness
        - ?satisfaction
        - ?shrimp
        - ?mercury
        - ?earth


---
timestamp: '2025-01-02T04:52:42.062164'
level: INFO
issuer: instance_solver
event_type: ground_repair
data:
    repair_length: 0
    repair: ''


---
timestamp: '2025-01-02T04:52:42.098622'
level: ERROR
issuer: node
event_type: error
data:
    current_node:
        depth: 0
        ground_actions: []
        repair_set: null
        g_cost: 0
        h_cost: 0
        f_cost: 0
        next_lifted_action: '[''overcome'', ''?grief'', ''?satisfaction'', ''?broccoli'',
            ''?mercury'', ''?earth'']'
        num_neighbours: 0
        first_10_possible_groundings: null
        current_state: '''(craves depression turkey)'', ''(food turkey)'', ''(pleasure
            lubricity)'', ''(province goias)'', ''(eats sweetroll shrimp)'', ''(food
            chocolate)'', ''(locale scallop alsace)'', ''(harmony lubricity earth)'',
            ''(pain anxiety)'', ''(pain loneliness)'', ''(harmony excitement mars)'',
            ''(eats sweetroll scallop)'', ''(province kentucky)'', ''(eats chocolate
            broccoli)'', ''(pain hangover)'', ''(food tuna)'', ''(pain sciatica)'',
            ''(planet uranus)'', ''(pleasure excitement)'', ''(craves intoxication
            tuna)'', ''(attacks goias arizona)'', ''(orbits uranus mercury)'', ''(food
            shrimp)'', ''(pain boils)'', ''(eats shrimp sweetroll)'', ''(eats shrimp
            chocolate)'', ''(province alsace)'', ''(craves grief broccoli)'', ''(attacks
            alsace kentucky)'', ''(eats chocolate shrimp)'', ''(eats shrimp cherry)'',
            ''(craves hangover scallop)'', ''(pleasure intoxication)'', ''(craves
            excitement turkey)'', ''(pain anger)'', ''(food scallop)'', ''(craves
            dread scallop)'', ''(eats tuna turkey)'', ''(pain grief-2)'', ''(pain
            abrasion)'', ''(eats broccoli chocolate)'', ''(harmony intoxication earth)'',
            ''(craves prostatitis turkey)'', ''(province arizona)'', ''(craves grief-2
            scallop)'', ''(craves boils broccoli)'', ''(harmony satisfaction earth)'',
            ''(locale turkey kentucky)'', ''(food broccoli)'', ''(craves lubricity
            sweetroll)'', ''(planet earth)'', ''(eats cherry shrimp)'', ''(craves
            anger cherry)'', ''(pain grief)'', ''(pain angina)'', ''(attacks kentucky
            goias)'', ''(planet mercury)'', ''(food cherry)'', ''(eats broccoli tuna)'',
            ''(craves satisfaction broccoli)'', ''(planet mars)'', ''(pain prostatitis)'',
            ''(eats scallop cherry)'', ''(locale tuna arizona)'', ''(pain jealousy)'',
            ''(eats turkey chocolate)'', ''(eats chocolate turkey)'', ''(craves jealousy
            shrimp)'', ''(food sweetroll)'', ''(pleasure satisfaction)'', ''(pain
            dread)'', ''(pain laceration)'', ''(locale cherry kentucky)'', ''(eats
            cherry scallop)'', ''(craves sciatica broccoli)'', ''(eats scallop sweetroll)'',
            ''(craves abrasion turkey)'', ''(orbits earth mars)'', ''(craves laceration
            shrimp)'', ''(craves anxiety broccoli)'', ''(eats turkey tuna)'', ''(pain
            depression)'', ''(craves loneliness scallop)'', ''(craves angina shrimp)'',
            ''(locale sweetroll alsace)'', ''(orbits mercury earth)'', ''(locale broccoli
            arizona)'', ''(eats tuna broccoli)'', ''(locale shrimp kentucky)'', ''(locale
            chocolate goias)'''


---
timestamp: '2025-01-02T04:52:42.109171'
level: ERROR
issuer: instance_solver
event_type: error
data: "An error occurred during A* search: line 43:8 mismatched input '=' expecting\
    \ NAME. Stack trace: Traceback (most recent call last):\n  File \"/home/projects/u7899572/conda-envs/main/lib/python3.8/site-packages/tarski/io/_fstrips/parser/parser.py\"\
    , line 2532, in predicate\n    self.match(fstripsParser.NAME)\n  File \"/home/projects/u7899572/conda-envs/main/lib/python3.8/site-packages/antlr4/Parser.py\"\
    , line 118, in match\n    t = self._errHandler.recoverInline(self)\n  File \"\
    /home/projects/u7899572/conda-envs/main/lib/python3.8/site-packages/antlr4/error/ErrorStrategy.py\"\
    , line 396, in recoverInline\n    raise InputMismatchException(recognizer)\nantlr4.error.Errors.InputMismatchException:\
    \ None\n\nDuring handling of the above exception, another exception occurred:\n\
    \nTraceback (most recent call last):\n  File \"instance_solver.py\", line 85,\
    \ in solve_instance\n    searcher.find_path(logger=logger, log_interval=log_interval)\n\
    \  File \"/home/remote/u7899572/lifted-white-plan-domain-repair/search_partial_grounding/search_algorithms.py\"\
    , line 90, in find_path\n    neighbours = current_node.get_neighbors()\n  File\
    \ \"/home/remote/u7899572/lifted-white-plan-domain-repair/search_partial_grounding/node.py\"\
    , line 163, in get_neighbors\n    self.possible_groundings = Node.grounder(domain,\
    \ task, next_action_pddl)\n  File \"/home/remote/u7899572/lifted-white-plan-domain-repair/search_partial_grounding/lifted_pddl_grounder.py\"\
    , line 145, in ground_pddl\n    parser.parse_domain(domain_path)\n  File \"/home/projects/u7899572/conda-envs/main/lib/python3.8/site-packages/lifted_pddl/parser.py\"\
    , line 68, in parse_domain\n    self._reader.parse_domain(domain_path)\n  File\
    \ \"/home/projects/u7899572/conda-envs/main/lib/python3.8/site-packages/tarski/io/fstrips.py\"\
    , line 58, in parse_domain\n    self.parse_file(filename, 'domain')\n  File \"\
    /home/projects/u7899572/conda-envs/main/lib/python3.8/site-packages/tarski/io/fstrips.py\"\
    , line 54, in parse_file\n    domain_parse_tree, _ = self.parser.parse_file(filename,\
    \ start_rule)\n  File \"/home/projects/u7899572/conda-envs/main/lib/python3.8/site-packages/tarski/io/_fstrips/reader.py\"\
    , line 43, in parse_file\n    return self._parse_stream(stream, start_rule)\n\
    \  File \"/home/projects/u7899572/conda-envs/main/lib/python3.8/site-packages/tarski/io/_fstrips/reader.py\"\
    , line 51, in _parse_stream\n    tree = getattr(parser, start_rule)()\n  File\
    \ \"/home/projects/u7899572/conda-envs/main/lib/python3.8/site-packages/tarski/io/_fstrips/parser/parser.py\"\
    , line 868, in domain\n    self.structureDef()\n  File \"/home/projects/u7899572/conda-envs/main/lib/python3.8/site-packages/tarski/io/_fstrips/parser/parser.py\"\
    , line 2639, in structureDef\n    self.actionDef()\n  File \"/home/projects/u7899572/conda-envs/main/lib/python3.8/site-packages/tarski/io/_fstrips/parser/parser.py\"\
    , line 2731, in actionDef\n    self.actionDefBody()\n  File \"/home/projects/u7899572/conda-envs/main/lib/python3.8/site-packages/tarski/io/_fstrips/parser/parser.py\"\
    , line 3090, in actionDefBody\n    self.effect()\n  File \"/home/projects/u7899572/conda-envs/main/lib/python3.8/site-packages/tarski/io/_fstrips/parser/parser.py\"\
    , line 4181, in effect\n    self.single_effect()\n  File \"/home/projects/u7899572/conda-envs/main/lib/python3.8/site-packages/tarski/io/_fstrips/parser/parser.py\"\
    , line 4419, in single_effect\n    self.atomic_effect()\n  File \"/home/projects/u7899572/conda-envs/main/lib/python3.8/site-packages/tarski/io/_fstrips/parser/parser.py\"\
    , line 4605, in atomic_effect\n    self.atomicTermFormula()\n  File \"/home/projects/u7899572/conda-envs/main/lib/python3.8/site-packages/tarski/io/_fstrips/parser/parser.py\"\
    , line 3641, in atomicTermFormula\n    self.predicate()\n  File \"/home/projects/u7899572/conda-envs/main/lib/python3.8/site-packages/tarski/io/_fstrips/parser/parser.py\"\
    , line 2535, in predicate\n    self._errHandler.reportError(self, re)\n  File\
    \ \"/home/projects/u7899572/conda-envs/main/lib/python3.8/site-packages/antlr4/error/ErrorStrategy.py\"\
    , line 126, in reportError\n    self.reportInputMismatch(recognizer, e)\n  File\
    \ \"/home/projects/u7899572/conda-envs/main/lib/python3.8/site-packages/antlr4/error/ErrorStrategy.py\"\
    , line 264, in reportInputMismatch\n    recognizer.notifyErrorListeners(msg, e.offendingToken,\
    \ e)\n  File \"/home/projects/u7899572/conda-envs/main/lib/python3.8/site-packages/antlr4/Parser.py\"\
    , line 314, in notifyErrorListeners\n    listener.syntaxError(self, offendingToken,\
    \ line, column, msg, e)\n  File \"/home/projects/u7899572/conda-envs/main/lib/python3.8/site-packages/antlr4/error/ErrorListener.py\"\
    , line 60, in syntaxError\n    delegate.syntaxError(recognizer, offendingSymbol,\
    \ line, column, msg, e)\n  File \"/home/projects/u7899572/conda-envs/main/lib/python3.8/site-packages/tarski/io/_fstrips/reader.py\"\
    , line 505, in syntaxError\n    raise ParsingError(msg)\ntarski.io._fstrips.reader.ParsingError:\
    \ line 43:8 mismatched input '=' expecting NAME\n"


---
timestamp: '2025-01-02T04:52:42.112596'
level: INFO
issuer: instance_solver
event_type: timer_seconds
data: '2.79'


