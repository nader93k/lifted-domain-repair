---
timestamp: '2025-01-02T02:35:17.745125'
level: INFO
issuer: instance_solver
event_type: metadata
data:
    log_file: exp_logs_anu/00 all/mprime__pprob08-err-rate-0-1.yaml
    instance_id: mprime__pprob08-err-rate-0-1
    search_algorithm: bfs
    plan_length: 7
    domain_class: mprime
    instance_name: pprob08-err-rate-0-1
    ground_plan:
    - (feast love okra tuna pennsylvania bosnia)
    - (overcome anxiety stimulation muffin earth uranus)
    - (drink okra muffin pennsylvania goias bavaria bavaria goias)
    - (feast stimulation muffin tuna bavaria goias)
    - (feast stimulation tuna okra bosnia surrey)
    - (feast stimulation okra wonderbread bavaria goias)
    - (succumb anxiety stimulation wonderbread earth uranus)
    lifted_plan:
    -   - feast
        - ?love
        - ?okra
        - ?tuna
        - ?pennsylvania
        - ?bosnia
    -   - overcome
        - ?anxiety
        - ?stimulation
        - ?muffin
        - ?earth
        - ?uranus
    -   - drink
        - ?okra
        - ?muffin
        - ?pennsylvania
        - ?goias
        - ?bavaria
        - ?bavaria
        - ?goias
    -   - feast
        - ?stimulation
        - ?muffin
        - ?tuna
        - ?bavaria
        - ?goias
    -   - feast
        - ?stimulation
        - ?tuna
        - ?okra
        - ?bosnia
        - ?surrey
    -   - feast
        - ?stimulation
        - ?okra
        - ?wonderbread
        - ?bavaria
        - ?goias
    -   - succumb
        - ?anxiety
        - ?stimulation
        - ?wonderbread
        - ?earth
        - ?uranus


---
timestamp: '2025-01-02T02:35:17.749010'
level: INFO
issuer: instance_solver
event_type: ground_repair
data:
    repair_length: 0
    repair: ''


---
timestamp: '2025-01-02T02:35:17.778483'
level: ERROR
issuer: node
event_type: error
data:
    current_node:
        depth: 0
        ground_actions: []
        repair_set: null
        g_cost: 0
        h_cost: 0
        f_cost: 0
        next_lifted_action: '[''feast'', ''?love'', ''?okra'', ''?tuna'', ''?pennsylvania'',
            ''?bosnia'']'
        num_neighbours: 0
        first_10_possible_groundings: null
        current_state: '''(eats wonderbread flounder)'', ''(pleasure lubricity)'',
            ''(locale scallop pennsylvania)'', ''(eats pork cantelope)'', ''(locale
            pepper goias)'', ''(food turkey)'', ''(harmony stimulation uranus)'',
            ''(harmony aesthetics vulcan)'', ''(eats tofu muffin)'', ''(planet earth)'',
            ''(locale tofu goias)'', ''(pleasure learning)'', ''(locale pistachio
            pennsylvania)'', ''(eats pistachio arugula)'', ''(province goias)'', ''(food
            pork)'', ''(harmony love jupiter)'', ''(eats arugula pistachio)'', ''(eats
            pepper pistachio)'', ''(locale wonderbread goias)'', ''(eats tofu hotdog)'',
            ''(eats tuna muffin)'', ''(pleasure excitement)'', ''(eats tomato baguette)'',
            ''(pleasure stimulation)'', ''(craves excitement tomato)'', ''(eats okra
            wonderbread)'', ''(craves love okra)'', ''(eats okra tuna)'', ''(orbits
            vulcan jupiter)'', ''(pain abrasion)'', ''(harmony excitement jupiter)'',
            ''(eats lobster flounder)'', ''(eats hotdog tofu)'', ''(attacks bosnia
            surrey)'', ''(province bavaria)'', ''(attacks bavaria goias)'', ''(eats
            tomato scallop)'', ''(craves anxiety muffin)'', ''(harmony lubricity uranus)'',
            ''(planet uranus)'', ''(eats scallop wonderbread)'', ''(food arugula)'',
            ''(locale tomato bosnia)'', ''(food hotdog)'', ''(craves sciatica okra)'',
            ''(pleasure aesthetics)'', ''(food tuna)'', ''(pain sciatica)'', ''(craves
            lubricity arugula)'', ''(attacks goias pennsylvania)'', ''(province bosnia)'',
            ''(eats pork lobster)'', ''(food flounder)'', ''(eats tuna rice)'', ''(food
            muffin)'', ''(craves abrasion baguette)'', ''(eats scallop tomato)'',
            ''(craves stimulation muffin)'', ''(food tomato)'', ''(eats turkey pepper)'',
            ''(eats hotdog okra)'', ''(eats muffin tofu)'', ''(craves triumph hotdog)'',
            ''(harmony learning vulcan)'', ''(pain hangover)'', ''(food pistachio)'',
            ''(eats cantelope pork)'', ''(locale pork bosnia)'', ''(eats tuna okra)'',
            ''(craves hangover muffin)'', ''(eats pistachio pepper)'', ''(eats flounder
            lobster)'', ''(craves anger baguette)'', ''(food cantelope)'', ''(eats
            baguette turkey)'', ''(eats arugula cantelope)'', ''(food tofu)'', ''(eats
            muffin rice)'', ''(food lobster)'', ''(locale rice bavaria)'', ''(harmony
            achievement vulcan)'', ''(food okra)'', ''(eats rice muffin)'', ''(eats
            pepper turkey)'', ''(locale okra bosnia)'', ''(harmony rest jupiter)'',
            ''(locale flounder goias)'', ''(orbits uranus vulcan)'', ''(locale tuna
            surrey)'', ''(eats lobster pork)'', ''(locale baguette bosnia)'', ''(locale
            turkey goias)'', ''(locale arugula bavaria)'', ''(eats baguette tomato)'',
            ''(locale cantelope pennsylvania)'', ''(eats wonderbread okra)'', ''(pleasure
            achievement)'', ''(eats cantelope arugula)'', ''(eats rice tuna)'', ''(locale
            muffin bavaria)'', ''(planet vulcan)'', ''(craves aesthetics scallop)'',
            ''(food wonderbread)'', ''(harmony triumph vulcan)'', ''(food pepper)'',
            ''(locale hotdog bavaria)'', ''(attacks pennsylvania bosnia)'', ''(pleasure
            rest)'', ''(eats turkey baguette)'', ''(eats wonderbread scallop)'', ''(craves
            learning cantelope)'', ''(locale lobster goias)'', ''(food baguette)'',
            ''(pain anxiety)'', ''(pain anger)'', ''(food scallop)'', ''(pleasure
            love)'', ''(orbits earth uranus)'', ''(eats okra hotdog)'', ''(food rice)'',
            ''(province surrey)'', ''(craves achievement rice)'', ''(pleasure triumph)'',
            ''(province pennsylvania)'', ''(eats rice tofu)'', ''(eats flounder wonderbread)'',
            ''(planet jupiter)'', ''(eats tofu rice)'', ''(eats muffin tuna)'', ''(craves
            rest wonderbread)'''


---
timestamp: '2025-01-02T02:35:17.783986'
level: ERROR
issuer: instance_solver
event_type: error
data: "An error occurred during A* search: line 41:3 no viable alternative at input\
    \ '(='. Stack trace: Traceback (most recent call last):\n  File \"/home/projects/u7899572/conda-envs/main/lib/python3.8/site-packages/tarski/io/_fstrips/parser/parser.py\"\
    , line 4351, in single_effect\n    la_ = self._interp.adaptivePredict(self._input,42,self._ctx)\n\
    \  File \"/home/projects/u7899572/conda-envs/main/lib/python3.8/site-packages/antlr4/atn/ParserATNSimulator.py\"\
    , line 342, in adaptivePredict\n    alt = self.execATN(dfa, s0, input, index,\
    \ outerContext)\n  File \"/home/projects/u7899572/conda-envs/main/lib/python3.8/site-packages/antlr4/atn/ParserATNSimulator.py\"\
    , line 414, in execATN\n    raise e\nantlr4.error.Errors.NoViableAltException:\
    \ None\n\nDuring handling of the above exception, another exception occurred:\n\
    \nTraceback (most recent call last):\n  File \"instance_solver.py\", line 85,\
    \ in solve_instance\n    searcher.find_path(logger=logger, log_interval=log_interval)\n\
    \  File \"/home/remote/u7899572/lifted-white-plan-domain-repair/search_partial_grounding/search_algorithms.py\"\
    , line 90, in find_path\n    neighbours = current_node.get_neighbors()\n  File\
    \ \"/home/remote/u7899572/lifted-white-plan-domain-repair/search_partial_grounding/node.py\"\
    , line 163, in get_neighbors\n    self.possible_groundings = Node.grounder(domain,\
    \ task, next_action_pddl)\n  File \"/home/remote/u7899572/lifted-white-plan-domain-repair/search_partial_grounding/lifted_pddl_grounder.py\"\
    , line 145, in ground_pddl\n    parser.parse_domain(domain_path)\n  File \"/home/projects/u7899572/conda-envs/main/lib/python3.8/site-packages/lifted_pddl/parser.py\"\
    , line 68, in parse_domain\n    self._reader.parse_domain(domain_path)\n  File\
    \ \"/home/projects/u7899572/conda-envs/main/lib/python3.8/site-packages/tarski/io/fstrips.py\"\
    , line 58, in parse_domain\n    self.parse_file(filename, 'domain')\n  File \"\
    /home/projects/u7899572/conda-envs/main/lib/python3.8/site-packages/tarski/io/fstrips.py\"\
    , line 54, in parse_file\n    domain_parse_tree, _ = self.parser.parse_file(filename,\
    \ start_rule)\n  File \"/home/projects/u7899572/conda-envs/main/lib/python3.8/site-packages/tarski/io/_fstrips/reader.py\"\
    , line 43, in parse_file\n    return self._parse_stream(stream, start_rule)\n\
    \  File \"/home/projects/u7899572/conda-envs/main/lib/python3.8/site-packages/tarski/io/_fstrips/reader.py\"\
    , line 51, in _parse_stream\n    tree = getattr(parser, start_rule)()\n  File\
    \ \"/home/projects/u7899572/conda-envs/main/lib/python3.8/site-packages/tarski/io/_fstrips/parser/parser.py\"\
    , line 868, in domain\n    self.structureDef()\n  File \"/home/projects/u7899572/conda-envs/main/lib/python3.8/site-packages/tarski/io/_fstrips/parser/parser.py\"\
    , line 2639, in structureDef\n    self.actionDef()\n  File \"/home/projects/u7899572/conda-envs/main/lib/python3.8/site-packages/tarski/io/_fstrips/parser/parser.py\"\
    , line 2731, in actionDef\n    self.actionDefBody()\n  File \"/home/projects/u7899572/conda-envs/main/lib/python3.8/site-packages/tarski/io/_fstrips/parser/parser.py\"\
    , line 3090, in actionDefBody\n    self.effect()\n  File \"/home/projects/u7899572/conda-envs/main/lib/python3.8/site-packages/tarski/io/_fstrips/parser/parser.py\"\
    , line 4181, in effect\n    self.single_effect()\n  File \"/home/projects/u7899572/conda-envs/main/lib/python3.8/site-packages/tarski/io/_fstrips/parser/parser.py\"\
    , line 4425, in single_effect\n    self._errHandler.reportError(self, re)\n  File\
    \ \"/home/projects/u7899572/conda-envs/main/lib/python3.8/site-packages/antlr4/error/ErrorStrategy.py\"\
    , line 124, in reportError\n    self.reportNoViableAlternative(recognizer, e)\n\
    \  File \"/home/projects/u7899572/conda-envs/main/lib/python3.8/site-packages/antlr4/error/ErrorStrategy.py\"\
    , line 250, in reportNoViableAlternative\n    recognizer.notifyErrorListeners(msg,\
    \ e.offendingToken, e)\n  File \"/home/projects/u7899572/conda-envs/main/lib/python3.8/site-packages/antlr4/Parser.py\"\
    , line 314, in notifyErrorListeners\n    listener.syntaxError(self, offendingToken,\
    \ line, column, msg, e)\n  File \"/home/projects/u7899572/conda-envs/main/lib/python3.8/site-packages/antlr4/error/ErrorListener.py\"\
    , line 60, in syntaxError\n    delegate.syntaxError(recognizer, offendingSymbol,\
    \ line, column, msg, e)\n  File \"/home/projects/u7899572/conda-envs/main/lib/python3.8/site-packages/tarski/io/_fstrips/reader.py\"\
    , line 505, in syntaxError\n    raise ParsingError(msg)\ntarski.io._fstrips.reader.ParsingError:\
    \ line 41:3 no viable alternative at input '(='\n"


---
timestamp: '2025-01-02T02:35:17.787100'
level: INFO
issuer: instance_solver
event_type: timer_seconds
data: '1.16'


