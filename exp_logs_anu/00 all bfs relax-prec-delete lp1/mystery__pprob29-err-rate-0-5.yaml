---
timestamp: '2025-01-02T02:20:06.947849'
level: INFO
issuer: instance_solver
event_type: metadata
data:
    log_file: exp_logs_anu/00 all/mystery__pprob29-err-rate-0-5.yaml
    instance_id: mystery__pprob29-err-rate-0-5
    search_algorithm: bfs
    plan_length: 4
    domain_class: mystery
    instance_name: pprob29-err-rate-0-5
    ground_plan:
    - (overcome jealousy excitement pork neptune uranus)
    - (feast excitement pork broccoli manitoba bavaria)
    - (feast excitement broccoli shrimp pennsylvania alsace)
    - (succumb jealousy excitement shrimp neptune uranus)
    lifted_plan:
    -   - overcome
        - ?jealousy
        - ?excitement
        - ?pork
        - ?neptune
        - ?uranus
    -   - feast
        - ?excitement
        - ?pork
        - ?broccoli
        - ?manitoba
        - ?bavaria
    -   - feast
        - ?excitement
        - ?broccoli
        - ?shrimp
        - ?pennsylvania
        - ?alsace
    -   - succumb
        - ?jealousy
        - ?excitement
        - ?shrimp
        - ?neptune
        - ?uranus


---
timestamp: '2025-01-02T02:20:06.950965'
level: INFO
issuer: instance_solver
event_type: ground_repair
data:
    repair_length: 0
    repair: ''


---
timestamp: '2025-01-02T02:20:07.129440'
level: ERROR
issuer: node
event_type: error
data:
    current_node:
        depth: 3
        ground_actions:
        - (overcome hangover achievement scallop neptune uranus)
        - (feast excitement pork pear manitoba bavaria)
        - (feast achievement scallop pork bavaria oregon)
        repair_set: ''
        g_cost: 0
        h_cost: 0
        f_cost: 0
        next_lifted_action: '[''succumb'', ''?jealousy'', ''?excitement'', ''?shrimp'',
            ''?neptune'', ''?uranus'']'
        num_neighbours: 0
        first_10_possible_groundings: null
        current_state: '''(attacks quebec manitoba)'', ''(province manitoba)'', ''(craves
            grief shrimp)'', ''(attacks manitoba bavaria)'', ''(food broccoli)'',
            ''(pain hangover)'', ''(craves excitement pear)'', ''(eats melon shrimp)'',
            ''(craves jealousy pork)'', ''(province moravia)'', ''(fears hangover
            achievement)'', ''(planet earth)'', ''(eats scallop melon)'', ''(eats
            shrimp broccoli)'', ''(craves hangover scallop)'', ''(locale shrimp kentucky)'',
            ''(attacks bavaria oregon)'', ''(eats pork scallop)'', ''(orbits neptune
            uranus)'', ''(harmony achievement uranus)'', ''(planet uranus)'', ''(locale
            pear arizona)'', ''(craves angina melon)'', ''(eats broccoli shrimp)'',
            ''(eats pear papaya)'', ''(eats pork pear)'', ''(orbits pluto neptune)'',
            ''(eats popover papaya)'', ''(locale papaya quebec)'', ''(locale pork
            manitoba)'', ''(pain sciatica)'', ''(locale broccoli alsace)'', ''(craves
            sciatica pork)'', ''(pain anger)'', ''(locale popover bavaria)'', ''(attacks
            oregon kentucky)'', ''(eats pork broccoli)'', ''(pain anxiety)'', ''(pain
            laceration)'', ''(craves abrasion papaya)'', ''(food shrimp)'', ''(harmony
            achievement neptune)'', ''(attacks alsace quebec)'', ''(province pennsylvania)'',
            ''(pain prostatitis)'', ''(province arizona)'', ''(craves boils broccoli)'',
            ''(pain angina)'', ''(food papaya)'', ''(food melon)'', ''(craves achievement
            scallop)'', ''(craves anger scallop)'', ''(craves achievement pork)'',
            ''(craves excitement pork)'', ''(attacks pennsylvania alsace)'', ''(attacks
            kentucky moravia)'', ''(province bavaria)'', ''(province kentucky)'',
            ''(eats shrimp melon)'', ''(planet pluto)'', ''(craves prostatitis shrimp)'',
            ''(eats melon scallop)'', ''(eats broccoli pork)'', ''(eats scallop pork)'',
            ''(eats pear pork)'', ''(pain jealousy)'', ''(attacks arizona pennsylvania)'',
            ''(eats papaya pear)'', ''(locale scallop bavaria)'', ''(province oregon)'',
            ''(orbits earth pluto)'', ''(pain boils)'', ''(pain grief)'', ''(craves
            laceration melon)'', ''(locale pork bavaria)'', ''(eats popover shrimp)'',
            ''(harmony excitement uranus)'', ''(eats papaya popover)'', ''(locale
            melon moravia)'', ''(province quebec)'', ''(eats shrimp popover)'', ''(pleasure
            excitement)'', ''(food scallop)'', ''(pain abrasion)'', ''(planet neptune)'',
            ''(food popover)'', ''(food pork)'', ''(province alsace)'', ''(locale
            scallop oregon)'', ''(pleasure achievement)'', ''(food pear)'', ''(craves
            anxiety melon)'''


---
timestamp: '2025-01-02T02:20:07.133513'
level: ERROR
issuer: instance_solver
event_type: error
data: "An error occurred during A* search: line 41:8 mismatched input '=' expecting\
    \ NAME. Stack trace: Traceback (most recent call last):\n  File \"/home/projects/u7899572/conda-envs/main/lib/python3.8/site-packages/tarski/io/_fstrips/parser/parser.py\"\
    , line 2532, in predicate\n    self.match(fstripsParser.NAME)\n  File \"/home/projects/u7899572/conda-envs/main/lib/python3.8/site-packages/antlr4/Parser.py\"\
    , line 118, in match\n    t = self._errHandler.recoverInline(self)\n  File \"\
    /home/projects/u7899572/conda-envs/main/lib/python3.8/site-packages/antlr4/error/ErrorStrategy.py\"\
    , line 396, in recoverInline\n    raise InputMismatchException(recognizer)\nantlr4.error.Errors.InputMismatchException:\
    \ None\n\nDuring handling of the above exception, another exception occurred:\n\
    \nTraceback (most recent call last):\n  File \"instance_solver.py\", line 85,\
    \ in solve_instance\n    searcher.find_path(logger=logger, log_interval=log_interval)\n\
    \  File \"/home/remote/u7899572/lifted-white-plan-domain-repair/search_partial_grounding/search_algorithms.py\"\
    , line 90, in find_path\n    neighbours = current_node.get_neighbors()\n  File\
    \ \"/home/remote/u7899572/lifted-white-plan-domain-repair/search_partial_grounding/node.py\"\
    , line 163, in get_neighbors\n    self.possible_groundings = Node.grounder(domain,\
    \ task, next_action_pddl)\n  File \"/home/remote/u7899572/lifted-white-plan-domain-repair/search_partial_grounding/lifted_pddl_grounder.py\"\
    , line 145, in ground_pddl\n    parser.parse_domain(domain_path)\n  File \"/home/projects/u7899572/conda-envs/main/lib/python3.8/site-packages/lifted_pddl/parser.py\"\
    , line 68, in parse_domain\n    self._reader.parse_domain(domain_path)\n  File\
    \ \"/home/projects/u7899572/conda-envs/main/lib/python3.8/site-packages/tarski/io/fstrips.py\"\
    , line 58, in parse_domain\n    self.parse_file(filename, 'domain')\n  File \"\
    /home/projects/u7899572/conda-envs/main/lib/python3.8/site-packages/tarski/io/fstrips.py\"\
    , line 54, in parse_file\n    domain_parse_tree, _ = self.parser.parse_file(filename,\
    \ start_rule)\n  File \"/home/projects/u7899572/conda-envs/main/lib/python3.8/site-packages/tarski/io/_fstrips/reader.py\"\
    , line 43, in parse_file\n    return self._parse_stream(stream, start_rule)\n\
    \  File \"/home/projects/u7899572/conda-envs/main/lib/python3.8/site-packages/tarski/io/_fstrips/reader.py\"\
    , line 51, in _parse_stream\n    tree = getattr(parser, start_rule)()\n  File\
    \ \"/home/projects/u7899572/conda-envs/main/lib/python3.8/site-packages/tarski/io/_fstrips/parser/parser.py\"\
    , line 868, in domain\n    self.structureDef()\n  File \"/home/projects/u7899572/conda-envs/main/lib/python3.8/site-packages/tarski/io/_fstrips/parser/parser.py\"\
    , line 2639, in structureDef\n    self.actionDef()\n  File \"/home/projects/u7899572/conda-envs/main/lib/python3.8/site-packages/tarski/io/_fstrips/parser/parser.py\"\
    , line 2731, in actionDef\n    self.actionDefBody()\n  File \"/home/projects/u7899572/conda-envs/main/lib/python3.8/site-packages/tarski/io/_fstrips/parser/parser.py\"\
    , line 3090, in actionDefBody\n    self.effect()\n  File \"/home/projects/u7899572/conda-envs/main/lib/python3.8/site-packages/tarski/io/_fstrips/parser/parser.py\"\
    , line 4181, in effect\n    self.single_effect()\n  File \"/home/projects/u7899572/conda-envs/main/lib/python3.8/site-packages/tarski/io/_fstrips/parser/parser.py\"\
    , line 4419, in single_effect\n    self.atomic_effect()\n  File \"/home/projects/u7899572/conda-envs/main/lib/python3.8/site-packages/tarski/io/_fstrips/parser/parser.py\"\
    , line 4605, in atomic_effect\n    self.atomicTermFormula()\n  File \"/home/projects/u7899572/conda-envs/main/lib/python3.8/site-packages/tarski/io/_fstrips/parser/parser.py\"\
    , line 3641, in atomicTermFormula\n    self.predicate()\n  File \"/home/projects/u7899572/conda-envs/main/lib/python3.8/site-packages/tarski/io/_fstrips/parser/parser.py\"\
    , line 2535, in predicate\n    self._errHandler.reportError(self, re)\n  File\
    \ \"/home/projects/u7899572/conda-envs/main/lib/python3.8/site-packages/antlr4/error/ErrorStrategy.py\"\
    , line 126, in reportError\n    self.reportInputMismatch(recognizer, e)\n  File\
    \ \"/home/projects/u7899572/conda-envs/main/lib/python3.8/site-packages/antlr4/error/ErrorStrategy.py\"\
    , line 264, in reportInputMismatch\n    recognizer.notifyErrorListeners(msg, e.offendingToken,\
    \ e)\n  File \"/home/projects/u7899572/conda-envs/main/lib/python3.8/site-packages/antlr4/Parser.py\"\
    , line 314, in notifyErrorListeners\n    listener.syntaxError(self, offendingToken,\
    \ line, column, msg, e)\n  File \"/home/projects/u7899572/conda-envs/main/lib/python3.8/site-packages/antlr4/error/ErrorListener.py\"\
    , line 60, in syntaxError\n    delegate.syntaxError(recognizer, offendingSymbol,\
    \ line, column, msg, e)\n  File \"/home/projects/u7899572/conda-envs/main/lib/python3.8/site-packages/tarski/io/_fstrips/reader.py\"\
    , line 505, in syntaxError\n    raise ParsingError(msg)\ntarski.io._fstrips.reader.ParsingError:\
    \ line 41:8 mismatched input '=' expecting NAME\n"


---
timestamp: '2025-01-02T02:20:07.136944'
level: INFO
issuer: instance_solver
event_type: timer_seconds
data: '1.31'


