---
timestamp: '2025-01-08T00:32:30.177249'
level: INFO
issuer: instance_solver
event_type: metadata
data:
    log_file: exp_logs_anu/bfs relax-all lp1-new/mprime__pprob16-err-rate-0-5.yaml
    instance_id: mprime__pprob16-err-rate-0-5
    search_algorithm: bfs
    plan_length: 7
    domain_class: mprime
    instance_name: pprob16-err-rate-0-5
    ground_plan:
    - (feast achievement rice bacon manitoba alsace)
    - (overcome abrasion learning baguette neptune vulcan)
    - (overcome sciatica learning baguette mercury neptune)
    - (drink chocolate baguette goias pennsylvania kentucky manitoba alsace)
    - (feast learning baguette rice manitoba alsace)
    - (succumb abrasion learning rice mercury neptune)
    - (succumb sciatica learning rice neptune vulcan)
    lifted_plan:
    -   - feast
        - ?achievement
        - ?rice
        - ?bacon
        - ?manitoba
        - ?alsace
    -   - overcome
        - ?abrasion
        - ?learning
        - ?baguette
        - ?neptune
        - ?vulcan
    -   - overcome
        - ?sciatica
        - ?learning
        - ?baguette
        - ?mercury
        - ?neptune
    -   - drink
        - ?chocolate
        - ?baguette
        - ?goias
        - ?pennsylvania
        - ?kentucky
        - ?manitoba
        - ?alsace
    -   - feast
        - ?learning
        - ?baguette
        - ?rice
        - ?manitoba
        - ?alsace
    -   - succumb
        - ?abrasion
        - ?learning
        - ?rice
        - ?mercury
        - ?neptune
    -   - succumb
        - ?sciatica
        - ?learning
        - ?rice
        - ?neptune
        - ?vulcan


---
timestamp: '2025-01-08T00:32:30.181032'
level: INFO
issuer: instance_solver
event_type: ground_repair
data:
    repair_length: 0
    repair: ''


---
timestamp: '2025-01-08T00:32:47.768260'
level: ERROR
issuer: node
event_type: error
data:
    current_node:
        depth: 0
        ground_actions: []
        repair_set: null
        g_cost: 0
        h_cost: 0
        f_cost: 0
        next_lifted_action: '[''feast'', ''?achievement'', ''?rice'', ''?bacon'',
            ''?manitoba'', ''?alsace'']'
        num_neighbours: 0
        first_10_possible_groundings: null
        current_state: '''(food marzipan)'', ''(pain boils)'', ''(craves depression
            bacon)'', ''(orbits neptune vulcan)'', ''(pleasure learning)'', ''(eats
            chocolate marzipan)'', ''(pain prostatitis)'', ''(pleasure rest)'', ''(food
            baguette)'', ''(craves excitement arugula)'', ''(eats pepper chocolate)'',
            ''(pain angina)'', ''(eats baguette rice)'', ''(locale baguette manitoba)'',
            ''(locale chocolate goias)'', ''(eats chocolate pepper)'', ''(food pepper)'',
            ''(pain loneliness)'', ''(eats flounder chocolate)'', ''(food chocolate)'',
            ''(locale bacon pennsylvania)'', ''(province pennsylvania)'', ''(craves
            grief baguette)'', ''(pleasure stimulation)'', ''(food wonderbread)'',
            ''(attacks manitoba alsace)'', ''(locale guava pennsylvania)'', ''(eats
            chicken bacon)'', ''(harmony learning vulcan)'', ''(eats rice bacon)'',
            ''(eats guava pepper)'', ''(province manitoba)'', ''(craves loneliness
            bacon)'', ''(pain grief)'', ''(harmony triumph vulcan)'', ''(harmony excitement
            earth)'', ''(craves rest chicken)'', ''(craves angina wonderbread)'',
            ''(locale pepper kentucky)'', ''(eats marzipan chocolate)'', ''(harmony
            satiety neptune)'', ''(pleasure excitement)'', ''(planet mercury)'', ''(planet
            vulcan)'', ''(province goias)'', ''(attacks alsace bosnia)'', ''(craves
            prostatitis chicken)'', ''(harmony rest neptune)'', ''(pleasure triumph)'',
            ''(locale chicken manitoba)'', ''(locale arugula kentucky)'', ''(craves
            satiety wonderbread)'', ''(province alsace)'', ''(province bosnia)'',
            ''(pain depression)'', ''(eats wonderbread flounder)'', ''(craves triumph
            chocolate)'', ''(craves learning baguette)'', ''(eats arugula baguette)'',
            ''(eats chicken marzipan)'', ''(craves abrasion baguette)'', ''(food flounder)'',
            ''(craves jealousy wonderbread)'', ''(locale rice alsace)'', ''(eats pepper
            guava)'', ''(craves stimulation pepper)'', ''(harmony stimulation earth)'',
            ''(craves sciatica baguette)'', ''(food bacon)'', ''(attacks bosnia kentucky)'',
            ''(eats rice baguette)'', ''(eats bacon chicken)'', ''(eats flounder wonderbread)'',
            ''(eats guava baguette)'', ''(food guava)'', ''(eats bacon rice)'', ''(locale
            flounder alsace)'', ''(craves achievement rice)'', ''(attacks pennsylvania
            goias)'', ''(harmony achievement vulcan)'', ''(eats arugula wonderbread)'',
            ''(food arugula)'', ''(orbits mercury neptune)'', ''(pleasure achievement)'',
            ''(pleasure satiety)'', ''(eats marzipan chicken)'', ''(planet earth)'',
            ''(attacks kentucky pennsylvania)'', ''(craves boils pepper)'', ''(pain
            abrasion)'', ''(food chicken)'', ''(locale marzipan manitoba)'', ''(orbits
            vulcan earth)'', ''(food rice)'', ''(eats baguette guava)'', ''(pain jealousy)'',
            ''(pain sciatica)'', ''(planet neptune)'', ''(eats chocolate flounder)'',
            ''(locale wonderbread bosnia)'', ''(province kentucky)'', ''(eats baguette
            arugula)'', ''(eats wonderbread arugula)'''


---
timestamp: '2025-01-08T00:32:47.771895'
level: ERROR
issuer: instance_solver
event_type: error
data: "An error occurred during A* search: . Stack trace: Traceback (most recent call\
    \ last):\n  File \"instance_solver.py\", line 85, in solve_instance\n    searcher.find_path(logger=logger,\
    \ log_interval=log_interval)\n  File \"/home/remote/u7899572/lifted-white-plan-domain-repair/search_partial_grounding/search_algorithms.py\"\
    , line 80, in find_path\n    neighbours = current_node.get_neighbors()\n  File\
    \ \"/home/remote/u7899572/lifted-white-plan-domain-repair/search_partial_grounding/node.py\"\
    , line 171, in get_neighbors\n    self.possible_groundings = Node.grounder(domain,\
    \ task, next_action_pddl)\n  File \"/home/remote/u7899572/lifted-white-plan-domain-repair/search_partial_grounding/lifted_pddl_grounder.py\"\
    , line 135, in ground_pddl\n    actions = parser.get_applicable_actions()\n  File\
    \ \"/home/projects/u7899572/conda-envs/main/lib/python3.8/site-packages/lifted_pddl/parser.py\"\
    , line 485, in get_applicable_actions\n    full_var_assigns = self._get_applicable_var_assigns_action(action,\
    \ [[-1]*len(action_vars)])\n  File \"/home/projects/u7899572/conda-envs/main/lib/python3.8/site-packages/lifted_pddl/parser.py\"\
    , line 471, in _get_applicable_var_assigns_action\n    full_var_assigns = tuple(set([tuple([elem\
    \ for ind, elem in enumerate(var_assign) if ind not in exists_vars]) for var_assign\
    \ in full_var_assigns]))\n  File \"/home/projects/u7899572/conda-envs/main/lib/python3.8/site-packages/lifted_pddl/parser.py\"\
    , line 471, in <listcomp>\n    full_var_assigns = tuple(set([tuple([elem for ind,\
    \ elem in enumerate(var_assign) if ind not in exists_vars]) for var_assign in\
    \ full_var_assigns]))\nMemoryError\n"


---
timestamp: '2025-01-08T00:32:49.033877'
level: INFO
issuer: instance_solver
event_type: timer_seconds
data: '20.61'


---
timestamp: '2025-01-08T00:32:49.062698'
level: INFO
issuer: batch_solver
event_type: general
data: 'Subprocess finished successfully. Duration: 20.80 seconds'


