---
timestamp: '2025-01-07T23:54:27.481540'
level: INFO
issuer: instance_solver
event_type: metadata
data:
    log_file: exp_logs_anu/bfs relax-all lp1-new/mprime__pprob31-err-rate-0-1.yaml
    instance_id: mprime__pprob31-err-rate-0-1
    search_algorithm: bfs
    plan_length: 5
    domain_class: mprime
    instance_name: pprob31-err-rate-0-1
    ground_plan:
    - (feast love ham cantelope quebec kentucky)
    - (overcome prostatitis learning grapefruit earth saturn)
    - (feast learning grapefruit ham alsace quebec)
    - (feast learning ham cantelope alsace quebec)
    - (succumb prostatitis learning cantelope earth saturn)
    lifted_plan:
    -   - feast
        - ?love
        - ?ham
        - ?cantelope
        - ?quebec
        - ?kentucky
    -   - overcome
        - ?prostatitis
        - ?learning
        - ?grapefruit
        - ?earth
        - ?saturn
    -   - feast
        - ?learning
        - ?grapefruit
        - ?ham
        - ?alsace
        - ?quebec
    -   - feast
        - ?learning
        - ?ham
        - ?cantelope
        - ?alsace
        - ?quebec
    -   - succumb
        - ?prostatitis
        - ?learning
        - ?cantelope
        - ?earth
        - ?saturn


---
timestamp: '2025-01-07T23:54:27.485029'
level: INFO
issuer: instance_solver
event_type: ground_repair
data:
    repair_length: 0
    repair: ''


---
timestamp: '2025-01-07T23:54:47.243413'
level: ERROR
issuer: node
event_type: error
data:
    current_node:
        depth: 0
        ground_actions: []
        repair_set: null
        g_cost: 0
        h_cost: 0
        f_cost: 0
        next_lifted_action: '[''feast'', ''?love'', ''?ham'', ''?cantelope'', ''?quebec'',
            ''?kentucky'']'
        num_neighbours: 0
        first_10_possible_groundings: null
        current_state: '''(eats muffin ham)'', ''(eats bacon cantelope)'', ''(locale
            ham kentucky)'', ''(eats bacon chicken)'', ''(craves triumph lemon)'',
            ''(locale muffin quebec)'', ''(eats grapefruit haroset)'', ''(craves hangover
            chicken)'', ''(craves learning grapefruit)'', ''(food lemon)'', ''(pleasure
            learning)'', ''(province quebec)'', ''(food cantelope)'', ''(attacks alsace
            quebec)'', ''(pain loneliness)'', ''(food bacon)'', ''(eats ham cantelope)'',
            ''(orbits earth saturn)'', ''(craves sciatica ham)'', ''(food grapefruit)'',
            ''(orbits saturn neptune)'', ''(eats pistachio lemon)'', ''(food pistachio)'',
            ''(planet earth)'', ''(craves grief grapefruit)'', ''(craves loneliness
            pistachio)'', ''(harmony expectation mars)'', ''(pleasure love)'', ''(harmony
            aesthetics neptune)'', ''(craves aesthetics bacon)'', ''(eats haroset
            grapefruit)'', ''(eats haroset chocolate)'', ''(food haroset)'', ''(eats
            chocolate haroset)'', ''(pain angina)'', ''(craves understanding chicken)'',
            ''(eats chicken muffin)'', ''(eats grapefruit ham)'', ''(pleasure triumph)'',
            ''(harmony triumph saturn)'', ''(province alsace)'', ''(pain grief)'',
            ''(locale grapefruit quebec)'', ''(province kentucky)'', ''(eats ham grapefruit)'',
            ''(eats snickers muffin)'', ''(craves abrasion muffin)'', ''(eats lemon
            bacon)'', ''(craves anger lemon)'', ''(pleasure rest)'', ''(pain dread)'',
            ''(harmony intoxication saturn)'', ''(locale lemon alsace)'', ''(eats
            lemon pistachio)'', ''(harmony learning saturn)'', ''(food chocolate)'',
            ''(craves angina lemon)'', ''(eats chicken bacon)'', ''(orbits neptune
            mars)'', ''(eats ham muffin)'', ''(locale haroset alsace)'', ''(eats cantelope
            bacon)'', ''(locale chicken quebec)'', ''(craves depression cantelope)'',
            ''(eats snickers pistachio)'', ''(food muffin)'', ''(planet mars)'', ''(planet
            neptune)'', ''(craves love ham)'', ''(locale chocolate quebec)'', ''(eats
            cantelope ham)'', ''(craves intoxication snickers)'', ''(pain anger)'',
            ''(locale cantelope quebec)'', ''(pain depression)'', ''(craves expectation
            muffin)'', ''(pleasure aesthetics)'', ''(pain prostatitis)'', ''(eats
            chocolate cantelope)'', ''(eats muffin chicken)'', ''(harmony understanding
            neptune)'', ''(craves rest haroset)'', ''(craves dread cantelope)'', ''(pain
            hangover)'', ''(locale bacon alsace)'', ''(food snickers)'', ''(eats muffin
            snickers)'', ''(pleasure intoxication)'', ''(eats bacon lemon)'', ''(planet
            saturn)'', ''(eats cantelope chocolate)'', ''(attacks quebec kentucky)'',
            ''(pleasure understanding)'', ''(pleasure expectation)'', ''(locale snickers
            kentucky)'', ''(harmony rest mars)'', ''(locale pistachio alsace)'', ''(pain
            sciatica)'', ''(craves prostatitis grapefruit)'', ''(eats pistachio snickers)'',
            ''(pain abrasion)'', ''(food chicken)'', ''(food ham)'', ''(harmony love
            saturn)'''


---
timestamp: '2025-01-07T23:54:47.248484'
level: ERROR
issuer: instance_solver
event_type: error
data: "An error occurred during A* search: . Stack trace: Traceback (most recent call\
    \ last):\n  File \"instance_solver.py\", line 85, in solve_instance\n    searcher.find_path(logger=logger,\
    \ log_interval=log_interval)\n  File \"/home/remote/u7899572/lifted-white-plan-domain-repair/search_partial_grounding/search_algorithms.py\"\
    , line 80, in find_path\n    neighbours = current_node.get_neighbors()\n  File\
    \ \"/home/remote/u7899572/lifted-white-plan-domain-repair/search_partial_grounding/node.py\"\
    , line 171, in get_neighbors\n    self.possible_groundings = Node.grounder(domain,\
    \ task, next_action_pddl)\n  File \"/home/remote/u7899572/lifted-white-plan-domain-repair/search_partial_grounding/lifted_pddl_grounder.py\"\
    , line 135, in ground_pddl\n    actions = parser.get_applicable_actions()\n  File\
    \ \"/home/projects/u7899572/conda-envs/main/lib/python3.8/site-packages/lifted_pddl/parser.py\"\
    , line 485, in get_applicable_actions\n    full_var_assigns = self._get_applicable_var_assigns_action(action,\
    \ [[-1]*len(action_vars)])\n  File \"/home/projects/u7899572/conda-envs/main/lib/python3.8/site-packages/lifted_pddl/parser.py\"\
    , line 471, in _get_applicable_var_assigns_action\n    full_var_assigns = tuple(set([tuple([elem\
    \ for ind, elem in enumerate(var_assign) if ind not in exists_vars]) for var_assign\
    \ in full_var_assigns]))\n  File \"/home/projects/u7899572/conda-envs/main/lib/python3.8/site-packages/lifted_pddl/parser.py\"\
    , line 471, in <listcomp>\n    full_var_assigns = tuple(set([tuple([elem for ind,\
    \ elem in enumerate(var_assign) if ind not in exists_vars]) for var_assign in\
    \ full_var_assigns]))\nMemoryError\n"


---
timestamp: '2025-01-07T23:54:48.409014'
level: INFO
issuer: instance_solver
event_type: timer_seconds
data: '22.05'


---
timestamp: '2025-01-07T23:54:48.434645'
level: INFO
issuer: batch_solver
event_type: general
data: 'Subprocess finished successfully. Duration: 22.32 seconds'


