---
timestamp: '2025-01-08T00:32:18.195570'
level: INFO
issuer: instance_solver
event_type: metadata
data:
    log_file: exp_logs_anu/bfs relax-all lp1-new/mprime__pprob16-err-rate-0-1.yaml
    instance_id: mprime__pprob16-err-rate-0-1
    search_algorithm: bfs
    plan_length: 7
    domain_class: mprime
    instance_name: pprob16-err-rate-0-1
    ground_plan:
    - (feast achievement rice bacon manitoba alsace)
    - (overcome abrasion learning baguette neptune vulcan)
    - (overcome sciatica learning baguette mercury neptune)
    - (drink chocolate baguette goias pennsylvania kentucky manitoba alsace)
    - (feast learning baguette rice manitoba alsace)
    - (succumb abrasion learning rice mercury neptune)
    - (succumb sciatica learning rice neptune vulcan)
    lifted_plan:
    -   - feast
        - ?achievement
        - ?rice
        - ?bacon
        - ?manitoba
        - ?alsace
    -   - overcome
        - ?abrasion
        - ?learning
        - ?baguette
        - ?neptune
        - ?vulcan
    -   - overcome
        - ?sciatica
        - ?learning
        - ?baguette
        - ?mercury
        - ?neptune
    -   - drink
        - ?chocolate
        - ?baguette
        - ?goias
        - ?pennsylvania
        - ?kentucky
        - ?manitoba
        - ?alsace
    -   - feast
        - ?learning
        - ?baguette
        - ?rice
        - ?manitoba
        - ?alsace
    -   - succumb
        - ?abrasion
        - ?learning
        - ?rice
        - ?mercury
        - ?neptune
    -   - succumb
        - ?sciatica
        - ?learning
        - ?rice
        - ?neptune
        - ?vulcan


---
timestamp: '2025-01-08T00:32:18.199461'
level: INFO
issuer: instance_solver
event_type: ground_repair
data:
    repair_length: 0
    repair: ''


---
timestamp: '2025-01-08T00:32:35.383593'
level: ERROR
issuer: node
event_type: error
data:
    current_node:
        depth: 0
        ground_actions: []
        repair_set: null
        g_cost: 0
        h_cost: 0
        f_cost: 0
        next_lifted_action: '[''feast'', ''?achievement'', ''?rice'', ''?bacon'',
            ''?manitoba'', ''?alsace'']'
        num_neighbours: 0
        first_10_possible_groundings: null
        current_state: '''(eats guava baguette)'', ''(harmony triumph vulcan)'', ''(food
            bacon)'', ''(food marzipan)'', ''(food pepper)'', ''(pain sciatica)'',
            ''(locale arugula kentucky)'', ''(eats pepper guava)'', ''(eats wonderbread
            flounder)'', ''(eats pepper chocolate)'', ''(locale bacon pennsylvania)'',
            ''(orbits neptune vulcan)'', ''(pleasure excitement)'', ''(craves satiety
            wonderbread)'', ''(province alsace)'', ''(province manitoba)'', ''(attacks
            manitoba alsace)'', ''(pain grief)'', ''(eats chicken bacon)'', ''(eats
            guava pepper)'', ''(eats chocolate marzipan)'', ''(food flounder)'', ''(locale
            marzipan manitoba)'', ''(pain abrasion)'', ''(eats baguette arugula)'',
            ''(harmony satiety neptune)'', ''(planet mercury)'', ''(pain jealousy)'',
            ''(pain depression)'', ''(eats arugula baguette)'', ''(pleasure achievement)'',
            ''(province pennsylvania)'', ''(province bosnia)'', ''(locale chocolate
            goias)'', ''(eats marzipan chocolate)'', ''(orbits vulcan earth)'', ''(craves
            abrasion baguette)'', ''(attacks kentucky pennsylvania)'', ''(locale chicken
            manitoba)'', ''(craves excitement arugula)'', ''(food chicken)'', ''(locale
            flounder alsace)'', ''(craves sciatica baguette)'', ''(attacks pennsylvania
            goias)'', ''(attacks bosnia kentucky)'', ''(locale baguette manitoba)'',
            ''(pleasure learning)'', ''(eats rice bacon)'', ''(planet neptune)'',
            ''(craves rest chicken)'', ''(food arugula)'', ''(craves depression bacon)'',
            ''(orbits mercury neptune)'', ''(pain boils)'', ''(craves stimulation
            pepper)'', ''(pleasure stimulation)'', ''(province goias)'', ''(province
            kentucky)'', ''(eats bacon chicken)'', ''(eats rice baguette)'', ''(food
            rice)'', ''(eats flounder wonderbread)'', ''(harmony excitement earth)'',
            ''(planet earth)'', ''(locale wonderbread bosnia)'', ''(eats chocolate
            pepper)'', ''(harmony rest neptune)'', ''(planet vulcan)'', ''(locale
            pepper kentucky)'', ''(eats chicken marzipan)'', ''(food guava)'', ''(food
            baguette)'', ''(craves grief baguette)'', ''(attacks alsace bosnia)'',
            ''(food wonderbread)'', ''(craves angina wonderbread)'', ''(pleasure satiety)'',
            ''(eats flounder chocolate)'', ''(craves jealousy wonderbread)'', ''(eats
            bacon rice)'', ''(eats baguette rice)'', ''(craves triumph chocolate)'',
            ''(pain angina)'', ''(pain loneliness)'', ''(eats marzipan chicken)'',
            ''(eats chocolate flounder)'', ''(pleasure rest)'', ''(eats baguette guava)'',
            ''(harmony learning vulcan)'', ''(eats wonderbread arugula)'', ''(harmony
            stimulation earth)'', ''(eats arugula wonderbread)'', ''(locale guava
            pennsylvania)'', ''(food chocolate)'', ''(craves prostatitis chicken)'',
            ''(craves learning baguette)'', ''(craves boils pepper)'', ''(pain prostatitis)'',
            ''(harmony achievement vulcan)'', ''(pleasure triumph)'', ''(craves achievement
            rice)'', ''(locale rice alsace)'', ''(craves loneliness bacon)'''


---
timestamp: '2025-01-08T00:32:35.387232'
level: ERROR
issuer: instance_solver
event_type: error
data: "An error occurred during A* search: . Stack trace: Traceback (most recent call\
    \ last):\n  File \"instance_solver.py\", line 85, in solve_instance\n    searcher.find_path(logger=logger,\
    \ log_interval=log_interval)\n  File \"/home/remote/u7899572/lifted-white-plan-domain-repair/search_partial_grounding/search_algorithms.py\"\
    , line 80, in find_path\n    neighbours = current_node.get_neighbors()\n  File\
    \ \"/home/remote/u7899572/lifted-white-plan-domain-repair/search_partial_grounding/node.py\"\
    , line 171, in get_neighbors\n    self.possible_groundings = Node.grounder(domain,\
    \ task, next_action_pddl)\n  File \"/home/remote/u7899572/lifted-white-plan-domain-repair/search_partial_grounding/lifted_pddl_grounder.py\"\
    , line 135, in ground_pddl\n    actions = parser.get_applicable_actions()\n  File\
    \ \"/home/projects/u7899572/conda-envs/main/lib/python3.8/site-packages/lifted_pddl/parser.py\"\
    , line 485, in get_applicable_actions\n    full_var_assigns = self._get_applicable_var_assigns_action(action,\
    \ [[-1]*len(action_vars)])\n  File \"/home/projects/u7899572/conda-envs/main/lib/python3.8/site-packages/lifted_pddl/parser.py\"\
    , line 471, in _get_applicable_var_assigns_action\n    full_var_assigns = tuple(set([tuple([elem\
    \ for ind, elem in enumerate(var_assign) if ind not in exists_vars]) for var_assign\
    \ in full_var_assigns]))\n  File \"/home/projects/u7899572/conda-envs/main/lib/python3.8/site-packages/lifted_pddl/parser.py\"\
    , line 471, in <listcomp>\n    full_var_assigns = tuple(set([tuple([elem for ind,\
    \ elem in enumerate(var_assign) if ind not in exists_vars]) for var_assign in\
    \ full_var_assigns]))\nMemoryError\n"


---
timestamp: '2025-01-08T00:32:36.691984'
level: INFO
issuer: instance_solver
event_type: timer_seconds
data: '19.66'


---
timestamp: '2025-01-08T00:32:36.720625'
level: INFO
issuer: batch_solver
event_type: general
data: 'Subprocess finished successfully. Duration: 19.94 seconds'


